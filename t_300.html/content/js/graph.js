/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 260.0, "minX": 0.0, "maxY": 13505.0, "series": [{"data": [[0.0, 260.0], [0.1, 260.0], [0.2, 260.0], [0.3, 260.0], [0.4, 267.0], [0.5, 267.0], [0.6, 267.0], [0.7, 268.0], [0.8, 268.0], [0.9, 268.0], [1.0, 268.0], [1.1, 268.0], [1.2, 268.0], [1.3, 268.0], [1.4, 268.0], [1.5, 268.0], [1.6, 268.0], [1.7, 268.0], [1.8, 268.0], [1.9, 268.0], [2.0, 269.0], [2.1, 269.0], [2.2, 269.0], [2.3, 269.0], [2.4, 269.0], [2.5, 269.0], [2.6, 269.0], [2.7, 269.0], [2.8, 269.0], [2.9, 269.0], [3.0, 269.0], [3.1, 269.0], [3.2, 269.0], [3.3, 269.0], [3.4, 269.0], [3.5, 269.0], [3.6, 269.0], [3.7, 269.0], [3.8, 269.0], [3.9, 269.0], [4.0, 270.0], [4.1, 270.0], [4.2, 270.0], [4.3, 270.0], [4.4, 270.0], [4.5, 270.0], [4.6, 270.0], [4.7, 270.0], [4.8, 270.0], [4.9, 270.0], [5.0, 270.0], [5.1, 270.0], [5.2, 270.0], [5.3, 270.0], [5.4, 271.0], [5.5, 271.0], [5.6, 271.0], [5.7, 271.0], [5.8, 271.0], [5.9, 271.0], [6.0, 271.0], [6.1, 271.0], [6.2, 271.0], [6.3, 271.0], [6.4, 272.0], [6.5, 272.0], [6.6, 272.0], [6.7, 272.0], [6.8, 272.0], [6.9, 272.0], [7.0, 272.0], [7.1, 272.0], [7.2, 272.0], [7.3, 272.0], [7.4, 272.0], [7.5, 272.0], [7.6, 272.0], [7.7, 273.0], [7.8, 273.0], [7.9, 273.0], [8.0, 273.0], [8.1, 273.0], [8.2, 273.0], [8.3, 273.0], [8.4, 273.0], [8.5, 273.0], [8.6, 273.0], [8.7, 273.0], [8.8, 273.0], [8.9, 273.0], [9.0, 274.0], [9.1, 274.0], [9.2, 274.0], [9.3, 274.0], [9.4, 274.0], [9.5, 274.0], [9.6, 274.0], [9.7, 274.0], [9.8, 274.0], [9.9, 274.0], [10.0, 274.0], [10.1, 274.0], [10.2, 274.0], [10.3, 274.0], [10.4, 275.0], [10.5, 275.0], [10.6, 275.0], [10.7, 275.0], [10.8, 275.0], [10.9, 275.0], [11.0, 275.0], [11.1, 275.0], [11.2, 275.0], [11.3, 275.0], [11.4, 275.0], [11.5, 275.0], [11.6, 275.0], [11.7, 275.0], [11.8, 275.0], [11.9, 275.0], [12.0, 275.0], [12.1, 275.0], [12.2, 275.0], [12.3, 275.0], [12.4, 276.0], [12.5, 276.0], [12.6, 276.0], [12.7, 276.0], [12.8, 276.0], [12.9, 276.0], [13.0, 276.0], [13.1, 276.0], [13.2, 276.0], [13.3, 276.0], [13.4, 277.0], [13.5, 277.0], [13.6, 277.0], [13.7, 277.0], [13.8, 277.0], [13.9, 277.0], [14.0, 277.0], [14.1, 277.0], [14.2, 277.0], [14.3, 277.0], [14.4, 277.0], [14.5, 277.0], [14.6, 277.0], [14.7, 277.0], [14.8, 277.0], [14.9, 277.0], [15.0, 277.0], [15.1, 277.0], [15.2, 277.0], [15.3, 277.0], [15.4, 278.0], [15.5, 278.0], [15.6, 278.0], [15.7, 278.0], [15.8, 278.0], [15.9, 278.0], [16.0, 279.0], [16.1, 279.0], [16.2, 279.0], [16.3, 279.0], [16.4, 279.0], [16.5, 279.0], [16.6, 279.0], [16.7, 279.0], [16.8, 279.0], [16.9, 279.0], [17.0, 279.0], [17.1, 279.0], [17.2, 279.0], [17.3, 279.0], [17.4, 279.0], [17.5, 279.0], [17.6, 279.0], [17.7, 279.0], [17.8, 279.0], [17.9, 279.0], [18.0, 279.0], [18.1, 279.0], [18.2, 279.0], [18.3, 279.0], [18.4, 279.0], [18.5, 279.0], [18.6, 279.0], [18.7, 280.0], [18.8, 280.0], [18.9, 280.0], [19.0, 280.0], [19.1, 280.0], [19.2, 280.0], [19.3, 280.0], [19.4, 280.0], [19.5, 280.0], [19.6, 280.0], [19.7, 280.0], [19.8, 280.0], [19.9, 280.0], [20.0, 281.0], [20.1, 281.0], [20.2, 281.0], [20.3, 281.0], [20.4, 281.0], [20.5, 281.0], [20.6, 281.0], [20.7, 281.0], [20.8, 281.0], [20.9, 281.0], [21.0, 281.0], [21.1, 281.0], [21.2, 281.0], [21.3, 281.0], [21.4, 281.0], [21.5, 281.0], [21.6, 281.0], [21.7, 282.0], [21.8, 282.0], [21.9, 282.0], [22.0, 282.0], [22.1, 282.0], [22.2, 282.0], [22.3, 282.0], [22.4, 282.0], [22.5, 282.0], [22.6, 282.0], [22.7, 282.0], [22.8, 282.0], [22.9, 282.0], [23.0, 282.0], [23.1, 282.0], [23.2, 282.0], [23.3, 282.0], [23.4, 282.0], [23.5, 282.0], [23.6, 282.0], [23.7, 283.0], [23.8, 283.0], [23.9, 283.0], [24.0, 283.0], [24.1, 283.0], [24.2, 283.0], [24.3, 283.0], [24.4, 283.0], [24.5, 283.0], [24.6, 283.0], [24.7, 283.0], [24.8, 283.0], [24.9, 283.0], [25.0, 283.0], [25.1, 283.0], [25.2, 283.0], [25.3, 283.0], [25.4, 283.0], [25.5, 283.0], [25.6, 283.0], [25.7, 283.0], [25.8, 283.0], [25.9, 283.0], [26.0, 283.0], [26.1, 283.0], [26.2, 283.0], [26.3, 283.0], [26.4, 283.0], [26.5, 283.0], [26.6, 283.0], [26.7, 283.0], [26.8, 283.0], [26.9, 283.0], [27.0, 284.0], [27.1, 284.0], [27.2, 284.0], [27.3, 284.0], [27.4, 284.0], [27.5, 284.0], [27.6, 284.0], [27.7, 284.0], [27.8, 284.0], [27.9, 284.0], [28.0, 284.0], [28.1, 284.0], [28.2, 284.0], [28.3, 284.0], [28.4, 284.0], [28.5, 284.0], [28.6, 284.0], [28.7, 284.0], [28.8, 284.0], [28.9, 284.0], [29.0, 284.0], [29.1, 284.0], [29.2, 284.0], [29.3, 284.0], [29.4, 285.0], [29.5, 285.0], [29.6, 285.0], [29.7, 285.0], [29.8, 285.0], [29.9, 285.0], [30.0, 285.0], [30.1, 285.0], [30.2, 285.0], [30.3, 285.0], [30.4, 286.0], [30.5, 286.0], [30.6, 286.0], [30.7, 286.0], [30.8, 286.0], [30.9, 286.0], [31.0, 286.0], [31.1, 286.0], [31.2, 286.0], [31.3, 286.0], [31.4, 286.0], [31.5, 286.0], [31.6, 286.0], [31.7, 286.0], [31.8, 286.0], [31.9, 286.0], [32.0, 286.0], [32.1, 286.0], [32.2, 286.0], [32.3, 286.0], [32.4, 286.0], [32.5, 286.0], [32.6, 286.0], [32.7, 287.0], [32.8, 287.0], [32.9, 287.0], [33.0, 287.0], [33.1, 287.0], [33.2, 287.0], [33.3, 287.0], [33.4, 287.0], [33.5, 287.0], [33.6, 287.0], [33.7, 287.0], [33.8, 287.0], [33.9, 287.0], [34.0, 287.0], [34.1, 287.0], [34.2, 287.0], [34.3, 287.0], [34.4, 287.0], [34.5, 287.0], [34.6, 287.0], [34.7, 287.0], [34.8, 287.0], [34.9, 287.0], [35.0, 287.0], [35.1, 287.0], [35.2, 287.0], [35.3, 287.0], [35.4, 287.0], [35.5, 287.0], [35.6, 287.0], [35.7, 287.0], [35.8, 287.0], [35.9, 287.0], [36.0, 287.0], [36.1, 287.0], [36.2, 287.0], [36.3, 287.0], [36.4, 288.0], [36.5, 288.0], [36.6, 288.0], [36.7, 288.0], [36.8, 288.0], [36.9, 288.0], [37.0, 288.0], [37.1, 288.0], [37.2, 288.0], [37.3, 288.0], [37.4, 289.0], [37.5, 289.0], [37.6, 289.0], [37.7, 289.0], [37.8, 289.0], [37.9, 289.0], [38.0, 289.0], [38.1, 289.0], [38.2, 289.0], [38.3, 289.0], [38.4, 289.0], [38.5, 289.0], [38.6, 289.0], [38.7, 289.0], [38.8, 289.0], [38.9, 289.0], [39.0, 290.0], [39.1, 290.0], [39.2, 290.0], [39.3, 290.0], [39.4, 290.0], [39.5, 290.0], [39.6, 290.0], [39.7, 290.0], [39.8, 290.0], [39.9, 290.0], [40.0, 290.0], [40.1, 290.0], [40.2, 290.0], [40.3, 290.0], [40.4, 290.0], [40.5, 290.0], [40.6, 290.0], [40.7, 290.0], [40.8, 290.0], [40.9, 290.0], [41.0, 290.0], [41.1, 290.0], [41.2, 290.0], [41.3, 290.0], [41.4, 291.0], [41.5, 291.0], [41.6, 291.0], [41.7, 291.0], [41.8, 291.0], [41.9, 291.0], [42.0, 291.0], [42.1, 291.0], [42.2, 291.0], [42.3, 291.0], [42.4, 292.0], [42.5, 292.0], [42.6, 292.0], [42.7, 292.0], [42.8, 292.0], [42.9, 292.0], [43.0, 292.0], [43.1, 292.0], [43.2, 292.0], [43.3, 292.0], [43.4, 293.0], [43.5, 293.0], [43.6, 293.0], [43.7, 293.0], [43.8, 293.0], [43.9, 293.0], [44.0, 293.0], [44.1, 293.0], [44.2, 293.0], [44.3, 293.0], [44.4, 293.0], [44.5, 293.0], [44.6, 293.0], [44.7, 294.0], [44.8, 294.0], [44.9, 294.0], [45.0, 294.0], [45.1, 294.0], [45.2, 294.0], [45.3, 294.0], [45.4, 296.0], [45.5, 296.0], [45.6, 296.0], [45.7, 298.0], [45.8, 298.0], [45.9, 298.0], [46.0, 319.0], [46.1, 319.0], [46.2, 319.0], [46.3, 319.0], [46.4, 320.0], [46.5, 320.0], [46.6, 320.0], [46.7, 325.0], [46.8, 325.0], [46.9, 325.0], [47.0, 325.0], [47.1, 339.0], [47.2, 339.0], [47.3, 339.0], [47.4, 346.0], [47.5, 346.0], [47.6, 346.0], [47.7, 351.0], [47.8, 351.0], [47.9, 351.0], [48.0, 351.0], [48.1, 351.0], [48.2, 351.0], [48.3, 351.0], [48.4, 354.0], [48.5, 354.0], [48.6, 354.0], [48.7, 359.0], [48.8, 359.0], [48.9, 359.0], [49.0, 359.0], [49.1, 362.0], [49.2, 362.0], [49.3, 362.0], [49.4, 364.0], [49.5, 364.0], [49.6, 364.0], [49.7, 369.0], [49.8, 369.0], [49.9, 369.0], [50.0, 369.0], [50.1, 369.0], [50.2, 369.0], [50.3, 369.0], [50.4, 371.0], [50.5, 371.0], [50.6, 371.0], [50.7, 374.0], [50.8, 374.0], [50.9, 374.0], [51.0, 374.0], [51.1, 374.0], [51.2, 374.0], [51.3, 374.0], [51.4, 379.0], [51.5, 379.0], [51.6, 379.0], [51.7, 384.0], [51.8, 384.0], [51.9, 384.0], [52.0, 384.0], [52.1, 385.0], [52.2, 385.0], [52.3, 385.0], [52.4, 386.0], [52.5, 386.0], [52.6, 386.0], [52.7, 388.0], [52.8, 388.0], [52.9, 388.0], [53.0, 388.0], [53.1, 388.0], [53.2, 388.0], [53.3, 388.0], [53.4, 390.0], [53.5, 390.0], [53.6, 390.0], [53.7, 391.0], [53.8, 391.0], [53.9, 391.0], [54.0, 391.0], [54.1, 393.0], [54.2, 393.0], [54.3, 393.0], [54.4, 394.0], [54.5, 394.0], [54.6, 394.0], [54.7, 394.0], [54.8, 394.0], [54.9, 394.0], [55.0, 394.0], [55.1, 396.0], [55.2, 396.0], [55.3, 396.0], [55.4, 398.0], [55.5, 398.0], [55.6, 398.0], [55.7, 399.0], [55.8, 399.0], [55.9, 399.0], [56.0, 399.0], [56.1, 399.0], [56.2, 399.0], [56.3, 399.0], [56.4, 400.0], [56.5, 400.0], [56.6, 400.0], [56.7, 403.0], [56.8, 403.0], [56.9, 403.0], [57.0, 403.0], [57.1, 404.0], [57.2, 404.0], [57.3, 404.0], [57.4, 404.0], [57.5, 404.0], [57.6, 404.0], [57.7, 406.0], [57.8, 406.0], [57.9, 406.0], [58.0, 406.0], [58.1, 406.0], [58.2, 406.0], [58.3, 406.0], [58.4, 408.0], [58.5, 408.0], [58.6, 408.0], [58.7, 408.0], [58.8, 408.0], [58.9, 408.0], [59.0, 408.0], [59.1, 409.0], [59.2, 409.0], [59.3, 409.0], [59.4, 410.0], [59.5, 410.0], [59.6, 410.0], [59.7, 410.0], [59.8, 410.0], [59.9, 410.0], [60.0, 410.0], [60.1, 411.0], [60.2, 411.0], [60.3, 411.0], [60.4, 412.0], [60.5, 412.0], [60.6, 412.0], [60.7, 415.0], [60.8, 415.0], [60.9, 415.0], [61.0, 415.0], [61.1, 418.0], [61.2, 418.0], [61.3, 418.0], [61.4, 419.0], [61.5, 419.0], [61.6, 419.0], [61.7, 419.0], [61.8, 419.0], [61.9, 419.0], [62.0, 419.0], [62.1, 424.0], [62.2, 424.0], [62.3, 424.0], [62.4, 424.0], [62.5, 424.0], [62.6, 424.0], [62.7, 424.0], [62.8, 424.0], [62.9, 424.0], [63.0, 424.0], [63.1, 425.0], [63.2, 425.0], [63.3, 425.0], [63.4, 425.0], [63.5, 425.0], [63.6, 425.0], [63.7, 430.0], [63.8, 430.0], [63.9, 430.0], [64.0, 430.0], [64.1, 431.0], [64.2, 431.0], [64.3, 431.0], [64.4, 431.0], [64.5, 431.0], [64.6, 431.0], [64.7, 432.0], [64.8, 432.0], [64.9, 432.0], [65.0, 432.0], [65.1, 432.0], [65.2, 432.0], [65.3, 432.0], [65.4, 433.0], [65.5, 433.0], [65.6, 433.0], [65.7, 435.0], [65.8, 435.0], [65.9, 435.0], [66.0, 435.0], [66.1, 435.0], [66.2, 435.0], [66.3, 435.0], [66.4, 436.0], [66.5, 436.0], [66.6, 436.0], [66.7, 437.0], [66.8, 437.0], [66.9, 437.0], [67.0, 437.0], [67.1, 437.0], [67.2, 437.0], [67.3, 437.0], [67.4, 437.0], [67.5, 437.0], [67.6, 437.0], [67.7, 438.0], [67.8, 438.0], [67.9, 438.0], [68.0, 438.0], [68.1, 438.0], [68.2, 438.0], [68.3, 438.0], [68.4, 438.0], [68.5, 438.0], [68.6, 438.0], [68.7, 438.0], [68.8, 438.0], [68.9, 438.0], [69.0, 438.0], [69.1, 439.0], [69.2, 439.0], [69.3, 439.0], [69.4, 440.0], [69.5, 440.0], [69.6, 440.0], [69.7, 441.0], [69.8, 441.0], [69.9, 441.0], [70.0, 441.0], [70.1, 443.0], [70.2, 443.0], [70.3, 443.0], [70.4, 445.0], [70.5, 445.0], [70.6, 445.0], [70.7, 447.0], [70.8, 447.0], [70.9, 447.0], [71.0, 449.0], [71.1, 449.0], [71.2, 449.0], [71.3, 449.0], [71.4, 449.0], [71.5, 449.0], [71.6, 449.0], [71.7, 450.0], [71.8, 450.0], [71.9, 450.0], [72.0, 450.0], [72.1, 450.0], [72.2, 450.0], [72.3, 450.0], [72.4, 451.0], [72.5, 451.0], [72.6, 451.0], [72.7, 453.0], [72.8, 453.0], [72.9, 453.0], [73.0, 457.0], [73.1, 457.0], [73.2, 457.0], [73.3, 457.0], [73.4, 457.0], [73.5, 457.0], [73.6, 457.0], [73.7, 458.0], [73.8, 458.0], [73.9, 458.0], [74.0, 458.0], [74.1, 458.0], [74.2, 458.0], [74.3, 458.0], [74.4, 459.0], [74.5, 459.0], [74.6, 459.0], [74.7, 460.0], [74.8, 460.0], [74.9, 460.0], [75.0, 460.0], [75.1, 460.0], [75.2, 460.0], [75.3, 460.0], [75.4, 464.0], [75.5, 464.0], [75.6, 464.0], [75.7, 466.0], [75.8, 466.0], [75.9, 466.0], [76.0, 466.0], [76.1, 466.0], [76.2, 466.0], [76.3, 466.0], [76.4, 468.0], [76.5, 468.0], [76.6, 468.0], [76.7, 468.0], [76.8, 468.0], [76.9, 468.0], [77.0, 468.0], [77.1, 469.0], [77.2, 469.0], [77.3, 469.0], [77.4, 469.0], [77.5, 469.0], [77.6, 469.0], [77.7, 470.0], [77.8, 470.0], [77.9, 470.0], [78.0, 470.0], [78.1, 470.0], [78.2, 470.0], [78.3, 470.0], [78.4, 470.0], [78.5, 470.0], [78.6, 470.0], [78.7, 471.0], [78.8, 471.0], [78.9, 471.0], [79.0, 471.0], [79.1, 471.0], [79.2, 471.0], [79.3, 471.0], [79.4, 473.0], [79.5, 473.0], [79.6, 473.0], [79.7, 474.0], [79.8, 474.0], [79.9, 474.0], [80.0, 474.0], [80.1, 474.0], [80.2, 474.0], [80.3, 474.0], [80.4, 476.0], [80.5, 476.0], [80.6, 476.0], [80.7, 477.0], [80.8, 477.0], [80.9, 477.0], [81.0, 477.0], [81.1, 478.0], [81.2, 478.0], [81.3, 478.0], [81.4, 482.0], [81.5, 482.0], [81.6, 482.0], [81.7, 482.0], [81.8, 482.0], [81.9, 482.0], [82.0, 482.0], [82.1, 483.0], [82.2, 483.0], [82.3, 483.0], [82.4, 486.0], [82.5, 486.0], [82.6, 486.0], [82.7, 491.0], [82.8, 491.0], [82.9, 491.0], [83.0, 510.0], [83.1, 510.0], [83.2, 510.0], [83.3, 510.0], [83.4, 903.0], [83.5, 903.0], [83.6, 903.0], [83.7, 946.0], [83.8, 946.0], [83.9, 946.0], [84.0, 992.0], [84.1, 992.0], [84.2, 992.0], [84.3, 992.0], [84.4, 1034.0], [84.5, 1034.0], [84.6, 1034.0], [84.7, 1044.0], [84.8, 1044.0], [84.9, 1044.0], [85.0, 1047.0], [85.1, 1047.0], [85.2, 1047.0], [85.3, 1047.0], [85.4, 1048.0], [85.5, 1048.0], [85.6, 1048.0], [85.7, 1080.0], [85.8, 1080.0], [85.9, 1080.0], [86.0, 1084.0], [86.1, 1084.0], [86.2, 1084.0], [86.3, 1084.0], [86.4, 1087.0], [86.5, 1087.0], [86.6, 1087.0], [86.7, 1098.0], [86.8, 1098.0], [86.9, 1098.0], [87.0, 1128.0], [87.1, 1128.0], [87.2, 1128.0], [87.3, 1128.0], [87.4, 1162.0], [87.5, 1162.0], [87.6, 1162.0], [87.7, 1176.0], [87.8, 1176.0], [87.9, 1176.0], [88.0, 1210.0], [88.1, 1210.0], [88.2, 1210.0], [88.3, 1210.0], [88.4, 1225.0], [88.5, 1225.0], [88.6, 1225.0], [88.7, 1228.0], [88.8, 1228.0], [88.9, 1228.0], [89.0, 1246.0], [89.1, 1246.0], [89.2, 1246.0], [89.3, 1246.0], [89.4, 1251.0], [89.5, 1251.0], [89.6, 1251.0], [89.7, 1264.0], [89.8, 1264.0], [89.9, 1264.0], [90.0, 1268.0], [90.1, 1268.0], [90.2, 1268.0], [90.3, 1268.0], [90.4, 1299.0], [90.5, 1299.0], [90.6, 1299.0], [90.7, 1301.0], [90.8, 1301.0], [90.9, 1301.0], [91.0, 1304.0], [91.1, 1304.0], [91.2, 1304.0], [91.3, 1304.0], [91.4, 1312.0], [91.5, 1312.0], [91.6, 1312.0], [91.7, 1329.0], [91.8, 1329.0], [91.9, 1329.0], [92.0, 1329.0], [92.1, 1329.0], [92.2, 1329.0], [92.3, 1329.0], [92.4, 1337.0], [92.5, 1337.0], [92.6, 1337.0], [92.7, 1344.0], [92.8, 1344.0], [92.9, 1344.0], [93.0, 1356.0], [93.1, 1356.0], [93.2, 1356.0], [93.3, 1356.0], [93.4, 1362.0], [93.5, 1362.0], [93.6, 1362.0], [93.7, 1373.0], [93.8, 1373.0], [93.9, 1373.0], [94.0, 1373.0], [94.1, 1373.0], [94.2, 1373.0], [94.3, 1373.0], [94.4, 1379.0], [94.5, 1379.0], [94.6, 1379.0], [94.7, 1383.0], [94.8, 1383.0], [94.9, 1383.0], [95.0, 1396.0], [95.1, 1396.0], [95.2, 1396.0], [95.3, 1396.0], [95.4, 1397.0], [95.5, 1397.0], [95.6, 1397.0], [95.7, 1404.0], [95.8, 1404.0], [95.9, 1404.0], [96.0, 1438.0], [96.1, 1438.0], [96.2, 1438.0], [96.3, 1438.0], [96.4, 1441.0], [96.5, 1441.0], [96.6, 1441.0], [96.7, 1451.0], [96.8, 1451.0], [96.9, 1451.0], [97.0, 1464.0], [97.1, 1464.0], [97.2, 1464.0], [97.3, 1464.0], [97.4, 1483.0], [97.5, 1483.0], [97.6, 1483.0], [97.7, 1498.0], [97.8, 1498.0], [97.9, 1498.0], [98.0, 1523.0], [98.1, 1523.0], [98.2, 1523.0], [98.3, 1523.0], [98.4, 1589.0], [98.5, 1589.0], [98.6, 1589.0], [98.7, 1624.0], [98.8, 1624.0], [98.9, 1624.0], [99.0, 2249.0], [99.1, 2249.0], [99.2, 2249.0], [99.3, 2249.0], [99.4, 2750.0], [99.5, 2750.0], [99.6, 2750.0], [99.7, 4823.0], [99.8, 4823.0], [99.9, 4823.0]], "isOverall": false, "label": "GetBookingIds ", "isController": false}, {"data": [[0.0, 265.0], [0.1, 265.0], [0.2, 265.0], [0.3, 265.0], [0.4, 265.0], [0.5, 265.0], [0.6, 265.0], [0.7, 267.0], [0.8, 267.0], [0.9, 267.0], [1.0, 267.0], [1.1, 267.0], [1.2, 267.0], [1.3, 267.0], [1.4, 267.0], [1.5, 267.0], [1.6, 267.0], [1.7, 268.0], [1.8, 268.0], [1.9, 268.0], [2.0, 269.0], [2.1, 269.0], [2.2, 269.0], [2.3, 269.0], [2.4, 269.0], [2.5, 269.0], [2.6, 269.0], [2.7, 269.0], [2.8, 269.0], [2.9, 269.0], [3.0, 269.0], [3.1, 269.0], [3.2, 269.0], [3.3, 269.0], [3.4, 270.0], [3.5, 270.0], [3.6, 270.0], [3.7, 271.0], [3.8, 271.0], [3.9, 271.0], [4.0, 271.0], [4.1, 271.0], [4.2, 271.0], [4.3, 271.0], [4.4, 272.0], [4.5, 272.0], [4.6, 272.0], [4.7, 272.0], [4.8, 272.0], [4.9, 272.0], [5.0, 272.0], [5.1, 272.0], [5.2, 272.0], [5.3, 272.0], [5.4, 272.0], [5.5, 272.0], [5.6, 272.0], [5.7, 272.0], [5.8, 272.0], [5.9, 272.0], [6.0, 273.0], [6.1, 273.0], [6.2, 273.0], [6.3, 273.0], [6.4, 274.0], [6.5, 274.0], [6.6, 274.0], [6.7, 274.0], [6.8, 274.0], [6.9, 274.0], [7.0, 274.0], [7.1, 274.0], [7.2, 274.0], [7.3, 274.0], [7.4, 274.0], [7.5, 274.0], [7.6, 274.0], [7.7, 274.0], [7.8, 274.0], [7.9, 274.0], [8.0, 274.0], [8.1, 274.0], [8.2, 274.0], [8.3, 274.0], [8.4, 274.0], [8.5, 274.0], [8.6, 274.0], [8.7, 275.0], [8.8, 275.0], [8.9, 275.0], [9.0, 275.0], [9.1, 275.0], [9.2, 275.0], [9.3, 275.0], [9.4, 275.0], [9.5, 275.0], [9.6, 275.0], [9.7, 275.0], [9.8, 275.0], [9.9, 275.0], [10.0, 275.0], [10.1, 275.0], [10.2, 275.0], [10.3, 275.0], [10.4, 275.0], [10.5, 275.0], [10.6, 275.0], [10.7, 276.0], [10.8, 276.0], [10.9, 276.0], [11.0, 276.0], [11.1, 276.0], [11.2, 276.0], [11.3, 276.0], [11.4, 276.0], [11.5, 276.0], [11.6, 276.0], [11.7, 276.0], [11.8, 276.0], [11.9, 276.0], [12.0, 276.0], [12.1, 276.0], [12.2, 276.0], [12.3, 276.0], [12.4, 277.0], [12.5, 277.0], [12.6, 277.0], [12.7, 277.0], [12.8, 277.0], [12.9, 277.0], [13.0, 277.0], [13.1, 277.0], [13.2, 277.0], [13.3, 277.0], [13.4, 277.0], [13.5, 277.0], [13.6, 277.0], [13.7, 277.0], [13.8, 277.0], [13.9, 277.0], [14.0, 277.0], [14.1, 277.0], [14.2, 277.0], [14.3, 277.0], [14.4, 277.0], [14.5, 277.0], [14.6, 277.0], [14.7, 278.0], [14.8, 278.0], [14.9, 278.0], [15.0, 278.0], [15.1, 278.0], [15.2, 278.0], [15.3, 278.0], [15.4, 278.0], [15.5, 278.0], [15.6, 278.0], [15.7, 278.0], [15.8, 278.0], [15.9, 278.0], [16.0, 278.0], [16.1, 278.0], [16.2, 278.0], [16.3, 278.0], [16.4, 278.0], [16.5, 278.0], [16.6, 278.0], [16.7, 278.0], [16.8, 278.0], [16.9, 278.0], [17.0, 278.0], [17.1, 278.0], [17.2, 278.0], [17.3, 278.0], [17.4, 278.0], [17.5, 278.0], [17.6, 278.0], [17.7, 279.0], [17.8, 279.0], [17.9, 279.0], [18.0, 279.0], [18.1, 279.0], [18.2, 279.0], [18.3, 279.0], [18.4, 279.0], [18.5, 279.0], [18.6, 279.0], [18.7, 279.0], [18.8, 279.0], [18.9, 279.0], [19.0, 280.0], [19.1, 280.0], [19.2, 280.0], [19.3, 280.0], [19.4, 280.0], [19.5, 280.0], [19.6, 280.0], [19.7, 280.0], [19.8, 280.0], [19.9, 280.0], [20.0, 280.0], [20.1, 280.0], [20.2, 280.0], [20.3, 280.0], [20.4, 280.0], [20.5, 280.0], [20.6, 280.0], [20.7, 280.0], [20.8, 280.0], [20.9, 280.0], [21.0, 280.0], [21.1, 280.0], [21.2, 280.0], [21.3, 280.0], [21.4, 280.0], [21.5, 280.0], [21.6, 280.0], [21.7, 280.0], [21.8, 280.0], [21.9, 280.0], [22.0, 280.0], [22.1, 280.0], [22.2, 280.0], [22.3, 280.0], [22.4, 280.0], [22.5, 280.0], [22.6, 280.0], [22.7, 281.0], [22.8, 281.0], [22.9, 281.0], [23.0, 281.0], [23.1, 281.0], [23.2, 281.0], [23.3, 281.0], [23.4, 281.0], [23.5, 281.0], [23.6, 281.0], [23.7, 281.0], [23.8, 281.0], [23.9, 281.0], [24.0, 281.0], [24.1, 281.0], [24.2, 281.0], [24.3, 281.0], [24.4, 281.0], [24.5, 281.0], [24.6, 281.0], [24.7, 281.0], [24.8, 281.0], [24.9, 281.0], [25.0, 281.0], [25.1, 281.0], [25.2, 281.0], [25.3, 281.0], [25.4, 281.0], [25.5, 281.0], [25.6, 281.0], [25.7, 281.0], [25.8, 281.0], [25.9, 281.0], [26.0, 282.0], [26.1, 282.0], [26.2, 282.0], [26.3, 282.0], [26.4, 282.0], [26.5, 282.0], [26.6, 282.0], [26.7, 282.0], [26.8, 282.0], [26.9, 282.0], [27.0, 282.0], [27.1, 282.0], [27.2, 282.0], [27.3, 282.0], [27.4, 282.0], [27.5, 282.0], [27.6, 282.0], [27.7, 282.0], [27.8, 282.0], [27.9, 282.0], [28.0, 283.0], [28.1, 283.0], [28.2, 283.0], [28.3, 283.0], [28.4, 283.0], [28.5, 283.0], [28.6, 283.0], [28.7, 284.0], [28.8, 284.0], [28.9, 284.0], [29.0, 284.0], [29.1, 284.0], [29.2, 284.0], [29.3, 284.0], [29.4, 284.0], [29.5, 284.0], [29.6, 284.0], [29.7, 284.0], [29.8, 284.0], [29.9, 284.0], [30.0, 284.0], [30.1, 284.0], [30.2, 284.0], [30.3, 284.0], [30.4, 284.0], [30.5, 284.0], [30.6, 284.0], [30.7, 284.0], [30.8, 284.0], [30.9, 284.0], [31.0, 284.0], [31.1, 284.0], [31.2, 284.0], [31.3, 284.0], [31.4, 284.0], [31.5, 284.0], [31.6, 284.0], [31.7, 284.0], [31.8, 284.0], [31.9, 284.0], [32.0, 284.0], [32.1, 284.0], [32.2, 284.0], [32.3, 284.0], [32.4, 285.0], [32.5, 285.0], [32.6, 285.0], [32.7, 285.0], [32.8, 285.0], [32.9, 285.0], [33.0, 285.0], [33.1, 285.0], [33.2, 285.0], [33.3, 285.0], [33.4, 285.0], [33.5, 285.0], [33.6, 285.0], [33.7, 285.0], [33.8, 285.0], [33.9, 285.0], [34.0, 285.0], [34.1, 285.0], [34.2, 285.0], [34.3, 285.0], [34.4, 285.0], [34.5, 285.0], [34.6, 285.0], [34.7, 285.0], [34.8, 285.0], [34.9, 285.0], [35.0, 285.0], [35.1, 285.0], [35.2, 285.0], [35.3, 285.0], [35.4, 286.0], [35.5, 286.0], [35.6, 286.0], [35.7, 286.0], [35.8, 286.0], [35.9, 286.0], [36.0, 286.0], [36.1, 286.0], [36.2, 286.0], [36.3, 286.0], [36.4, 286.0], [36.5, 286.0], [36.6, 286.0], [36.7, 286.0], [36.8, 286.0], [36.9, 286.0], [37.0, 286.0], [37.1, 286.0], [37.2, 286.0], [37.3, 286.0], [37.4, 287.0], [37.5, 287.0], [37.6, 287.0], [37.7, 287.0], [37.8, 287.0], [37.9, 287.0], [38.0, 287.0], [38.1, 287.0], [38.2, 287.0], [38.3, 287.0], [38.4, 288.0], [38.5, 288.0], [38.6, 288.0], [38.7, 288.0], [38.8, 288.0], [38.9, 288.0], [39.0, 288.0], [39.1, 288.0], [39.2, 288.0], [39.3, 288.0], [39.4, 288.0], [39.5, 288.0], [39.6, 288.0], [39.7, 288.0], [39.8, 288.0], [39.9, 288.0], [40.0, 288.0], [40.1, 288.0], [40.2, 288.0], [40.3, 288.0], [40.4, 288.0], [40.5, 288.0], [40.6, 288.0], [40.7, 288.0], [40.8, 288.0], [40.9, 288.0], [41.0, 289.0], [41.1, 289.0], [41.2, 289.0], [41.3, 289.0], [41.4, 289.0], [41.5, 289.0], [41.6, 289.0], [41.7, 289.0], [41.8, 289.0], [41.9, 289.0], [42.0, 289.0], [42.1, 289.0], [42.2, 289.0], [42.3, 289.0], [42.4, 289.0], [42.5, 289.0], [42.6, 289.0], [42.7, 290.0], [42.8, 290.0], [42.9, 290.0], [43.0, 290.0], [43.1, 290.0], [43.2, 290.0], [43.3, 290.0], [43.4, 290.0], [43.5, 290.0], [43.6, 290.0], [43.7, 290.0], [43.8, 290.0], [43.9, 290.0], [44.0, 291.0], [44.1, 291.0], [44.2, 291.0], [44.3, 291.0], [44.4, 291.0], [44.5, 291.0], [44.6, 291.0], [44.7, 292.0], [44.8, 292.0], [44.9, 292.0], [45.0, 292.0], [45.1, 292.0], [45.2, 292.0], [45.3, 292.0], [45.4, 292.0], [45.5, 292.0], [45.6, 292.0], [45.7, 293.0], [45.8, 293.0], [45.9, 293.0], [46.0, 293.0], [46.1, 293.0], [46.2, 293.0], [46.3, 293.0], [46.4, 295.0], [46.5, 295.0], [46.6, 295.0], [46.7, 296.0], [46.8, 296.0], [46.9, 296.0], [47.0, 298.0], [47.1, 298.0], [47.2, 298.0], [47.3, 298.0], [47.4, 303.0], [47.5, 303.0], [47.6, 303.0], [47.7, 303.0], [47.8, 303.0], [47.9, 303.0], [48.0, 319.0], [48.1, 319.0], [48.2, 319.0], [48.3, 319.0], [48.4, 325.0], [48.5, 325.0], [48.6, 325.0], [48.7, 341.0], [48.8, 341.0], [48.9, 341.0], [49.0, 356.0], [49.1, 356.0], [49.2, 356.0], [49.3, 356.0], [49.4, 358.0], [49.5, 358.0], [49.6, 358.0], [49.7, 363.0], [49.8, 363.0], [49.9, 363.0], [50.0, 363.0], [50.1, 366.0], [50.2, 366.0], [50.3, 366.0], [50.4, 368.0], [50.5, 368.0], [50.6, 368.0], [50.7, 370.0], [50.8, 370.0], [50.9, 370.0], [51.0, 370.0], [51.1, 372.0], [51.2, 372.0], [51.3, 372.0], [51.4, 374.0], [51.5, 374.0], [51.6, 374.0], [51.7, 375.0], [51.8, 375.0], [51.9, 375.0], [52.0, 375.0], [52.1, 375.0], [52.2, 375.0], [52.3, 375.0], [52.4, 376.0], [52.5, 376.0], [52.6, 376.0], [52.7, 377.0], [52.8, 377.0], [52.9, 377.0], [53.0, 377.0], [53.1, 378.0], [53.2, 378.0], [53.3, 378.0], [53.4, 380.0], [53.5, 380.0], [53.6, 380.0], [53.7, 381.0], [53.8, 381.0], [53.9, 381.0], [54.0, 381.0], [54.1, 382.0], [54.2, 382.0], [54.3, 382.0], [54.4, 383.0], [54.5, 383.0], [54.6, 383.0], [54.7, 385.0], [54.8, 385.0], [54.9, 385.0], [55.0, 385.0], [55.1, 387.0], [55.2, 387.0], [55.3, 387.0], [55.4, 387.0], [55.5, 387.0], [55.6, 387.0], [55.7, 388.0], [55.8, 388.0], [55.9, 388.0], [56.0, 388.0], [56.1, 388.0], [56.2, 388.0], [56.3, 388.0], [56.4, 388.0], [56.5, 388.0], [56.6, 388.0], [56.7, 392.0], [56.8, 392.0], [56.9, 392.0], [57.0, 392.0], [57.1, 393.0], [57.2, 393.0], [57.3, 393.0], [57.4, 393.0], [57.5, 393.0], [57.6, 393.0], [57.7, 394.0], [57.8, 394.0], [57.9, 394.0], [58.0, 394.0], [58.1, 398.0], [58.2, 398.0], [58.3, 398.0], [58.4, 398.0], [58.5, 398.0], [58.6, 398.0], [58.7, 400.0], [58.8, 400.0], [58.9, 400.0], [59.0, 400.0], [59.1, 400.0], [59.2, 400.0], [59.3, 400.0], [59.4, 401.0], [59.5, 401.0], [59.6, 401.0], [59.7, 402.0], [59.8, 402.0], [59.9, 402.0], [60.0, 402.0], [60.1, 405.0], [60.2, 405.0], [60.3, 405.0], [60.4, 406.0], [60.5, 406.0], [60.6, 406.0], [60.7, 407.0], [60.8, 407.0], [60.9, 407.0], [61.0, 407.0], [61.1, 408.0], [61.2, 408.0], [61.3, 408.0], [61.4, 409.0], [61.5, 409.0], [61.6, 409.0], [61.7, 410.0], [61.8, 410.0], [61.9, 410.0], [62.0, 410.0], [62.1, 410.0], [62.2, 410.0], [62.3, 410.0], [62.4, 411.0], [62.5, 411.0], [62.6, 411.0], [62.7, 411.0], [62.8, 411.0], [62.9, 411.0], [63.0, 411.0], [63.1, 412.0], [63.2, 412.0], [63.3, 412.0], [63.4, 413.0], [63.5, 413.0], [63.6, 413.0], [63.7, 414.0], [63.8, 414.0], [63.9, 414.0], [64.0, 414.0], [64.1, 414.0], [64.2, 414.0], [64.3, 414.0], [64.4, 414.0], [64.5, 414.0], [64.6, 414.0], [64.7, 415.0], [64.8, 415.0], [64.9, 415.0], [65.0, 415.0], [65.1, 418.0], [65.2, 418.0], [65.3, 418.0], [65.4, 418.0], [65.5, 418.0], [65.6, 418.0], [65.7, 418.0], [65.8, 418.0], [65.9, 418.0], [66.0, 418.0], [66.1, 418.0], [66.2, 418.0], [66.3, 418.0], [66.4, 419.0], [66.5, 419.0], [66.6, 419.0], [66.7, 420.0], [66.8, 420.0], [66.9, 420.0], [67.0, 420.0], [67.1, 421.0], [67.2, 421.0], [67.3, 421.0], [67.4, 422.0], [67.5, 422.0], [67.6, 422.0], [67.7, 422.0], [67.8, 422.0], [67.9, 422.0], [68.0, 422.0], [68.1, 422.0], [68.2, 422.0], [68.3, 422.0], [68.4, 426.0], [68.5, 426.0], [68.6, 426.0], [68.7, 426.0], [68.8, 426.0], [68.9, 426.0], [69.0, 426.0], [69.1, 427.0], [69.2, 427.0], [69.3, 427.0], [69.4, 429.0], [69.5, 429.0], [69.6, 429.0], [69.7, 429.0], [69.8, 429.0], [69.9, 429.0], [70.0, 429.0], [70.1, 429.0], [70.2, 429.0], [70.3, 429.0], [70.4, 430.0], [70.5, 430.0], [70.6, 430.0], [70.7, 430.0], [70.8, 430.0], [70.9, 430.0], [71.0, 430.0], [71.1, 430.0], [71.2, 430.0], [71.3, 430.0], [71.4, 431.0], [71.5, 431.0], [71.6, 431.0], [71.7, 432.0], [71.8, 432.0], [71.9, 432.0], [72.0, 432.0], [72.1, 432.0], [72.2, 432.0], [72.3, 432.0], [72.4, 432.0], [72.5, 432.0], [72.6, 432.0], [72.7, 432.0], [72.8, 432.0], [72.9, 432.0], [73.0, 432.0], [73.1, 433.0], [73.2, 433.0], [73.3, 433.0], [73.4, 433.0], [73.5, 433.0], [73.6, 433.0], [73.7, 433.0], [73.8, 433.0], [73.9, 433.0], [74.0, 433.0], [74.1, 434.0], [74.2, 434.0], [74.3, 434.0], [74.4, 435.0], [74.5, 435.0], [74.6, 435.0], [74.7, 435.0], [74.8, 435.0], [74.9, 435.0], [75.0, 435.0], [75.1, 438.0], [75.2, 438.0], [75.3, 438.0], [75.4, 438.0], [75.5, 438.0], [75.6, 438.0], [75.7, 439.0], [75.8, 439.0], [75.9, 439.0], [76.0, 439.0], [76.1, 441.0], [76.2, 441.0], [76.3, 441.0], [76.4, 442.0], [76.5, 442.0], [76.6, 442.0], [76.7, 442.0], [76.8, 442.0], [76.9, 442.0], [77.0, 442.0], [77.1, 445.0], [77.2, 445.0], [77.3, 445.0], [77.4, 447.0], [77.5, 447.0], [77.6, 447.0], [77.7, 448.0], [77.8, 448.0], [77.9, 448.0], [78.0, 448.0], [78.1, 448.0], [78.2, 448.0], [78.3, 448.0], [78.4, 448.0], [78.5, 448.0], [78.6, 448.0], [78.7, 450.0], [78.8, 450.0], [78.9, 450.0], [79.0, 450.0], [79.1, 450.0], [79.2, 450.0], [79.3, 450.0], [79.4, 451.0], [79.5, 451.0], [79.6, 451.0], [79.7, 452.0], [79.8, 452.0], [79.9, 452.0], [80.0, 453.0], [80.1, 453.0], [80.2, 453.0], [80.3, 453.0], [80.4, 453.0], [80.5, 453.0], [80.6, 453.0], [80.7, 454.0], [80.8, 454.0], [80.9, 454.0], [81.0, 456.0], [81.1, 456.0], [81.2, 456.0], [81.3, 456.0], [81.4, 456.0], [81.5, 456.0], [81.6, 456.0], [81.7, 461.0], [81.8, 461.0], [81.9, 461.0], [82.0, 461.0], [82.1, 461.0], [82.2, 461.0], [82.3, 461.0], [82.4, 462.0], [82.5, 462.0], [82.6, 462.0], [82.7, 462.0], [82.8, 462.0], [82.9, 462.0], [83.0, 462.0], [83.1, 462.0], [83.2, 462.0], [83.3, 462.0], [83.4, 464.0], [83.5, 464.0], [83.6, 464.0], [83.7, 467.0], [83.8, 467.0], [83.9, 467.0], [84.0, 469.0], [84.1, 469.0], [84.2, 469.0], [84.3, 469.0], [84.4, 470.0], [84.5, 470.0], [84.6, 470.0], [84.7, 471.0], [84.8, 471.0], [84.9, 471.0], [85.0, 472.0], [85.1, 472.0], [85.2, 472.0], [85.3, 472.0], [85.4, 474.0], [85.5, 474.0], [85.6, 474.0], [85.7, 474.0], [85.8, 474.0], [85.9, 474.0], [86.0, 478.0], [86.1, 478.0], [86.2, 478.0], [86.3, 478.0], [86.4, 479.0], [86.5, 479.0], [86.6, 479.0], [86.7, 486.0], [86.8, 486.0], [86.9, 486.0], [87.0, 866.0], [87.1, 866.0], [87.2, 866.0], [87.3, 866.0], [87.4, 931.0], [87.5, 931.0], [87.6, 931.0], [87.7, 975.0], [87.8, 975.0], [87.9, 975.0], [88.0, 991.0], [88.1, 991.0], [88.2, 991.0], [88.3, 991.0], [88.4, 1014.0], [88.5, 1014.0], [88.6, 1014.0], [88.7, 1043.0], [88.8, 1043.0], [88.9, 1043.0], [89.0, 1056.0], [89.1, 1056.0], [89.2, 1056.0], [89.3, 1056.0], [89.4, 1071.0], [89.5, 1071.0], [89.6, 1071.0], [89.7, 1096.0], [89.8, 1096.0], [89.9, 1096.0], [90.0, 1112.0], [90.1, 1112.0], [90.2, 1112.0], [90.3, 1112.0], [90.4, 1113.0], [90.5, 1113.0], [90.6, 1113.0], [90.7, 1179.0], [90.8, 1179.0], [90.9, 1179.0], [91.0, 1185.0], [91.1, 1185.0], [91.2, 1185.0], [91.3, 1185.0], [91.4, 1199.0], [91.5, 1199.0], [91.6, 1199.0], [91.7, 1234.0], [91.8, 1234.0], [91.9, 1234.0], [92.0, 1236.0], [92.1, 1236.0], [92.2, 1236.0], [92.3, 1236.0], [92.4, 1266.0], [92.5, 1266.0], [92.6, 1266.0], [92.7, 1270.0], [92.8, 1270.0], [92.9, 1270.0], [93.0, 1284.0], [93.1, 1284.0], [93.2, 1284.0], [93.3, 1284.0], [93.4, 1291.0], [93.5, 1291.0], [93.6, 1291.0], [93.7, 1292.0], [93.8, 1292.0], [93.9, 1292.0], [94.0, 1338.0], [94.1, 1338.0], [94.2, 1338.0], [94.3, 1338.0], [94.4, 1370.0], [94.5, 1370.0], [94.6, 1370.0], [94.7, 1375.0], [94.8, 1375.0], [94.9, 1375.0], [95.0, 1382.0], [95.1, 1382.0], [95.2, 1382.0], [95.3, 1382.0], [95.4, 1385.0], [95.5, 1385.0], [95.6, 1385.0], [95.7, 1400.0], [95.8, 1400.0], [95.9, 1400.0], [96.0, 1449.0], [96.1, 1449.0], [96.2, 1449.0], [96.3, 1449.0], [96.4, 1461.0], [96.5, 1461.0], [96.6, 1461.0], [96.7, 1484.0], [96.8, 1484.0], [96.9, 1484.0], [97.0, 1505.0], [97.1, 1505.0], [97.2, 1505.0], [97.3, 1505.0], [97.4, 1515.0], [97.5, 1515.0], [97.6, 1515.0], [97.7, 1542.0], [97.8, 1542.0], [97.9, 1542.0], [98.0, 1581.0], [98.1, 1581.0], [98.2, 1581.0], [98.3, 1581.0], [98.4, 1588.0], [98.5, 1588.0], [98.6, 1588.0], [98.7, 2151.0], [98.8, 2151.0], [98.9, 2151.0], [99.0, 2522.0], [99.1, 2522.0], [99.2, 2522.0], [99.3, 2522.0], [99.4, 2525.0], [99.5, 2525.0], [99.6, 2525.0], [99.7, 7360.0], [99.8, 7360.0], [99.9, 7360.0]], "isOverall": false, "label": "CreateBooking ", "isController": false}, {"data": [[0.0, 264.0], [0.1, 264.0], [0.2, 264.0], [0.3, 264.0], [0.4, 267.0], [0.5, 267.0], [0.6, 267.0], [0.7, 269.0], [0.8, 269.0], [0.9, 269.0], [1.0, 269.0], [1.1, 269.0], [1.2, 269.0], [1.3, 269.0], [1.4, 270.0], [1.5, 270.0], [1.6, 270.0], [1.7, 270.0], [1.8, 270.0], [1.9, 270.0], [2.0, 270.0], [2.1, 270.0], [2.2, 270.0], [2.3, 270.0], [2.4, 270.0], [2.5, 270.0], [2.6, 270.0], [2.7, 270.0], [2.8, 270.0], [2.9, 270.0], [3.0, 271.0], [3.1, 271.0], [3.2, 271.0], [3.3, 271.0], [3.4, 271.0], [3.5, 271.0], [3.6, 271.0], [3.7, 271.0], [3.8, 271.0], [3.9, 271.0], [4.0, 271.0], [4.1, 271.0], [4.2, 271.0], [4.3, 271.0], [4.4, 271.0], [4.5, 271.0], [4.6, 271.0], [4.7, 271.0], [4.8, 271.0], [4.9, 271.0], [5.0, 271.0], [5.1, 271.0], [5.2, 271.0], [5.3, 271.0], [5.4, 271.0], [5.5, 271.0], [5.6, 271.0], [5.7, 272.0], [5.8, 272.0], [5.9, 272.0], [6.0, 272.0], [6.1, 272.0], [6.2, 272.0], [6.3, 272.0], [6.4, 272.0], [6.5, 272.0], [6.6, 272.0], [6.7, 273.0], [6.8, 273.0], [6.9, 273.0], [7.0, 273.0], [7.1, 273.0], [7.2, 273.0], [7.3, 273.0], [7.4, 273.0], [7.5, 273.0], [7.6, 273.0], [7.7, 273.0], [7.8, 273.0], [7.9, 273.0], [8.0, 273.0], [8.1, 273.0], [8.2, 273.0], [8.3, 273.0], [8.4, 273.0], [8.5, 273.0], [8.6, 273.0], [8.7, 273.0], [8.8, 273.0], [8.9, 273.0], [9.0, 273.0], [9.1, 273.0], [9.2, 273.0], [9.3, 273.0], [9.4, 274.0], [9.5, 274.0], [9.6, 274.0], [9.7, 274.0], [9.8, 274.0], [9.9, 274.0], [10.0, 274.0], [10.1, 274.0], [10.2, 274.0], [10.3, 274.0], [10.4, 274.0], [10.5, 274.0], [10.6, 274.0], [10.7, 275.0], [10.8, 275.0], [10.9, 275.0], [11.0, 275.0], [11.1, 275.0], [11.2, 275.0], [11.3, 275.0], [11.4, 275.0], [11.5, 275.0], [11.6, 275.0], [11.7, 276.0], [11.8, 276.0], [11.9, 276.0], [12.0, 276.0], [12.1, 276.0], [12.2, 276.0], [12.3, 276.0], [12.4, 276.0], [12.5, 276.0], [12.6, 276.0], [12.7, 277.0], [12.8, 277.0], [12.9, 277.0], [13.0, 277.0], [13.1, 277.0], [13.2, 277.0], [13.3, 277.0], [13.4, 277.0], [13.5, 277.0], [13.6, 277.0], [13.7, 278.0], [13.8, 278.0], [13.9, 278.0], [14.0, 278.0], [14.1, 278.0], [14.2, 278.0], [14.3, 278.0], [14.4, 278.0], [14.5, 278.0], [14.6, 278.0], [14.7, 278.0], [14.8, 278.0], [14.9, 278.0], [15.0, 278.0], [15.1, 278.0], [15.2, 278.0], [15.3, 278.0], [15.4, 278.0], [15.5, 278.0], [15.6, 278.0], [15.7, 278.0], [15.8, 278.0], [15.9, 278.0], [16.0, 279.0], [16.1, 279.0], [16.2, 279.0], [16.3, 279.0], [16.4, 279.0], [16.5, 279.0], [16.6, 279.0], [16.7, 279.0], [16.8, 279.0], [16.9, 279.0], [17.0, 280.0], [17.1, 280.0], [17.2, 280.0], [17.3, 280.0], [17.4, 280.0], [17.5, 280.0], [17.6, 280.0], [17.7, 280.0], [17.8, 280.0], [17.9, 280.0], [18.0, 280.0], [18.1, 280.0], [18.2, 280.0], [18.3, 280.0], [18.4, 280.0], [18.5, 280.0], [18.6, 280.0], [18.7, 280.0], [18.8, 280.0], [18.9, 280.0], [19.0, 280.0], [19.1, 280.0], [19.2, 280.0], [19.3, 280.0], [19.4, 281.0], [19.5, 281.0], [19.6, 281.0], [19.7, 281.0], [19.8, 281.0], [19.9, 281.0], [20.0, 281.0], [20.1, 281.0], [20.2, 281.0], [20.3, 281.0], [20.4, 281.0], [20.5, 281.0], [20.6, 281.0], [20.7, 281.0], [20.8, 281.0], [20.9, 281.0], [21.0, 281.0], [21.1, 281.0], [21.2, 281.0], [21.3, 281.0], [21.4, 281.0], [21.5, 281.0], [21.6, 281.0], [21.7, 281.0], [21.8, 281.0], [21.9, 281.0], [22.0, 281.0], [22.1, 281.0], [22.2, 281.0], [22.3, 281.0], [22.4, 281.0], [22.5, 281.0], [22.6, 281.0], [22.7, 282.0], [22.8, 282.0], [22.9, 282.0], [23.0, 282.0], [23.1, 282.0], [23.2, 282.0], [23.3, 282.0], [23.4, 282.0], [23.5, 282.0], [23.6, 282.0], [23.7, 282.0], [23.8, 282.0], [23.9, 282.0], [24.0, 282.0], [24.1, 282.0], [24.2, 282.0], [24.3, 282.0], [24.4, 282.0], [24.5, 282.0], [24.6, 282.0], [24.7, 282.0], [24.8, 282.0], [24.9, 282.0], [25.0, 282.0], [25.1, 282.0], [25.2, 282.0], [25.3, 282.0], [25.4, 283.0], [25.5, 283.0], [25.6, 283.0], [25.7, 283.0], [25.8, 283.0], [25.9, 283.0], [26.0, 283.0], [26.1, 283.0], [26.2, 283.0], [26.3, 283.0], [26.4, 284.0], [26.5, 284.0], [26.6, 284.0], [26.7, 284.0], [26.8, 284.0], [26.9, 284.0], [27.0, 284.0], [27.1, 284.0], [27.2, 284.0], [27.3, 284.0], [27.4, 284.0], [27.5, 284.0], [27.6, 284.0], [27.7, 284.0], [27.8, 284.0], [27.9, 284.0], [28.0, 284.0], [28.1, 284.0], [28.2, 284.0], [28.3, 284.0], [28.4, 285.0], [28.5, 285.0], [28.6, 285.0], [28.7, 285.0], [28.8, 285.0], [28.9, 285.0], [29.0, 285.0], [29.1, 285.0], [29.2, 285.0], [29.3, 285.0], [29.4, 285.0], [29.5, 285.0], [29.6, 285.0], [29.7, 285.0], [29.8, 285.0], [29.9, 285.0], [30.0, 285.0], [30.1, 285.0], [30.2, 285.0], [30.3, 285.0], [30.4, 285.0], [30.5, 285.0], [30.6, 285.0], [30.7, 285.0], [30.8, 285.0], [30.9, 285.0], [31.0, 286.0], [31.1, 286.0], [31.2, 286.0], [31.3, 286.0], [31.4, 286.0], [31.5, 286.0], [31.6, 286.0], [31.7, 286.0], [31.8, 286.0], [31.9, 286.0], [32.0, 286.0], [32.1, 286.0], [32.2, 286.0], [32.3, 286.0], [32.4, 286.0], [32.5, 286.0], [32.6, 286.0], [32.7, 287.0], [32.8, 287.0], [32.9, 287.0], [33.0, 287.0], [33.1, 287.0], [33.2, 287.0], [33.3, 287.0], [33.4, 287.0], [33.5, 287.0], [33.6, 287.0], [33.7, 287.0], [33.8, 287.0], [33.9, 287.0], [34.0, 287.0], [34.1, 287.0], [34.2, 287.0], [34.3, 287.0], [34.4, 288.0], [34.5, 288.0], [34.6, 288.0], [34.7, 288.0], [34.8, 288.0], [34.9, 288.0], [35.0, 288.0], [35.1, 288.0], [35.2, 288.0], [35.3, 288.0], [35.4, 288.0], [35.5, 288.0], [35.6, 288.0], [35.7, 288.0], [35.8, 288.0], [35.9, 288.0], [36.0, 288.0], [36.1, 288.0], [36.2, 288.0], [36.3, 288.0], [36.4, 288.0], [36.5, 288.0], [36.6, 288.0], [36.7, 288.0], [36.8, 288.0], [36.9, 288.0], [37.0, 289.0], [37.1, 289.0], [37.2, 289.0], [37.3, 289.0], [37.4, 289.0], [37.5, 289.0], [37.6, 289.0], [37.7, 289.0], [37.8, 289.0], [37.9, 289.0], [38.0, 289.0], [38.1, 289.0], [38.2, 289.0], [38.3, 289.0], [38.4, 289.0], [38.5, 289.0], [38.6, 289.0], [38.7, 290.0], [38.8, 290.0], [38.9, 290.0], [39.0, 290.0], [39.1, 290.0], [39.2, 290.0], [39.3, 290.0], [39.4, 290.0], [39.5, 290.0], [39.6, 290.0], [39.7, 290.0], [39.8, 290.0], [39.9, 290.0], [40.0, 290.0], [40.1, 290.0], [40.2, 290.0], [40.3, 290.0], [40.4, 291.0], [40.5, 291.0], [40.6, 291.0], [40.7, 291.0], [40.8, 291.0], [40.9, 291.0], [41.0, 291.0], [41.1, 291.0], [41.2, 291.0], [41.3, 291.0], [41.4, 291.0], [41.5, 291.0], [41.6, 291.0], [41.7, 291.0], [41.8, 291.0], [41.9, 291.0], [42.0, 291.0], [42.1, 291.0], [42.2, 291.0], [42.3, 291.0], [42.4, 291.0], [42.5, 291.0], [42.6, 291.0], [42.7, 292.0], [42.8, 292.0], [42.9, 292.0], [43.0, 292.0], [43.1, 292.0], [43.2, 292.0], [43.3, 292.0], [43.4, 292.0], [43.5, 292.0], [43.6, 292.0], [43.7, 293.0], [43.8, 293.0], [43.9, 293.0], [44.0, 293.0], [44.1, 293.0], [44.2, 293.0], [44.3, 293.0], [44.4, 293.0], [44.5, 293.0], [44.6, 293.0], [44.7, 293.0], [44.8, 293.0], [44.9, 293.0], [45.0, 294.0], [45.1, 294.0], [45.2, 294.0], [45.3, 294.0], [45.4, 294.0], [45.5, 294.0], [45.6, 294.0], [45.7, 294.0], [45.8, 294.0], [45.9, 294.0], [46.0, 294.0], [46.1, 294.0], [46.2, 294.0], [46.3, 294.0], [46.4, 295.0], [46.5, 295.0], [46.6, 295.0], [46.7, 295.0], [46.8, 295.0], [46.9, 295.0], [47.0, 296.0], [47.1, 296.0], [47.2, 296.0], [47.3, 296.0], [47.4, 300.0], [47.5, 300.0], [47.6, 300.0], [47.7, 301.0], [47.8, 301.0], [47.9, 301.0], [48.0, 304.0], [48.1, 304.0], [48.2, 304.0], [48.3, 304.0], [48.4, 309.0], [48.5, 309.0], [48.6, 309.0], [48.7, 311.0], [48.8, 311.0], [48.9, 311.0], [49.0, 311.0], [49.1, 331.0], [49.2, 331.0], [49.3, 331.0], [49.4, 336.0], [49.5, 336.0], [49.6, 336.0], [49.7, 358.0], [49.8, 358.0], [49.9, 358.0], [50.0, 358.0], [50.1, 364.0], [50.2, 364.0], [50.3, 364.0], [50.4, 369.0], [50.5, 369.0], [50.6, 369.0], [50.7, 370.0], [50.8, 370.0], [50.9, 370.0], [51.0, 370.0], [51.1, 370.0], [51.2, 370.0], [51.3, 370.0], [51.4, 372.0], [51.5, 372.0], [51.6, 372.0], [51.7, 378.0], [51.8, 378.0], [51.9, 378.0], [52.0, 378.0], [52.1, 380.0], [52.2, 380.0], [52.3, 380.0], [52.4, 380.0], [52.5, 380.0], [52.6, 380.0], [52.7, 380.0], [52.8, 380.0], [52.9, 380.0], [53.0, 380.0], [53.1, 381.0], [53.2, 381.0], [53.3, 381.0], [53.4, 381.0], [53.5, 381.0], [53.6, 381.0], [53.7, 381.0], [53.8, 381.0], [53.9, 381.0], [54.0, 381.0], [54.1, 381.0], [54.2, 381.0], [54.3, 381.0], [54.4, 385.0], [54.5, 385.0], [54.6, 385.0], [54.7, 388.0], [54.8, 388.0], [54.9, 388.0], [55.0, 388.0], [55.1, 389.0], [55.2, 389.0], [55.3, 389.0], [55.4, 390.0], [55.5, 390.0], [55.6, 390.0], [55.7, 392.0], [55.8, 392.0], [55.9, 392.0], [56.0, 392.0], [56.1, 394.0], [56.2, 394.0], [56.3, 394.0], [56.4, 394.0], [56.5, 394.0], [56.6, 394.0], [56.7, 395.0], [56.8, 395.0], [56.9, 395.0], [57.0, 395.0], [57.1, 396.0], [57.2, 396.0], [57.3, 396.0], [57.4, 399.0], [57.5, 399.0], [57.6, 399.0], [57.7, 399.0], [57.8, 399.0], [57.9, 399.0], [58.0, 399.0], [58.1, 400.0], [58.2, 400.0], [58.3, 400.0], [58.4, 400.0], [58.5, 400.0], [58.6, 400.0], [58.7, 401.0], [58.8, 401.0], [58.9, 401.0], [59.0, 401.0], [59.1, 401.0], [59.2, 401.0], [59.3, 401.0], [59.4, 403.0], [59.5, 403.0], [59.6, 403.0], [59.7, 405.0], [59.8, 405.0], [59.9, 405.0], [60.0, 405.0], [60.1, 405.0], [60.2, 405.0], [60.3, 405.0], [60.4, 406.0], [60.5, 406.0], [60.6, 406.0], [60.7, 406.0], [60.8, 406.0], [60.9, 406.0], [61.0, 406.0], [61.1, 407.0], [61.2, 407.0], [61.3, 407.0], [61.4, 409.0], [61.5, 409.0], [61.6, 409.0], [61.7, 409.0], [61.8, 409.0], [61.9, 409.0], [62.0, 409.0], [62.1, 409.0], [62.2, 409.0], [62.3, 409.0], [62.4, 410.0], [62.5, 410.0], [62.6, 410.0], [62.7, 410.0], [62.8, 410.0], [62.9, 410.0], [63.0, 410.0], [63.1, 411.0], [63.2, 411.0], [63.3, 411.0], [63.4, 411.0], [63.5, 411.0], [63.6, 411.0], [63.7, 412.0], [63.8, 412.0], [63.9, 412.0], [64.0, 412.0], [64.1, 412.0], [64.2, 412.0], [64.3, 412.0], [64.4, 412.0], [64.5, 412.0], [64.6, 412.0], [64.7, 412.0], [64.8, 412.0], [64.9, 412.0], [65.0, 412.0], [65.1, 413.0], [65.2, 413.0], [65.3, 413.0], [65.4, 414.0], [65.5, 414.0], [65.6, 414.0], [65.7, 415.0], [65.8, 415.0], [65.9, 415.0], [66.0, 415.0], [66.1, 415.0], [66.2, 415.0], [66.3, 415.0], [66.4, 415.0], [66.5, 415.0], [66.6, 415.0], [66.7, 416.0], [66.8, 416.0], [66.9, 416.0], [67.0, 416.0], [67.1, 417.0], [67.2, 417.0], [67.3, 417.0], [67.4, 418.0], [67.5, 418.0], [67.6, 418.0], [67.7, 419.0], [67.8, 419.0], [67.9, 419.0], [68.0, 421.0], [68.1, 421.0], [68.2, 421.0], [68.3, 421.0], [68.4, 422.0], [68.5, 422.0], [68.6, 422.0], [68.7, 422.0], [68.8, 422.0], [68.9, 422.0], [69.0, 423.0], [69.1, 423.0], [69.2, 423.0], [69.3, 423.0], [69.4, 423.0], [69.5, 423.0], [69.6, 423.0], [69.7, 426.0], [69.8, 426.0], [69.9, 426.0], [70.0, 428.0], [70.1, 428.0], [70.2, 428.0], [70.3, 428.0], [70.4, 428.0], [70.5, 428.0], [70.6, 428.0], [70.7, 430.0], [70.8, 430.0], [70.9, 430.0], [71.0, 430.0], [71.1, 430.0], [71.2, 430.0], [71.3, 430.0], [71.4, 431.0], [71.5, 431.0], [71.6, 431.0], [71.7, 431.0], [71.8, 431.0], [71.9, 431.0], [72.0, 431.0], [72.1, 432.0], [72.2, 432.0], [72.3, 432.0], [72.4, 432.0], [72.5, 432.0], [72.6, 432.0], [72.7, 433.0], [72.8, 433.0], [72.9, 433.0], [73.0, 433.0], [73.1, 434.0], [73.2, 434.0], [73.3, 434.0], [73.4, 436.0], [73.5, 436.0], [73.6, 436.0], [73.7, 437.0], [73.8, 437.0], [73.9, 437.0], [74.0, 438.0], [74.1, 438.0], [74.2, 438.0], [74.3, 438.0], [74.4, 439.0], [74.5, 439.0], [74.6, 439.0], [74.7, 441.0], [74.8, 441.0], [74.9, 441.0], [75.0, 442.0], [75.1, 442.0], [75.2, 442.0], [75.3, 442.0], [75.4, 442.0], [75.5, 442.0], [75.6, 442.0], [75.7, 443.0], [75.8, 443.0], [75.9, 443.0], [76.0, 443.0], [76.1, 443.0], [76.2, 443.0], [76.3, 443.0], [76.4, 444.0], [76.5, 444.0], [76.6, 444.0], [76.7, 444.0], [76.8, 444.0], [76.9, 444.0], [77.0, 445.0], [77.1, 445.0], [77.2, 445.0], [77.3, 445.0], [77.4, 446.0], [77.5, 446.0], [77.6, 446.0], [77.7, 446.0], [77.8, 446.0], [77.9, 446.0], [78.0, 447.0], [78.1, 447.0], [78.2, 447.0], [78.3, 447.0], [78.4, 448.0], [78.5, 448.0], [78.6, 448.0], [78.7, 451.0], [78.8, 451.0], [78.9, 451.0], [79.0, 451.0], [79.1, 451.0], [79.2, 451.0], [79.3, 451.0], [79.4, 451.0], [79.5, 451.0], [79.6, 451.0], [79.7, 452.0], [79.8, 452.0], [79.9, 452.0], [80.0, 453.0], [80.1, 453.0], [80.2, 453.0], [80.3, 453.0], [80.4, 453.0], [80.5, 453.0], [80.6, 453.0], [80.7, 454.0], [80.8, 454.0], [80.9, 454.0], [81.0, 456.0], [81.1, 456.0], [81.2, 456.0], [81.3, 456.0], [81.4, 457.0], [81.5, 457.0], [81.6, 457.0], [81.7, 458.0], [81.8, 458.0], [81.9, 458.0], [82.0, 459.0], [82.1, 459.0], [82.2, 459.0], [82.3, 459.0], [82.4, 459.0], [82.5, 459.0], [82.6, 459.0], [82.7, 459.0], [82.8, 459.0], [82.9, 459.0], [83.0, 460.0], [83.1, 460.0], [83.2, 460.0], [83.3, 460.0], [83.4, 462.0], [83.5, 462.0], [83.6, 462.0], [83.7, 469.0], [83.8, 469.0], [83.9, 469.0], [84.0, 470.0], [84.1, 470.0], [84.2, 470.0], [84.3, 470.0], [84.4, 471.0], [84.5, 471.0], [84.6, 471.0], [84.7, 471.0], [84.8, 471.0], [84.9, 471.0], [85.0, 473.0], [85.1, 473.0], [85.2, 473.0], [85.3, 473.0], [85.4, 474.0], [85.5, 474.0], [85.6, 474.0], [85.7, 477.0], [85.8, 477.0], [85.9, 477.0], [86.0, 480.0], [86.1, 480.0], [86.2, 480.0], [86.3, 480.0], [86.4, 480.0], [86.5, 480.0], [86.6, 480.0], [86.7, 481.0], [86.8, 481.0], [86.9, 481.0], [87.0, 484.0], [87.1, 484.0], [87.2, 484.0], [87.3, 484.0], [87.4, 490.0], [87.5, 490.0], [87.6, 490.0], [87.7, 503.0], [87.8, 503.0], [87.9, 503.0], [88.0, 907.0], [88.1, 907.0], [88.2, 907.0], [88.3, 907.0], [88.4, 926.0], [88.5, 926.0], [88.6, 926.0], [88.7, 946.0], [88.8, 946.0], [88.9, 946.0], [89.0, 985.0], [89.1, 985.0], [89.2, 985.0], [89.3, 985.0], [89.4, 1005.0], [89.5, 1005.0], [89.6, 1005.0], [89.7, 1017.0], [89.8, 1017.0], [89.9, 1017.0], [90.0, 1024.0], [90.1, 1024.0], [90.2, 1024.0], [90.3, 1024.0], [90.4, 1064.0], [90.5, 1064.0], [90.6, 1064.0], [90.7, 1074.0], [90.8, 1074.0], [90.9, 1074.0], [91.0, 1100.0], [91.1, 1100.0], [91.2, 1100.0], [91.3, 1100.0], [91.4, 1152.0], [91.5, 1152.0], [91.6, 1152.0], [91.7, 1166.0], [91.8, 1166.0], [91.9, 1166.0], [92.0, 1184.0], [92.1, 1184.0], [92.2, 1184.0], [92.3, 1184.0], [92.4, 1194.0], [92.5, 1194.0], [92.6, 1194.0], [92.7, 1199.0], [92.8, 1199.0], [92.9, 1199.0], [93.0, 1200.0], [93.1, 1200.0], [93.2, 1200.0], [93.3, 1200.0], [93.4, 1206.0], [93.5, 1206.0], [93.6, 1206.0], [93.7, 1224.0], [93.8, 1224.0], [93.9, 1224.0], [94.0, 1230.0], [94.1, 1230.0], [94.2, 1230.0], [94.3, 1230.0], [94.4, 1237.0], [94.5, 1237.0], [94.6, 1237.0], [94.7, 1243.0], [94.8, 1243.0], [94.9, 1243.0], [95.0, 1252.0], [95.1, 1252.0], [95.2, 1252.0], [95.3, 1252.0], [95.4, 1256.0], [95.5, 1256.0], [95.6, 1256.0], [95.7, 1259.0], [95.8, 1259.0], [95.9, 1259.0], [96.0, 1260.0], [96.1, 1260.0], [96.2, 1260.0], [96.3, 1260.0], [96.4, 1263.0], [96.5, 1263.0], [96.6, 1263.0], [96.7, 1267.0], [96.8, 1267.0], [96.9, 1267.0], [97.0, 1285.0], [97.1, 1285.0], [97.2, 1285.0], [97.3, 1285.0], [97.4, 1296.0], [97.5, 1296.0], [97.6, 1296.0], [97.7, 1317.0], [97.8, 1317.0], [97.9, 1317.0], [98.0, 1342.0], [98.1, 1342.0], [98.2, 1342.0], [98.3, 1342.0], [98.4, 1420.0], [98.5, 1420.0], [98.6, 1420.0], [98.7, 2091.0], [98.8, 2091.0], [98.9, 2091.0], [99.0, 2282.0], [99.1, 2282.0], [99.2, 2282.0], [99.3, 2282.0], [99.4, 2742.0], [99.5, 2742.0], [99.6, 2742.0], [99.7, 6420.0], [99.8, 6420.0], [99.9, 6420.0]], "isOverall": false, "label": "UpdateBooking ", "isController": false}, {"data": [[0.0, 1055.0], [0.1, 1055.0], [0.2, 1055.0], [0.3, 1055.0], [0.4, 1083.0], [0.5, 1083.0], [0.6, 1083.0], [0.7, 1096.0], [0.8, 1096.0], [0.9, 1096.0], [1.0, 1098.0], [1.1, 1098.0], [1.2, 1098.0], [1.3, 1098.0], [1.4, 1099.0], [1.5, 1099.0], [1.6, 1099.0], [1.7, 1101.0], [1.8, 1101.0], [1.9, 1101.0], [2.0, 1111.0], [2.1, 1111.0], [2.2, 1111.0], [2.3, 1111.0], [2.4, 1113.0], [2.5, 1113.0], [2.6, 1113.0], [2.7, 1122.0], [2.8, 1122.0], [2.9, 1122.0], [3.0, 1124.0], [3.1, 1124.0], [3.2, 1124.0], [3.3, 1124.0], [3.4, 1130.0], [3.5, 1130.0], [3.6, 1130.0], [3.7, 1131.0], [3.8, 1131.0], [3.9, 1131.0], [4.0, 1131.0], [4.1, 1131.0], [4.2, 1131.0], [4.3, 1131.0], [4.4, 1133.0], [4.5, 1133.0], [4.6, 1133.0], [4.7, 1134.0], [4.8, 1134.0], [4.9, 1134.0], [5.0, 1135.0], [5.1, 1135.0], [5.2, 1135.0], [5.3, 1135.0], [5.4, 1135.0], [5.5, 1135.0], [5.6, 1135.0], [5.7, 1138.0], [5.8, 1138.0], [5.9, 1138.0], [6.0, 1138.0], [6.1, 1138.0], [6.2, 1138.0], [6.3, 1138.0], [6.4, 1139.0], [6.5, 1139.0], [6.6, 1139.0], [6.7, 1143.0], [6.8, 1143.0], [6.9, 1143.0], [7.0, 1145.0], [7.1, 1145.0], [7.2, 1145.0], [7.3, 1145.0], [7.4, 1145.0], [7.5, 1145.0], [7.6, 1145.0], [7.7, 1146.0], [7.8, 1146.0], [7.9, 1146.0], [8.0, 1155.0], [8.1, 1155.0], [8.2, 1155.0], [8.3, 1155.0], [8.4, 1159.0], [8.5, 1159.0], [8.6, 1159.0], [8.7, 1161.0], [8.8, 1161.0], [8.9, 1161.0], [9.0, 1161.0], [9.1, 1168.0], [9.2, 1168.0], [9.3, 1168.0], [9.4, 1170.0], [9.5, 1170.0], [9.6, 1170.0], [9.7, 1171.0], [9.8, 1171.0], [9.9, 1171.0], [10.0, 1171.0], [10.1, 1187.0], [10.2, 1187.0], [10.3, 1187.0], [10.4, 1188.0], [10.5, 1188.0], [10.6, 1188.0], [10.7, 1232.0], [10.8, 1232.0], [10.9, 1232.0], [11.0, 1232.0], [11.1, 1243.0], [11.2, 1243.0], [11.3, 1243.0], [11.4, 1261.0], [11.5, 1261.0], [11.6, 1261.0], [11.7, 1277.0], [11.8, 1277.0], [11.9, 1277.0], [12.0, 1277.0], [12.1, 1284.0], [12.2, 1284.0], [12.3, 1284.0], [12.4, 1304.0], [12.5, 1304.0], [12.6, 1304.0], [12.7, 1332.0], [12.8, 1332.0], [12.9, 1332.0], [13.0, 1332.0], [13.1, 1351.0], [13.2, 1351.0], [13.3, 1351.0], [13.4, 1393.0], [13.5, 1393.0], [13.6, 1393.0], [13.7, 1454.0], [13.8, 1454.0], [13.9, 1454.0], [14.0, 1454.0], [14.1, 1455.0], [14.2, 1455.0], [14.3, 1455.0], [14.4, 1459.0], [14.5, 1459.0], [14.6, 1459.0], [14.7, 1463.0], [14.8, 1463.0], [14.9, 1463.0], [15.0, 1463.0], [15.1, 1491.0], [15.2, 1491.0], [15.3, 1491.0], [15.4, 1492.0], [15.5, 1492.0], [15.6, 1492.0], [15.7, 1496.0], [15.8, 1496.0], [15.9, 1496.0], [16.0, 1496.0], [16.1, 1500.0], [16.2, 1500.0], [16.3, 1500.0], [16.4, 1519.0], [16.5, 1519.0], [16.6, 1519.0], [16.7, 1532.0], [16.8, 1532.0], [16.9, 1532.0], [17.0, 1532.0], [17.1, 1542.0], [17.2, 1542.0], [17.3, 1542.0], [17.4, 1546.0], [17.5, 1546.0], [17.6, 1546.0], [17.7, 1607.0], [17.8, 1607.0], [17.9, 1607.0], [18.0, 1607.0], [18.1, 1610.0], [18.2, 1610.0], [18.3, 1610.0], [18.4, 1616.0], [18.5, 1616.0], [18.6, 1616.0], [18.7, 1621.0], [18.8, 1621.0], [18.9, 1621.0], [19.0, 1621.0], [19.1, 1624.0], [19.2, 1624.0], [19.3, 1624.0], [19.4, 1626.0], [19.5, 1626.0], [19.6, 1626.0], [19.7, 1636.0], [19.8, 1636.0], [19.9, 1636.0], [20.0, 1652.0], [20.1, 1652.0], [20.2, 1652.0], [20.3, 1652.0], [20.4, 1665.0], [20.5, 1665.0], [20.6, 1665.0], [20.7, 1671.0], [20.8, 1671.0], [20.9, 1671.0], [21.0, 1697.0], [21.1, 1697.0], [21.2, 1697.0], [21.3, 1697.0], [21.4, 1697.0], [21.5, 1697.0], [21.6, 1697.0], [21.7, 1698.0], [21.8, 1698.0], [21.9, 1698.0], [22.0, 1701.0], [22.1, 1701.0], [22.2, 1701.0], [22.3, 1701.0], [22.4, 1701.0], [22.5, 1701.0], [22.6, 1701.0], [22.7, 1711.0], [22.8, 1711.0], [22.9, 1711.0], [23.0, 1728.0], [23.1, 1728.0], [23.2, 1728.0], [23.3, 1728.0], [23.4, 1734.0], [23.5, 1734.0], [23.6, 1734.0], [23.7, 1735.0], [23.8, 1735.0], [23.9, 1735.0], [24.0, 1743.0], [24.1, 1743.0], [24.2, 1743.0], [24.3, 1743.0], [24.4, 1756.0], [24.5, 1756.0], [24.6, 1756.0], [24.7, 1767.0], [24.8, 1767.0], [24.9, 1767.0], [25.0, 1767.0], [25.1, 1767.0], [25.2, 1767.0], [25.3, 1767.0], [25.4, 1769.0], [25.5, 1769.0], [25.6, 1769.0], [25.7, 1774.0], [25.8, 1774.0], [25.9, 1774.0], [26.0, 1779.0], [26.1, 1779.0], [26.2, 1779.0], [26.3, 1779.0], [26.4, 1783.0], [26.5, 1783.0], [26.6, 1783.0], [26.7, 1792.0], [26.8, 1792.0], [26.9, 1792.0], [27.0, 1794.0], [27.1, 1794.0], [27.2, 1794.0], [27.3, 1794.0], [27.4, 1795.0], [27.5, 1795.0], [27.6, 1795.0], [27.7, 1795.0], [27.8, 1795.0], [27.9, 1795.0], [28.0, 1801.0], [28.1, 1801.0], [28.2, 1801.0], [28.3, 1801.0], [28.4, 1801.0], [28.5, 1801.0], [28.6, 1801.0], [28.7, 1802.0], [28.8, 1802.0], [28.9, 1802.0], [29.0, 1806.0], [29.1, 1806.0], [29.2, 1806.0], [29.3, 1806.0], [29.4, 1806.0], [29.5, 1806.0], [29.6, 1806.0], [29.7, 1806.0], [29.8, 1806.0], [29.9, 1806.0], [30.0, 1807.0], [30.1, 1807.0], [30.2, 1807.0], [30.3, 1807.0], [30.4, 1807.0], [30.5, 1807.0], [30.6, 1807.0], [30.7, 1819.0], [30.8, 1819.0], [30.9, 1819.0], [31.0, 1820.0], [31.1, 1820.0], [31.2, 1820.0], [31.3, 1820.0], [31.4, 1828.0], [31.5, 1828.0], [31.6, 1828.0], [31.7, 1844.0], [31.8, 1844.0], [31.9, 1844.0], [32.0, 1857.0], [32.1, 1857.0], [32.2, 1857.0], [32.3, 1857.0], [32.4, 1858.0], [32.5, 1858.0], [32.6, 1858.0], [32.7, 1866.0], [32.8, 1866.0], [32.9, 1866.0], [33.0, 1869.0], [33.1, 1869.0], [33.2, 1869.0], [33.3, 1869.0], [33.4, 1871.0], [33.5, 1871.0], [33.6, 1871.0], [33.7, 1889.0], [33.8, 1889.0], [33.9, 1889.0], [34.0, 1896.0], [34.1, 1896.0], [34.2, 1896.0], [34.3, 1896.0], [34.4, 1901.0], [34.5, 1901.0], [34.6, 1901.0], [34.7, 1908.0], [34.8, 1908.0], [34.9, 1908.0], [35.0, 1914.0], [35.1, 1914.0], [35.2, 1914.0], [35.3, 1914.0], [35.4, 1919.0], [35.5, 1919.0], [35.6, 1919.0], [35.7, 1957.0], [35.8, 1957.0], [35.9, 1957.0], [36.0, 1957.0], [36.1, 1981.0], [36.2, 1981.0], [36.3, 1981.0], [36.4, 2006.0], [36.5, 2006.0], [36.6, 2006.0], [36.7, 2015.0], [36.8, 2015.0], [36.9, 2015.0], [37.0, 2015.0], [37.1, 2027.0], [37.2, 2027.0], [37.3, 2027.0], [37.4, 2033.0], [37.5, 2033.0], [37.6, 2033.0], [37.7, 2038.0], [37.8, 2038.0], [37.9, 2038.0], [38.0, 2038.0], [38.1, 2081.0], [38.2, 2081.0], [38.3, 2081.0], [38.4, 2113.0], [38.5, 2113.0], [38.6, 2113.0], [38.7, 2125.0], [38.8, 2125.0], [38.9, 2125.0], [39.0, 2125.0], [39.1, 2154.0], [39.2, 2154.0], [39.3, 2154.0], [39.4, 2162.0], [39.5, 2162.0], [39.6, 2162.0], [39.7, 2165.0], [39.8, 2165.0], [39.9, 2165.0], [40.0, 2165.0], [40.1, 2168.0], [40.2, 2168.0], [40.3, 2168.0], [40.4, 2202.0], [40.5, 2202.0], [40.6, 2202.0], [40.7, 2223.0], [40.8, 2223.0], [40.9, 2223.0], [41.0, 2223.0], [41.1, 2228.0], [41.2, 2228.0], [41.3, 2228.0], [41.4, 2230.0], [41.5, 2230.0], [41.6, 2230.0], [41.7, 2232.0], [41.8, 2232.0], [41.9, 2232.0], [42.0, 2232.0], [42.1, 2241.0], [42.2, 2241.0], [42.3, 2241.0], [42.4, 2245.0], [42.5, 2245.0], [42.6, 2245.0], [42.7, 2246.0], [42.8, 2246.0], [42.9, 2246.0], [43.0, 2246.0], [43.1, 2246.0], [43.2, 2246.0], [43.3, 2246.0], [43.4, 2257.0], [43.5, 2257.0], [43.6, 2257.0], [43.7, 2269.0], [43.8, 2269.0], [43.9, 2269.0], [44.0, 2269.0], [44.1, 2298.0], [44.2, 2298.0], [44.3, 2298.0], [44.4, 2312.0], [44.5, 2312.0], [44.6, 2312.0], [44.7, 2326.0], [44.8, 2326.0], [44.9, 2326.0], [45.0, 2326.0], [45.1, 2343.0], [45.2, 2343.0], [45.3, 2343.0], [45.4, 2354.0], [45.5, 2354.0], [45.6, 2354.0], [45.7, 2357.0], [45.8, 2357.0], [45.9, 2357.0], [46.0, 2357.0], [46.1, 2365.0], [46.2, 2365.0], [46.3, 2365.0], [46.4, 2367.0], [46.5, 2367.0], [46.6, 2367.0], [46.7, 2417.0], [46.8, 2417.0], [46.9, 2417.0], [47.0, 2417.0], [47.1, 2450.0], [47.2, 2450.0], [47.3, 2450.0], [47.4, 2489.0], [47.5, 2489.0], [47.6, 2489.0], [47.7, 2513.0], [47.8, 2513.0], [47.9, 2513.0], [48.0, 2513.0], [48.1, 2516.0], [48.2, 2516.0], [48.3, 2516.0], [48.4, 2518.0], [48.5, 2518.0], [48.6, 2518.0], [48.7, 2534.0], [48.8, 2534.0], [48.9, 2534.0], [49.0, 2534.0], [49.1, 2540.0], [49.2, 2540.0], [49.3, 2540.0], [49.4, 2559.0], [49.5, 2559.0], [49.6, 2559.0], [49.7, 2562.0], [49.8, 2562.0], [49.9, 2562.0], [50.0, 2562.0], [50.1, 2562.0], [50.2, 2562.0], [50.3, 2562.0], [50.4, 2584.0], [50.5, 2584.0], [50.6, 2584.0], [50.7, 2591.0], [50.8, 2591.0], [50.9, 2591.0], [51.0, 2591.0], [51.1, 2600.0], [51.2, 2600.0], [51.3, 2600.0], [51.4, 2615.0], [51.5, 2615.0], [51.6, 2615.0], [51.7, 2635.0], [51.8, 2635.0], [51.9, 2635.0], [52.0, 2635.0], [52.1, 2643.0], [52.2, 2643.0], [52.3, 2643.0], [52.4, 2666.0], [52.5, 2666.0], [52.6, 2666.0], [52.7, 2677.0], [52.8, 2677.0], [52.9, 2677.0], [53.0, 2677.0], [53.1, 2683.0], [53.2, 2683.0], [53.3, 2683.0], [53.4, 2689.0], [53.5, 2689.0], [53.6, 2689.0], [53.7, 2717.0], [53.8, 2717.0], [53.9, 2717.0], [54.0, 2717.0], [54.1, 2735.0], [54.2, 2735.0], [54.3, 2735.0], [54.4, 2743.0], [54.5, 2743.0], [54.6, 2743.0], [54.7, 2766.0], [54.8, 2766.0], [54.9, 2766.0], [55.0, 2766.0], [55.1, 2773.0], [55.2, 2773.0], [55.3, 2773.0], [55.4, 2798.0], [55.5, 2798.0], [55.6, 2798.0], [55.7, 2814.0], [55.8, 2814.0], [55.9, 2814.0], [56.0, 2814.0], [56.1, 2817.0], [56.2, 2817.0], [56.3, 2817.0], [56.4, 2819.0], [56.5, 2819.0], [56.6, 2819.0], [56.7, 2829.0], [56.8, 2829.0], [56.9, 2829.0], [57.0, 2829.0], [57.1, 2830.0], [57.2, 2830.0], [57.3, 2830.0], [57.4, 2838.0], [57.5, 2838.0], [57.6, 2838.0], [57.7, 2856.0], [57.8, 2856.0], [57.9, 2856.0], [58.0, 2856.0], [58.1, 2860.0], [58.2, 2860.0], [58.3, 2860.0], [58.4, 2861.0], [58.5, 2861.0], [58.6, 2861.0], [58.7, 2888.0], [58.8, 2888.0], [58.9, 2888.0], [59.0, 2888.0], [59.1, 2898.0], [59.2, 2898.0], [59.3, 2898.0], [59.4, 2903.0], [59.5, 2903.0], [59.6, 2903.0], [59.7, 2918.0], [59.8, 2918.0], [59.9, 2918.0], [60.0, 2918.0], [60.1, 2921.0], [60.2, 2921.0], [60.3, 2921.0], [60.4, 2926.0], [60.5, 2926.0], [60.6, 2926.0], [60.7, 2945.0], [60.8, 2945.0], [60.9, 2945.0], [61.0, 2945.0], [61.1, 2965.0], [61.2, 2965.0], [61.3, 2965.0], [61.4, 2993.0], [61.5, 2993.0], [61.6, 2993.0], [61.7, 3000.0], [61.8, 3000.0], [61.9, 3000.0], [62.0, 3000.0], [62.1, 3004.0], [62.2, 3004.0], [62.3, 3004.0], [62.4, 3027.0], [62.5, 3027.0], [62.6, 3027.0], [62.7, 3039.0], [62.8, 3039.0], [62.9, 3039.0], [63.0, 3039.0], [63.1, 3053.0], [63.2, 3053.0], [63.3, 3053.0], [63.4, 3089.0], [63.5, 3089.0], [63.6, 3089.0], [63.7, 3122.0], [63.8, 3122.0], [63.9, 3122.0], [64.0, 3122.0], [64.1, 3171.0], [64.2, 3171.0], [64.3, 3171.0], [64.4, 3172.0], [64.5, 3172.0], [64.6, 3172.0], [64.7, 3196.0], [64.8, 3196.0], [64.9, 3196.0], [65.0, 3196.0], [65.1, 3212.0], [65.2, 3212.0], [65.3, 3212.0], [65.4, 3216.0], [65.5, 3216.0], [65.6, 3216.0], [65.7, 3286.0], [65.8, 3286.0], [65.9, 3286.0], [66.0, 3286.0], [66.1, 3306.0], [66.2, 3306.0], [66.3, 3306.0], [66.4, 3382.0], [66.5, 3382.0], [66.6, 3382.0], [66.7, 3389.0], [66.8, 3389.0], [66.9, 3389.0], [67.0, 3389.0], [67.1, 3397.0], [67.2, 3397.0], [67.3, 3397.0], [67.4, 3397.0], [67.5, 3397.0], [67.6, 3397.0], [67.7, 3405.0], [67.8, 3405.0], [67.9, 3405.0], [68.0, 3405.0], [68.1, 3424.0], [68.2, 3424.0], [68.3, 3424.0], [68.4, 3435.0], [68.5, 3435.0], [68.6, 3435.0], [68.7, 3472.0], [68.8, 3472.0], [68.9, 3472.0], [69.0, 3472.0], [69.1, 3531.0], [69.2, 3531.0], [69.3, 3531.0], [69.4, 3553.0], [69.5, 3553.0], [69.6, 3553.0], [69.7, 3564.0], [69.8, 3564.0], [69.9, 3564.0], [70.0, 3564.0], [70.1, 3567.0], [70.2, 3567.0], [70.3, 3567.0], [70.4, 3579.0], [70.5, 3579.0], [70.6, 3579.0], [70.7, 3603.0], [70.8, 3603.0], [70.9, 3603.0], [71.0, 3603.0], [71.1, 3611.0], [71.2, 3611.0], [71.3, 3611.0], [71.4, 3659.0], [71.5, 3659.0], [71.6, 3659.0], [71.7, 3676.0], [71.8, 3676.0], [71.9, 3676.0], [72.0, 3676.0], [72.1, 3681.0], [72.2, 3681.0], [72.3, 3681.0], [72.4, 3685.0], [72.5, 3685.0], [72.6, 3685.0], [72.7, 3690.0], [72.8, 3690.0], [72.9, 3690.0], [73.0, 3690.0], [73.1, 3711.0], [73.2, 3711.0], [73.3, 3711.0], [73.4, 3722.0], [73.5, 3722.0], [73.6, 3722.0], [73.7, 3772.0], [73.8, 3772.0], [73.9, 3772.0], [74.0, 3772.0], [74.1, 3787.0], [74.2, 3787.0], [74.3, 3787.0], [74.4, 3797.0], [74.5, 3797.0], [74.6, 3797.0], [74.7, 3803.0], [74.8, 3803.0], [74.9, 3803.0], [75.0, 3803.0], [75.1, 3808.0], [75.2, 3808.0], [75.3, 3808.0], [75.4, 3815.0], [75.5, 3815.0], [75.6, 3815.0], [75.7, 3819.0], [75.8, 3819.0], [75.9, 3819.0], [76.0, 3819.0], [76.1, 3954.0], [76.2, 3954.0], [76.3, 3954.0], [76.4, 3963.0], [76.5, 3963.0], [76.6, 3963.0], [76.7, 3977.0], [76.8, 3977.0], [76.9, 3977.0], [77.0, 3977.0], [77.1, 3979.0], [77.2, 3979.0], [77.3, 3979.0], [77.4, 3986.0], [77.5, 3986.0], [77.6, 3986.0], [77.7, 4008.0], [77.8, 4008.0], [77.9, 4008.0], [78.0, 4032.0], [78.1, 4032.0], [78.2, 4032.0], [78.3, 4032.0], [78.4, 4050.0], [78.5, 4050.0], [78.6, 4050.0], [78.7, 4073.0], [78.8, 4073.0], [78.9, 4073.0], [79.0, 4097.0], [79.1, 4097.0], [79.2, 4097.0], [79.3, 4097.0], [79.4, 4109.0], [79.5, 4109.0], [79.6, 4109.0], [79.7, 4153.0], [79.8, 4153.0], [79.9, 4153.0], [80.0, 4155.0], [80.1, 4155.0], [80.2, 4155.0], [80.3, 4155.0], [80.4, 4178.0], [80.5, 4178.0], [80.6, 4178.0], [80.7, 4190.0], [80.8, 4190.0], [80.9, 4190.0], [81.0, 4349.0], [81.1, 4349.0], [81.2, 4349.0], [81.3, 4349.0], [81.4, 4392.0], [81.5, 4392.0], [81.6, 4392.0], [81.7, 4432.0], [81.8, 4432.0], [81.9, 4432.0], [82.0, 4487.0], [82.1, 4487.0], [82.2, 4487.0], [82.3, 4487.0], [82.4, 4504.0], [82.5, 4504.0], [82.6, 4504.0], [82.7, 4529.0], [82.8, 4529.0], [82.9, 4529.0], [83.0, 4532.0], [83.1, 4532.0], [83.2, 4532.0], [83.3, 4532.0], [83.4, 4537.0], [83.5, 4537.0], [83.6, 4537.0], [83.7, 4570.0], [83.8, 4570.0], [83.9, 4570.0], [84.0, 4595.0], [84.1, 4595.0], [84.2, 4595.0], [84.3, 4595.0], [84.4, 4599.0], [84.5, 4599.0], [84.6, 4599.0], [84.7, 4605.0], [84.8, 4605.0], [84.9, 4605.0], [85.0, 4637.0], [85.1, 4637.0], [85.2, 4637.0], [85.3, 4637.0], [85.4, 4668.0], [85.5, 4668.0], [85.6, 4668.0], [85.7, 4733.0], [85.8, 4733.0], [85.9, 4733.0], [86.0, 4745.0], [86.1, 4745.0], [86.2, 4745.0], [86.3, 4745.0], [86.4, 4772.0], [86.5, 4772.0], [86.6, 4772.0], [86.7, 4803.0], [86.8, 4803.0], [86.9, 4803.0], [87.0, 4806.0], [87.1, 4806.0], [87.2, 4806.0], [87.3, 4806.0], [87.4, 4884.0], [87.5, 4884.0], [87.6, 4884.0], [87.7, 4896.0], [87.8, 4896.0], [87.9, 4896.0], [88.0, 4905.0], [88.1, 4905.0], [88.2, 4905.0], [88.3, 4905.0], [88.4, 5000.0], [88.5, 5000.0], [88.6, 5000.0], [88.7, 5018.0], [88.8, 5018.0], [88.9, 5018.0], [89.0, 5119.0], [89.1, 5119.0], [89.2, 5119.0], [89.3, 5119.0], [89.4, 5151.0], [89.5, 5151.0], [89.6, 5151.0], [89.7, 5260.0], [89.8, 5260.0], [89.9, 5260.0], [90.0, 5290.0], [90.1, 5290.0], [90.2, 5290.0], [90.3, 5290.0], [90.4, 5351.0], [90.5, 5351.0], [90.6, 5351.0], [90.7, 5490.0], [90.8, 5490.0], [90.9, 5490.0], [91.0, 5494.0], [91.1, 5494.0], [91.2, 5494.0], [91.3, 5494.0], [91.4, 5516.0], [91.5, 5516.0], [91.6, 5516.0], [91.7, 5533.0], [91.8, 5533.0], [91.9, 5533.0], [92.0, 5565.0], [92.1, 5565.0], [92.2, 5565.0], [92.3, 5565.0], [92.4, 5585.0], [92.5, 5585.0], [92.6, 5585.0], [92.7, 5637.0], [92.8, 5637.0], [92.9, 5637.0], [93.0, 5846.0], [93.1, 5846.0], [93.2, 5846.0], [93.3, 5846.0], [93.4, 6162.0], [93.5, 6162.0], [93.6, 6162.0], [93.7, 6170.0], [93.8, 6170.0], [93.9, 6170.0], [94.0, 6244.0], [94.1, 6244.0], [94.2, 6244.0], [94.3, 6244.0], [94.4, 6281.0], [94.5, 6281.0], [94.6, 6281.0], [94.7, 6610.0], [94.8, 6610.0], [94.9, 6610.0], [95.0, 6627.0], [95.1, 6627.0], [95.2, 6627.0], [95.3, 6627.0], [95.4, 6660.0], [95.5, 6660.0], [95.6, 6660.0], [95.7, 6874.0], [95.8, 6874.0], [95.9, 6874.0], [96.0, 7006.0], [96.1, 7006.0], [96.2, 7006.0], [96.3, 7006.0], [96.4, 7074.0], [96.5, 7074.0], [96.6, 7074.0], [96.7, 7220.0], [96.8, 7220.0], [96.9, 7220.0], [97.0, 7546.0], [97.1, 7546.0], [97.2, 7546.0], [97.3, 7546.0], [97.4, 7811.0], [97.5, 7811.0], [97.6, 7811.0], [97.7, 8359.0], [97.8, 8359.0], [97.9, 8359.0], [98.0, 9990.0], [98.1, 9990.0], [98.2, 9990.0], [98.3, 9990.0], [98.4, 10585.0], [98.5, 10585.0], [98.6, 10585.0], [98.7, 11608.0], [98.8, 11608.0], [98.9, 11608.0], [99.0, 12223.0], [99.1, 12223.0], [99.2, 12223.0], [99.3, 12223.0], [99.4, 12985.0], [99.5, 12985.0], [99.6, 12985.0], [99.7, 13505.0], [99.8, 13505.0], [99.9, 13505.0]], "isOverall": false, "label": "login", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 142.0, "series": [{"data": [[2200.0, 1.0], [2700.0, 1.0], [200.0, 138.0], [900.0, 3.0], [1000.0, 8.0], [1100.0, 3.0], [300.0, 31.0], [1200.0, 8.0], [4800.0, 1.0], [1300.0, 15.0], [1400.0, 7.0], [1500.0, 2.0], [1600.0, 1.0], [400.0, 80.0], [500.0, 1.0]], "isOverall": false, "label": "GetBookingIds ", "isController": false}, {"data": [[2100.0, 1.0], [2500.0, 2.0], [200.0, 142.0], [800.0, 1.0], [900.0, 3.0], [1000.0, 5.0], [1100.0, 5.0], [300.0, 34.0], [1200.0, 7.0], [1300.0, 5.0], [1400.0, 4.0], [1500.0, 5.0], [400.0, 85.0], [7300.0, 1.0]], "isOverall": false, "label": "CreateBooking ", "isController": false}, {"data": [[2200.0, 1.0], [2700.0, 1.0], [200.0, 142.0], [900.0, 4.0], [1000.0, 5.0], [1100.0, 6.0], [300.0, 32.0], [1200.0, 14.0], [1300.0, 2.0], [1400.0, 1.0], [400.0, 89.0], [6400.0, 1.0], [500.0, 1.0], [2000.0, 1.0]], "isOverall": false, "label": "UpdateBooking ", "isController": false}, {"data": [[1000.0, 5.0], [1100.0, 27.0], [1200.0, 5.0], [1300.0, 4.0], [1400.0, 7.0], [1500.0, 5.0], [1600.0, 13.0], [1700.0, 18.0], [1800.0, 19.0], [1900.0, 6.0], [2000.0, 6.0], [2100.0, 6.0], [2200.0, 12.0], [2300.0, 7.0], [2400.0, 3.0], [2500.0, 10.0], [2600.0, 8.0], [2800.0, 11.0], [2700.0, 6.0], [2900.0, 7.0], [3000.0, 6.0], [3100.0, 4.0], [3300.0, 5.0], [3200.0, 3.0], [3400.0, 4.0], [3500.0, 5.0], [3600.0, 7.0], [3700.0, 5.0], [3800.0, 4.0], [3900.0, 5.0], [4000.0, 5.0], [4100.0, 5.0], [4300.0, 2.0], [4500.0, 7.0], [4600.0, 3.0], [4400.0, 2.0], [4800.0, 4.0], [4700.0, 3.0], [5000.0, 2.0], [4900.0, 1.0], [5100.0, 2.0], [5200.0, 2.0], [5300.0, 1.0], [5500.0, 4.0], [5400.0, 2.0], [5600.0, 1.0], [5800.0, 1.0], [6100.0, 2.0], [6200.0, 2.0], [6600.0, 3.0], [6800.0, 1.0], [7000.0, 2.0], [7200.0, 1.0], [7500.0, 1.0], [7800.0, 1.0], [8300.0, 1.0], [9900.0, 1.0], [10500.0, 1.0], [11600.0, 1.0], [12200.0, 1.0], [12900.0, 1.0], [13500.0, 1.0]], "isOverall": false, "label": "login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 13500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 157.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 773.0, "series": [{"data": [[0.0, 773.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 157.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 270.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.72210044E12, "maxY": 97.37864887406172, "series": [{"data": [[1.72210044E12, 97.37864887406172], [1.7221005E12, 1.0]], "isOverall": false, "label": "BookingApplication", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7221005E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 265.0, "minX": 1.0, "maxY": 12985.0, "series": [{"data": [[2.0, 286.0], [3.0, 284.0], [4.0, 286.0], [5.0, 1523.0], [6.0, 946.0], [10.0, 268.0], [11.0, 284.0], [12.0, 273.0], [13.0, 286.0], [14.0, 1379.0], [15.0, 799.5], [18.0, 1048.0], [19.0, 271.6666666666667], [24.0, 874.5], [26.0, 279.0], [28.0, 284.0], [29.0, 1406.0], [30.0, 281.0], [35.0, 286.0], [39.0, 275.0], [40.0, 285.5], [43.0, 288.5], [47.0, 283.0], [46.0, 268.0], [49.0, 273.0], [48.0, 486.75], [51.0, 286.0], [52.0, 751.5], [57.0, 787.5], [59.0, 1329.0], [58.0, 1301.0], [61.0, 1100.0], [67.0, 268.0], [68.0, 284.0], [69.0, 278.5], [70.0, 279.0], [71.0, 291.0], [73.0, 292.0], [75.0, 288.3333333333333], [74.0, 525.625], [76.0, 274.0], [78.0, 593.5], [81.0, 287.3333333333333], [80.0, 510.8888888888889], [82.0, 284.25], [83.0, 636.3333333333333], [84.0, 279.0], [85.0, 283.0], [87.0, 278.5], [86.0, 281.0], [89.0, 284.0], [88.0, 284.0], [91.0, 628.6666666666667], [92.0, 274.0], [93.0, 958.0], [94.0, 281.0], [95.0, 287.0], [97.0, 289.0], [98.0, 274.0], [99.0, 287.0], [96.0, 281.6666666666667], [100.0, 742.5], [103.0, 280.6666666666667], [102.0, 290.0], [104.0, 469.0], [105.0, 414.25], [106.0, 487.2], [107.0, 386.5], [108.0, 509.20000000000005], [109.0, 434.44444444444446], [110.0, 530.8571428571429], [111.0, 576.0], [112.0, 318.0], [114.0, 370.25], [115.0, 502.6], [116.0, 399.5], [117.0, 415.0], [118.0, 725.6666666666666], [119.0, 402.8], [121.0, 435.0], [120.0, 332.5], [123.0, 386.0], [122.0, 409.0], [125.0, 817.5], [126.0, 750.6666666666666], [127.0, 866.0], [124.0, 356.5], [129.0, 456.0], [130.0, 410.5], [132.0, 587.875], [135.0, 472.0], [134.0, 1090.5], [133.0, 427.75], [131.0, 435.5], [128.0, 388.0], [136.0, 776.3333333333333], [138.0, 797.3333333333334], [139.0, 466.0], [140.0, 477.0], [141.0, 448.3333333333333], [142.0, 747.0], [137.0, 469.0], [145.0, 474.5], [148.0, 887.5], [149.0, 608.8571428571429], [150.0, 434.5], [151.0, 768.0], [146.0, 421.0], [152.0, 838.0], [1.0, 1589.0]], "isOverall": false, "label": "GetBookingIds ", "isController": false}, {"data": [[96.41666666666667, 520.5333333333332]], "isOverall": false, "label": "GetBookingIds -Aggregated", "isController": false}, {"data": [[2.0, 307.5], [3.0, 285.0], [4.0, 284.0], [12.0, 274.5], [13.0, 281.6666666666667], [15.0, 278.0], [21.0, 288.0], [23.0, 7360.0], [24.0, 1456.0], [28.0, 287.0], [29.0, 282.5], [30.0, 738.0], [33.0, 282.0], [35.0, 1382.0], [47.0, 285.0], [48.0, 1089.0], [50.0, 283.5], [52.0, 1338.3333333333333], [54.0, 286.0], [57.0, 276.5], [56.0, 276.0], [58.0, 265.0], [59.0, 280.0], [61.0, 515.0], [63.0, 285.0], [64.0, 285.0], [66.0, 290.0], [68.0, 274.5], [69.0, 274.0], [72.0, 268.0], [74.0, 281.0], [75.0, 288.0], [76.0, 282.33333333333337], [77.0, 285.0], [78.0, 284.0], [79.0, 272.0], [80.0, 460.75], [82.0, 278.75], [83.0, 285.0], [81.0, 591.25], [85.0, 445.75], [84.0, 290.0], [86.0, 513.3333333333334], [89.0, 281.5], [90.0, 283.5], [93.0, 539.5], [92.0, 277.3333333333333], [94.0, 280.0], [95.0, 284.0], [96.0, 280.5], [97.0, 281.0], [98.0, 1043.0], [99.0, 518.0], [100.0, 280.5], [101.0, 283.5], [103.0, 279.8], [102.0, 290.5], [104.0, 283.0], [105.0, 296.0], [106.0, 320.75], [107.0, 386.66666666666663], [108.0, 425.3333333333333], [109.0, 455.6666666666667], [110.0, 498.0], [111.0, 282.6666666666667], [112.0, 476.0], [113.0, 315.6666666666667], [114.0, 377.2], [115.0, 452.0], [117.0, 400.0], [116.0, 308.8], [118.0, 834.0], [119.0, 556.6666666666666], [120.0, 898.5], [121.0, 428.0], [122.0, 392.0], [123.0, 406.75], [124.0, 392.25], [127.0, 432.0], [126.0, 381.0], [129.0, 432.0], [131.0, 1284.0], [132.0, 529.1111111111111], [134.0, 462.5], [135.0, 834.0], [133.0, 441.0], [130.0, 444.4], [136.0, 438.25], [140.0, 461.0], [141.0, 850.8571428571428], [142.0, 810.3333333333333], [143.0, 421.3333333333333], [137.0, 471.0], [144.0, 724.3333333333334], [146.0, 810.0], [148.0, 456.0], [149.0, 839.6], [151.0, 785.0], [152.0, 431.25]], "isOverall": false, "label": "CreateBooking ", "isController": false}, {"data": [[98.74999999999997, 493.9166666666665]], "isOverall": false, "label": "CreateBooking -Aggregated", "isController": false}, {"data": [[2.0, 293.0], [3.0, 288.0], [4.0, 284.0], [5.0, 273.0], [6.0, 281.0], [7.0, 1260.0], [8.0, 273.0], [9.0, 280.0], [10.0, 291.0], [11.0, 274.0], [12.0, 293.0], [13.0, 291.0], [14.0, 1064.0], [15.0, 270.0], [16.0, 1252.0], [17.0, 275.0], [18.0, 276.0], [19.0, 267.0], [20.0, 287.0], [21.0, 288.0], [22.0, 270.0], [23.0, 293.0], [24.0, 287.0], [25.0, 280.0], [26.0, 284.0], [27.0, 281.0], [28.0, 278.0], [29.0, 281.0], [30.0, 288.0], [31.0, 280.0], [33.0, 286.0], [32.0, 284.0], [35.0, 287.0], [34.0, 289.0], [37.0, 283.0], [36.0, 271.0], [39.0, 275.0], [38.0, 304.0], [41.0, 276.0], [40.0, 285.0], [43.0, 271.0], [42.0, 272.0], [45.0, 6420.0], [44.0, 288.0], [47.0, 280.0], [46.0, 281.0], [49.0, 272.0], [48.0, 1285.0], [51.0, 288.0], [50.0, 281.0], [53.0, 281.0], [52.0, 273.0], [55.0, 1259.0], [54.0, 278.0], [57.0, 1237.0], [56.0, 278.0], [59.0, 290.0], [58.0, 285.0], [61.0, 1256.0], [60.0, 1317.0], [63.0, 279.0], [62.0, 281.0], [67.0, 301.0], [66.0, 278.5], [64.0, 274.0], [71.0, 1200.0], [70.0, 291.0], [69.0, 294.0], [68.0, 271.0], [75.0, 275.4], [74.0, 296.0], [73.0, 294.5], [76.0, 289.5], [79.0, 286.5], [78.0, 274.3333333333333], [77.0, 273.0], [81.0, 277.6666666666667], [83.0, 280.8], [82.0, 442.5], [80.0, 287.0], [84.0, 282.2], [86.0, 282.0], [85.0, 284.0], [87.0, 278.0], [89.0, 286.0], [90.0, 286.5], [91.0, 290.0], [88.0, 288.0], [93.0, 353.44444444444446], [94.0, 279.75], [95.0, 271.0], [92.0, 274.0], [96.0, 503.3333333333333], [99.0, 285.0], [98.0, 282.5], [100.0, 278.5], [103.0, 286.0], [102.0, 1184.0], [101.0, 281.0], [104.0, 517.75], [105.0, 291.0], [107.0, 514.8181818181818], [106.0, 766.5], [109.0, 509.50000000000006], [110.0, 476.875], [108.0, 500.83333333333337], [111.0, 285.0], [115.0, 372.3333333333333], [114.0, 1029.0], [113.0, 282.0], [112.0, 290.0], [116.0, 336.0], [117.0, 396.2], [119.0, 544.0], [118.0, 2091.0], [120.0, 415.0], [121.0, 383.0], [123.0, 387.25], [122.0, 1224.0], [124.0, 394.0], [125.0, 381.5], [127.0, 390.0], [126.0, 370.0], [128.0, 416.0], [130.0, 812.0], [133.0, 587.6666666666666], [132.0, 445.6666666666667], [135.0, 466.75], [134.0, 533.7777777777778], [131.0, 421.0], [129.0, 414.0], [136.0, 839.0], [137.0, 471.0], [141.0, 815.0], [142.0, 452.25], [143.0, 446.0], [140.0, 1263.0], [139.0, 453.0], [138.0, 1420.0], [144.0, 447.5], [148.0, 690.0], [149.0, 650.5], [150.0, 426.5], [151.0, 406.5], [147.0, 406.0], [146.0, 433.0], [145.0, 447.0], [152.0, 437.0], [1.0, 295.0]], "isOverall": false, "label": "UpdateBooking ", "isController": false}, {"data": [[93.90666666666658, 473.63666666666643]], "isOverall": false, "label": "UpdateBooking -Aggregated", "isController": false}, {"data": [[2.0, 12864.0], [4.0, 12985.0], [5.0, 11608.0], [13.0, 7484.5], [15.0, 7770.4], [16.0, 7811.0], [26.0, 7006.0], [28.0, 5290.0], [30.0, 6452.0], [32.0, 4190.0], [35.0, 4370.5], [37.0, 4109.0], [41.0, 3722.0], [50.0, 1299.0], [53.0, 3256.25], [52.0, 4487.0], [54.0, 1459.0], [55.0, 1138.0], [57.0, 2649.0], [60.0, 1493.5], [61.0, 4891.5], [64.0, 2961.6666666666665], [67.0, 1131.0], [66.0, 4247.5], [68.0, 1135.0], [71.0, 1982.3333333333333], [69.0, 3890.0], [72.0, 1507.6666666666667], [73.0, 1168.0], [74.0, 2038.6666666666667], [75.0, 3087.5], [76.0, 1083.0], [77.0, 1112.5], [78.0, 3767.5], [80.0, 1146.0], [81.0, 1999.5], [82.0, 1858.0], [83.0, 1717.0], [84.0, 2258.75], [85.0, 1974.75], [86.0, 1131.0], [87.0, 6902.5], [88.0, 1671.0], [89.0, 3539.5], [91.0, 2861.0], [90.0, 4097.0], [92.0, 3091.2], [93.0, 1709.0], [94.0, 1145.0], [95.0, 2536.2], [96.0, 2382.75], [97.0, 1987.5], [98.0, 2567.0], [99.0, 2888.0], [100.0, 2727.3333333333335], [101.0, 2401.5], [102.0, 2365.5], [103.0, 1123.0], [105.0, 3296.2], [107.0, 2166.0], [106.0, 2393.5], [104.0, 6170.0], [108.0, 2381.909090909091], [109.0, 2436.0], [110.0, 2544.6], [111.0, 3187.5], [112.0, 2778.5], [114.0, 2653.8], [115.0, 3306.5], [116.0, 3427.2], [117.0, 1841.0], [118.0, 2274.0], [119.0, 2925.818181818182], [120.0, 3034.222222222222], [121.0, 3352.75], [122.0, 2286.0], [123.0, 2600.0], [124.0, 2288.3333333333335], [127.0, 2178.6666666666665], [126.0, 4938.666666666667], [125.0, 1718.0], [128.0, 2912.5], [129.0, 2887.0], [130.0, 7074.0], [131.0, 2793.2], [133.0, 2837.75], [132.0, 3820.0], [134.0, 4047.3333333333335], [135.0, 3378.5], [136.0, 3042.75], [137.0, 1819.0], [139.0, 2245.0], [141.0, 3172.0], [143.0, 1829.5], [142.0, 3659.0], [140.0, 2627.5], [145.0, 2802.0], [148.0, 2753.0], [147.0, 2817.0], [149.0, 2342.6], [150.0, 2761.6666666666665], [151.0, 3865.3333333333335], [144.0, 3397.0]], "isOverall": false, "label": "login", "isController": false}, {"data": [[100.11999999999998, 3053.923333333336]], "isOverall": false, "label": "login-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 152.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 8.35, "minX": 1.72210044E12, "maxY": 17812.683333333334, "series": [{"data": [[1.72210044E12, 17812.683333333334], [1.7221005E12, 15.383333333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72210044E12, 6851.65], [1.7221005E12, 8.35]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7221005E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 295.0, "minX": 1.72210044E12, "maxY": 3053.923333333336, "series": [{"data": [[1.72210044E12, 520.5333333333332]], "isOverall": false, "label": "GetBookingIds ", "isController": false}, {"data": [[1.72210044E12, 493.9166666666665]], "isOverall": false, "label": "CreateBooking ", "isController": false}, {"data": [[1.72210044E12, 474.2341137123743], [1.7221005E12, 295.0]], "isOverall": false, "label": "UpdateBooking ", "isController": false}, {"data": [[1.72210044E12, 3053.923333333336]], "isOverall": false, "label": "login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7221005E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 295.0, "minX": 1.72210044E12, "maxY": 3053.8800000000006, "series": [{"data": [[1.72210044E12, 520.5300000000004]], "isOverall": false, "label": "GetBookingIds ", "isController": false}, {"data": [[1.72210044E12, 493.91000000000025]], "isOverall": false, "label": "CreateBooking ", "isController": false}, {"data": [[1.72210044E12, 474.22408026755863], [1.7221005E12, 295.0]], "isOverall": false, "label": "UpdateBooking ", "isController": false}, {"data": [[1.72210044E12, 3053.8800000000006]], "isOverall": false, "label": "login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7221005E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72210044E12, "maxY": 2543.6066666666666, "series": [{"data": [[1.72210044E12, 0.0]], "isOverall": false, "label": "GetBookingIds ", "isController": false}, {"data": [[1.72210044E12, 0.0]], "isOverall": false, "label": "CreateBooking ", "isController": false}, {"data": [[1.72210044E12, 0.0], [1.7221005E12, 0.0]], "isOverall": false, "label": "UpdateBooking ", "isController": false}, {"data": [[1.72210044E12, 2543.6066666666666]], "isOverall": false, "label": "login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7221005E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 260.0, "minX": 1.72210044E12, "maxY": 13505.0, "series": [{"data": [[1.72210044E12, 13505.0], [1.7221005E12, 295.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72210044E12, 260.0], [1.7221005E12, 295.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72210044E12, 2965.0], [1.7221005E12, 295.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72210044E12, 7074.0], [1.7221005E12, 295.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72210044E12, 424.0], [1.7221005E12, 295.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.72210044E12, 4349.0], [1.7221005E12, 295.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7221005E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 280.0, "minX": 1.0, "maxY": 1282.0, "series": [{"data": [[141.0, 286.0], [3.0, 307.5], [57.0, 286.0], [15.0, 280.0], [1.0, 942.0], [73.0, 288.0], [83.0, 289.0], [20.0, 1282.0], [5.0, 285.0], [84.0, 289.5], [86.0, 451.0], [85.0, 465.0], [87.0, 469.0], [92.0, 415.0], [6.0, 285.0], [26.0, 1113.0], [107.0, 364.0], [112.0, 453.5], [28.0, 284.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 141.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 280.0, "minX": 1.0, "maxY": 1282.0, "series": [{"data": [[141.0, 286.0], [3.0, 307.5], [57.0, 286.0], [15.0, 280.0], [1.0, 942.0], [73.0, 288.0], [83.0, 289.0], [20.0, 1282.0], [5.0, 285.0], [84.0, 289.5], [86.0, 451.0], [85.0, 465.0], [87.0, 469.0], [92.0, 415.0], [6.0, 285.0], [26.0, 1112.5], [107.0, 364.0], [112.0, 453.5], [28.0, 284.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 141.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.72210044E12, "maxY": 20.0, "series": [{"data": [[1.72210044E12, 20.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72210044E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.72210044E12, "maxY": 19.983333333333334, "series": [{"data": [[1.72210044E12, 19.983333333333334], [1.7221005E12, 0.016666666666666666]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7221005E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.72210044E12, "maxY": 5.0, "series": [{"data": [[1.72210044E12, 5.0]], "isOverall": false, "label": "GetBookingIds -success", "isController": false}, {"data": [[1.72210044E12, 4.983333333333333], [1.7221005E12, 0.016666666666666666]], "isOverall": false, "label": "UpdateBooking -success", "isController": false}, {"data": [[1.72210044E12, 5.0]], "isOverall": false, "label": "login-success", "isController": false}, {"data": [[1.72210044E12, 5.0]], "isOverall": false, "label": "CreateBooking -success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7221005E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.72210044E12, "maxY": 19.983333333333334, "series": [{"data": [[1.72210044E12, 19.983333333333334], [1.7221005E12, 0.016666666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7221005E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

