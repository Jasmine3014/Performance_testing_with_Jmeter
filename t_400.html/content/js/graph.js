/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 231.0, "minX": 0.0, "maxY": 79806.0, "series": [{"data": [[0.0, 233.0], [0.1, 233.0], [0.2, 233.0], [0.3, 233.0], [0.4, 233.0], [0.5, 234.0], [0.6, 234.0], [0.7, 234.0], [0.8, 234.0], [0.9, 234.0], [1.0, 234.0], [1.1, 234.0], [1.2, 234.0], [1.3, 234.0], [1.4, 234.0], [1.5, 234.0], [1.6, 234.0], [1.7, 234.0], [1.8, 234.0], [1.9, 234.0], [2.0, 235.0], [2.1, 235.0], [2.2, 235.0], [2.3, 235.0], [2.4, 235.0], [2.5, 235.0], [2.6, 235.0], [2.7, 235.0], [2.8, 235.0], [2.9, 235.0], [3.0, 235.0], [3.1, 235.0], [3.2, 235.0], [3.3, 235.0], [3.4, 235.0], [3.5, 235.0], [3.6, 235.0], [3.7, 235.0], [3.8, 235.0], [3.9, 235.0], [4.0, 235.0], [4.1, 235.0], [4.2, 235.0], [4.3, 236.0], [4.4, 236.0], [4.5, 237.0], [4.6, 237.0], [4.7, 237.0], [4.8, 237.0], [4.9, 237.0], [5.0, 238.0], [5.1, 238.0], [5.2, 238.0], [5.3, 238.0], [5.4, 238.0], [5.5, 239.0], [5.6, 239.0], [5.7, 239.0], [5.8, 239.0], [5.9, 239.0], [6.0, 239.0], [6.1, 239.0], [6.2, 239.0], [6.3, 239.0], [6.4, 239.0], [6.5, 240.0], [6.6, 240.0], [6.7, 240.0], [6.8, 240.0], [6.9, 240.0], [7.0, 240.0], [7.1, 240.0], [7.2, 240.0], [7.3, 240.0], [7.4, 240.0], [7.5, 240.0], [7.6, 240.0], [7.7, 240.0], [7.8, 240.0], [7.9, 240.0], [8.0, 240.0], [8.1, 240.0], [8.2, 240.0], [8.3, 240.0], [8.4, 240.0], [8.5, 240.0], [8.6, 240.0], [8.7, 240.0], [8.8, 241.0], [8.9, 241.0], [9.0, 241.0], [9.1, 241.0], [9.2, 241.0], [9.3, 241.0], [9.4, 241.0], [9.5, 241.0], [9.6, 241.0], [9.7, 241.0], [9.8, 242.0], [9.9, 242.0], [10.0, 242.0], [10.1, 242.0], [10.2, 242.0], [10.3, 242.0], [10.4, 242.0], [10.5, 242.0], [10.6, 242.0], [10.7, 242.0], [10.8, 242.0], [10.9, 242.0], [11.0, 242.0], [11.1, 242.0], [11.2, 242.0], [11.3, 243.0], [11.4, 243.0], [11.5, 243.0], [11.6, 243.0], [11.7, 243.0], [11.8, 243.0], [11.9, 243.0], [12.0, 243.0], [12.1, 243.0], [12.2, 243.0], [12.3, 243.0], [12.4, 243.0], [12.5, 243.0], [12.6, 243.0], [12.7, 243.0], [12.8, 244.0], [12.9, 244.0], [13.0, 244.0], [13.1, 244.0], [13.2, 244.0], [13.3, 244.0], [13.4, 244.0], [13.5, 244.0], [13.6, 244.0], [13.7, 244.0], [13.8, 244.0], [13.9, 244.0], [14.0, 244.0], [14.1, 244.0], [14.2, 244.0], [14.3, 244.0], [14.4, 244.0], [14.5, 245.0], [14.6, 245.0], [14.7, 245.0], [14.8, 245.0], [14.9, 245.0], [15.0, 245.0], [15.1, 245.0], [15.2, 245.0], [15.3, 245.0], [15.4, 245.0], [15.5, 245.0], [15.6, 245.0], [15.7, 245.0], [15.8, 245.0], [15.9, 245.0], [16.0, 246.0], [16.1, 246.0], [16.2, 246.0], [16.3, 246.0], [16.4, 246.0], [16.5, 246.0], [16.6, 246.0], [16.7, 246.0], [16.8, 246.0], [16.9, 246.0], [17.0, 246.0], [17.1, 246.0], [17.2, 246.0], [17.3, 246.0], [17.4, 246.0], [17.5, 246.0], [17.6, 246.0], [17.7, 246.0], [17.8, 246.0], [17.9, 246.0], [18.0, 246.0], [18.1, 246.0], [18.2, 246.0], [18.3, 246.0], [18.4, 246.0], [18.5, 247.0], [18.6, 247.0], [18.7, 247.0], [18.8, 247.0], [18.9, 247.0], [19.0, 247.0], [19.1, 247.0], [19.2, 247.0], [19.3, 247.0], [19.4, 247.0], [19.5, 247.0], [19.6, 247.0], [19.7, 247.0], [19.8, 248.0], [19.9, 248.0], [20.0, 248.0], [20.1, 248.0], [20.2, 248.0], [20.3, 249.0], [20.4, 249.0], [20.5, 249.0], [20.6, 249.0], [20.7, 249.0], [20.8, 249.0], [20.9, 249.0], [21.0, 249.0], [21.1, 249.0], [21.2, 249.0], [21.3, 249.0], [21.4, 249.0], [21.5, 249.0], [21.6, 249.0], [21.7, 249.0], [21.8, 250.0], [21.9, 250.0], [22.0, 250.0], [22.1, 250.0], [22.2, 250.0], [22.3, 250.0], [22.4, 250.0], [22.5, 250.0], [22.6, 250.0], [22.7, 250.0], [22.8, 251.0], [22.9, 251.0], [23.0, 251.0], [23.1, 251.0], [23.2, 251.0], [23.3, 251.0], [23.4, 251.0], [23.5, 251.0], [23.6, 251.0], [23.7, 251.0], [23.8, 251.0], [23.9, 251.0], [24.0, 251.0], [24.1, 251.0], [24.2, 251.0], [24.3, 251.0], [24.4, 251.0], [24.5, 251.0], [24.6, 251.0], [24.7, 251.0], [24.8, 251.0], [24.9, 251.0], [25.0, 251.0], [25.1, 251.0], [25.2, 251.0], [25.3, 252.0], [25.4, 252.0], [25.5, 252.0], [25.6, 252.0], [25.7, 252.0], [25.8, 252.0], [25.9, 252.0], [26.0, 252.0], [26.1, 252.0], [26.2, 252.0], [26.3, 252.0], [26.4, 252.0], [26.5, 252.0], [26.6, 252.0], [26.7, 252.0], [26.8, 252.0], [26.9, 252.0], [27.0, 253.0], [27.1, 253.0], [27.2, 253.0], [27.3, 253.0], [27.4, 253.0], [27.5, 253.0], [27.6, 253.0], [27.7, 253.0], [27.8, 253.0], [27.9, 253.0], [28.0, 253.0], [28.1, 253.0], [28.2, 253.0], [28.3, 253.0], [28.4, 253.0], [28.5, 254.0], [28.6, 254.0], [28.7, 254.0], [28.8, 254.0], [28.9, 254.0], [29.0, 254.0], [29.1, 254.0], [29.2, 254.0], [29.3, 254.0], [29.4, 254.0], [29.5, 255.0], [29.6, 255.0], [29.7, 255.0], [29.8, 255.0], [29.9, 255.0], [30.0, 255.0], [30.1, 255.0], [30.2, 255.0], [30.3, 255.0], [30.4, 255.0], [30.5, 255.0], [30.6, 255.0], [30.7, 255.0], [30.8, 256.0], [30.9, 256.0], [31.0, 257.0], [31.1, 257.0], [31.2, 257.0], [31.3, 257.0], [31.4, 257.0], [31.5, 258.0], [31.6, 258.0], [31.7, 258.0], [31.8, 258.0], [31.9, 258.0], [32.0, 258.0], [32.1, 258.0], [32.2, 258.0], [32.3, 259.0], [32.4, 259.0], [32.5, 259.0], [32.6, 259.0], [32.7, 259.0], [32.8, 260.0], [32.9, 260.0], [33.0, 260.0], [33.1, 260.0], [33.2, 260.0], [33.3, 260.0], [33.4, 260.0], [33.5, 260.0], [33.6, 260.0], [33.7, 260.0], [33.8, 261.0], [33.9, 261.0], [34.0, 263.0], [34.1, 263.0], [34.2, 263.0], [34.3, 263.0], [34.4, 263.0], [34.5, 264.0], [34.6, 264.0], [34.7, 264.0], [34.8, 265.0], [34.9, 265.0], [35.0, 266.0], [35.1, 266.0], [35.2, 266.0], [35.3, 266.0], [35.4, 266.0], [35.5, 266.0], [35.6, 266.0], [35.7, 266.0], [35.8, 267.0], [35.9, 267.0], [36.0, 268.0], [36.1, 268.0], [36.2, 268.0], [36.3, 268.0], [36.4, 268.0], [36.5, 269.0], [36.6, 269.0], [36.7, 269.0], [36.8, 269.0], [36.9, 269.0], [37.0, 270.0], [37.1, 270.0], [37.2, 270.0], [37.3, 270.0], [37.4, 270.0], [37.5, 270.0], [37.6, 270.0], [37.7, 270.0], [37.8, 270.0], [37.9, 270.0], [38.0, 271.0], [38.1, 271.0], [38.2, 271.0], [38.3, 271.0], [38.4, 271.0], [38.5, 273.0], [38.6, 273.0], [38.7, 273.0], [38.8, 275.0], [38.9, 275.0], [39.0, 275.0], [39.1, 275.0], [39.2, 275.0], [39.3, 276.0], [39.4, 276.0], [39.5, 277.0], [39.6, 277.0], [39.7, 277.0], [39.8, 278.0], [39.9, 278.0], [40.0, 278.0], [40.1, 278.0], [40.2, 278.0], [40.3, 278.0], [40.4, 278.0], [40.5, 278.0], [40.6, 278.0], [40.7, 278.0], [40.8, 278.0], [40.9, 278.0], [41.0, 279.0], [41.1, 279.0], [41.2, 279.0], [41.3, 279.0], [41.4, 279.0], [41.5, 279.0], [41.6, 279.0], [41.7, 279.0], [41.8, 280.0], [41.9, 280.0], [42.0, 280.0], [42.1, 280.0], [42.2, 280.0], [42.3, 285.0], [42.4, 285.0], [42.5, 288.0], [42.6, 288.0], [42.7, 288.0], [42.8, 288.0], [42.9, 288.0], [43.0, 293.0], [43.1, 293.0], [43.2, 293.0], [43.3, 293.0], [43.4, 293.0], [43.5, 296.0], [43.6, 296.0], [43.7, 296.0], [43.8, 296.0], [43.9, 296.0], [44.0, 297.0], [44.1, 297.0], [44.2, 297.0], [44.3, 299.0], [44.4, 299.0], [44.5, 303.0], [44.6, 303.0], [44.7, 303.0], [44.8, 304.0], [44.9, 304.0], [45.0, 307.0], [45.1, 307.0], [45.2, 307.0], [45.3, 309.0], [45.4, 309.0], [45.5, 310.0], [45.6, 310.0], [45.7, 310.0], [45.8, 310.0], [45.9, 310.0], [46.0, 310.0], [46.1, 310.0], [46.2, 310.0], [46.3, 311.0], [46.4, 311.0], [46.5, 312.0], [46.6, 312.0], [46.7, 312.0], [46.8, 317.0], [46.9, 317.0], [47.0, 317.0], [47.1, 317.0], [47.2, 317.0], [47.3, 321.0], [47.4, 321.0], [47.5, 322.0], [47.6, 322.0], [47.7, 322.0], [47.8, 324.0], [47.9, 324.0], [48.0, 334.0], [48.1, 334.0], [48.2, 334.0], [48.3, 334.0], [48.4, 334.0], [48.5, 335.0], [48.6, 335.0], [48.7, 335.0], [48.8, 337.0], [48.9, 337.0], [49.0, 341.0], [49.1, 341.0], [49.2, 341.0], [49.3, 345.0], [49.4, 345.0], [49.5, 352.0], [49.6, 352.0], [49.7, 352.0], [49.8, 352.0], [49.9, 352.0], [50.0, 360.0], [50.1, 360.0], [50.2, 360.0], [50.3, 370.0], [50.4, 370.0], [50.5, 371.0], [50.6, 371.0], [50.7, 371.0], [50.8, 371.0], [50.9, 371.0], [51.0, 371.0], [51.1, 371.0], [51.2, 371.0], [51.3, 377.0], [51.4, 377.0], [51.5, 378.0], [51.6, 378.0], [51.7, 378.0], [51.8, 378.0], [51.9, 378.0], [52.0, 381.0], [52.1, 381.0], [52.2, 381.0], [52.3, 381.0], [52.4, 381.0], [52.5, 383.0], [52.6, 383.0], [52.7, 383.0], [52.8, 385.0], [52.9, 385.0], [53.0, 386.0], [53.1, 386.0], [53.2, 386.0], [53.3, 387.0], [53.4, 387.0], [53.5, 387.0], [53.6, 387.0], [53.7, 387.0], [53.8, 388.0], [53.9, 388.0], [54.0, 388.0], [54.1, 388.0], [54.2, 388.0], [54.3, 388.0], [54.4, 388.0], [54.5, 389.0], [54.6, 389.0], [54.7, 389.0], [54.8, 389.0], [54.9, 389.0], [55.0, 392.0], [55.1, 392.0], [55.2, 392.0], [55.3, 393.0], [55.4, 393.0], [55.5, 393.0], [55.6, 393.0], [55.7, 393.0], [55.8, 394.0], [55.9, 394.0], [56.0, 394.0], [56.1, 394.0], [56.2, 394.0], [56.3, 397.0], [56.4, 397.0], [56.5, 398.0], [56.6, 398.0], [56.7, 398.0], [56.8, 398.0], [56.9, 398.0], [57.0, 399.0], [57.1, 399.0], [57.2, 399.0], [57.3, 399.0], [57.4, 399.0], [57.5, 399.0], [57.6, 399.0], [57.7, 399.0], [57.8, 400.0], [57.9, 400.0], [58.0, 401.0], [58.1, 401.0], [58.2, 401.0], [58.3, 401.0], [58.4, 401.0], [58.5, 403.0], [58.6, 403.0], [58.7, 403.0], [58.8, 403.0], [58.9, 403.0], [59.0, 405.0], [59.1, 405.0], [59.2, 405.0], [59.3, 406.0], [59.4, 406.0], [59.5, 407.0], [59.6, 407.0], [59.7, 407.0], [59.8, 407.0], [59.9, 407.0], [60.0, 408.0], [60.1, 408.0], [60.2, 408.0], [60.3, 408.0], [60.4, 408.0], [60.5, 409.0], [60.6, 409.0], [60.7, 409.0], [60.8, 410.0], [60.9, 410.0], [61.0, 410.0], [61.1, 410.0], [61.2, 410.0], [61.3, 411.0], [61.4, 411.0], [61.5, 411.0], [61.6, 411.0], [61.7, 411.0], [61.8, 411.0], [61.9, 411.0], [62.0, 412.0], [62.1, 412.0], [62.2, 412.0], [62.3, 412.0], [62.4, 412.0], [62.5, 415.0], [62.6, 415.0], [62.7, 415.0], [62.8, 417.0], [62.9, 417.0], [63.0, 417.0], [63.1, 417.0], [63.2, 417.0], [63.3, 418.0], [63.4, 418.0], [63.5, 419.0], [63.6, 419.0], [63.7, 419.0], [63.8, 419.0], [63.9, 419.0], [64.0, 419.0], [64.1, 419.0], [64.2, 419.0], [64.3, 419.0], [64.4, 419.0], [64.5, 420.0], [64.6, 420.0], [64.7, 420.0], [64.8, 421.0], [64.9, 421.0], [65.0, 421.0], [65.1, 421.0], [65.2, 421.0], [65.3, 421.0], [65.4, 421.0], [65.5, 421.0], [65.6, 421.0], [65.7, 421.0], [65.8, 422.0], [65.9, 422.0], [66.0, 422.0], [66.1, 422.0], [66.2, 422.0], [66.3, 424.0], [66.4, 424.0], [66.5, 424.0], [66.6, 424.0], [66.7, 424.0], [66.8, 424.0], [66.9, 424.0], [67.0, 424.0], [67.1, 424.0], [67.2, 424.0], [67.3, 426.0], [67.4, 426.0], [67.5, 426.0], [67.6, 426.0], [67.7, 426.0], [67.8, 427.0], [67.9, 427.0], [68.0, 427.0], [68.1, 427.0], [68.2, 427.0], [68.3, 427.0], [68.4, 427.0], [68.5, 428.0], [68.6, 428.0], [68.7, 428.0], [68.8, 428.0], [68.9, 428.0], [69.0, 428.0], [69.1, 428.0], [69.2, 428.0], [69.3, 431.0], [69.4, 431.0], [69.5, 431.0], [69.6, 431.0], [69.7, 431.0], [69.8, 432.0], [69.9, 432.0], [70.0, 434.0], [70.1, 434.0], [70.2, 434.0], [70.3, 434.0], [70.4, 434.0], [70.5, 434.0], [70.6, 434.0], [70.7, 434.0], [70.8, 435.0], [70.9, 435.0], [71.0, 435.0], [71.1, 435.0], [71.2, 435.0], [71.3, 435.0], [71.4, 435.0], [71.5, 435.0], [71.6, 435.0], [71.7, 435.0], [71.8, 436.0], [71.9, 436.0], [72.0, 437.0], [72.1, 437.0], [72.2, 437.0], [72.3, 437.0], [72.4, 437.0], [72.5, 439.0], [72.6, 439.0], [72.7, 439.0], [72.8, 440.0], [72.9, 440.0], [73.0, 440.0], [73.1, 440.0], [73.2, 440.0], [73.3, 440.0], [73.4, 440.0], [73.5, 440.0], [73.6, 440.0], [73.7, 440.0], [73.8, 441.0], [73.9, 441.0], [74.0, 442.0], [74.1, 442.0], [74.2, 442.0], [74.3, 443.0], [74.4, 443.0], [74.5, 443.0], [74.6, 443.0], [74.7, 443.0], [74.8, 443.0], [74.9, 443.0], [75.0, 444.0], [75.1, 444.0], [75.2, 444.0], [75.3, 445.0], [75.4, 445.0], [75.5, 447.0], [75.6, 447.0], [75.7, 447.0], [75.8, 447.0], [75.9, 447.0], [76.0, 447.0], [76.1, 447.0], [76.2, 447.0], [76.3, 449.0], [76.4, 449.0], [76.5, 449.0], [76.6, 449.0], [76.7, 449.0], [76.8, 450.0], [76.9, 450.0], [77.0, 450.0], [77.1, 450.0], [77.2, 450.0], [77.3, 450.0], [77.4, 450.0], [77.5, 450.0], [77.6, 450.0], [77.7, 450.0], [77.8, 454.0], [77.9, 454.0], [78.0, 454.0], [78.1, 454.0], [78.2, 454.0], [78.3, 456.0], [78.4, 456.0], [78.5, 457.0], [78.6, 457.0], [78.7, 457.0], [78.8, 457.0], [78.9, 457.0], [79.0, 459.0], [79.1, 459.0], [79.2, 459.0], [79.3, 460.0], [79.4, 460.0], [79.5, 461.0], [79.6, 461.0], [79.7, 461.0], [79.8, 464.0], [79.9, 464.0], [80.0, 465.0], [80.1, 465.0], [80.2, 465.0], [80.3, 470.0], [80.4, 470.0], [80.5, 490.0], [80.6, 490.0], [80.7, 490.0], [80.8, 495.0], [80.9, 495.0], [81.0, 557.0], [81.1, 557.0], [81.2, 557.0], [81.3, 880.0], [81.4, 880.0], [81.5, 931.0], [81.6, 931.0], [81.7, 931.0], [81.8, 945.0], [81.9, 945.0], [82.0, 1008.0], [82.1, 1008.0], [82.2, 1008.0], [82.3, 1009.0], [82.4, 1009.0], [82.5, 1031.0], [82.6, 1031.0], [82.7, 1031.0], [82.8, 1037.0], [82.9, 1037.0], [83.0, 1044.0], [83.1, 1044.0], [83.2, 1044.0], [83.3, 1046.0], [83.4, 1046.0], [83.5, 1054.0], [83.6, 1054.0], [83.7, 1054.0], [83.8, 1073.0], [83.9, 1073.0], [84.0, 1092.0], [84.1, 1092.0], [84.2, 1092.0], [84.3, 1095.0], [84.4, 1095.0], [84.5, 1109.0], [84.6, 1109.0], [84.7, 1109.0], [84.8, 1118.0], [84.9, 1118.0], [85.0, 1129.0], [85.1, 1129.0], [85.2, 1129.0], [85.3, 1135.0], [85.4, 1135.0], [85.5, 1139.0], [85.6, 1139.0], [85.7, 1139.0], [85.8, 1161.0], [85.9, 1161.0], [86.0, 1166.0], [86.1, 1166.0], [86.2, 1166.0], [86.3, 1176.0], [86.4, 1176.0], [86.5, 1177.0], [86.6, 1177.0], [86.7, 1177.0], [86.8, 1180.0], [86.9, 1180.0], [87.0, 1180.0], [87.1, 1180.0], [87.2, 1180.0], [87.3, 1210.0], [87.4, 1210.0], [87.5, 1223.0], [87.6, 1223.0], [87.7, 1223.0], [87.8, 1232.0], [87.9, 1232.0], [88.0, 1235.0], [88.1, 1235.0], [88.2, 1235.0], [88.3, 1244.0], [88.4, 1244.0], [88.5, 1246.0], [88.6, 1246.0], [88.7, 1246.0], [88.8, 1257.0], [88.9, 1257.0], [89.0, 1273.0], [89.1, 1273.0], [89.2, 1273.0], [89.3, 1277.0], [89.4, 1277.0], [89.5, 1286.0], [89.6, 1286.0], [89.7, 1286.0], [89.8, 1287.0], [89.9, 1287.0], [90.0, 1292.0], [90.1, 1292.0], [90.2, 1292.0], [90.3, 1305.0], [90.4, 1305.0], [90.5, 1314.0], [90.6, 1314.0], [90.7, 1314.0], [90.8, 1316.0], [90.9, 1316.0], [91.0, 1343.0], [91.1, 1343.0], [91.2, 1343.0], [91.3, 1367.0], [91.4, 1367.0], [91.5, 1370.0], [91.6, 1370.0], [91.7, 1370.0], [91.8, 1378.0], [91.9, 1378.0], [92.0, 1397.0], [92.1, 1397.0], [92.2, 1397.0], [92.3, 1404.0], [92.4, 1404.0], [92.5, 1416.0], [92.6, 1416.0], [92.7, 1416.0], [92.8, 1426.0], [92.9, 1426.0], [93.0, 1429.0], [93.1, 1429.0], [93.2, 1429.0], [93.3, 1459.0], [93.4, 1459.0], [93.5, 1467.0], [93.6, 1467.0], [93.7, 1467.0], [93.8, 1474.0], [93.9, 1474.0], [94.0, 1477.0], [94.1, 1477.0], [94.2, 1477.0], [94.3, 1477.0], [94.4, 1477.0], [94.5, 1489.0], [94.6, 1489.0], [94.7, 1489.0], [94.8, 1519.0], [94.9, 1519.0], [95.0, 1520.0], [95.1, 1520.0], [95.2, 1520.0], [95.3, 1535.0], [95.4, 1535.0], [95.5, 1938.0], [95.6, 1938.0], [95.7, 1938.0], [95.8, 2113.0], [95.9, 2113.0], [96.0, 2124.0], [96.1, 2124.0], [96.2, 2124.0], [96.3, 2199.0], [96.4, 2199.0], [96.5, 2235.0], [96.6, 2235.0], [96.7, 2235.0], [96.8, 2243.0], [96.9, 2243.0], [97.0, 2285.0], [97.1, 2285.0], [97.2, 2285.0], [97.3, 2301.0], [97.4, 2301.0], [97.5, 2357.0], [97.6, 2357.0], [97.7, 2357.0], [97.8, 2394.0], [97.9, 2394.0], [98.0, 2416.0], [98.1, 2416.0], [98.2, 2416.0], [98.3, 2434.0], [98.4, 2434.0], [98.5, 2545.0], [98.6, 2545.0], [98.7, 2545.0], [98.8, 3359.0], [98.9, 3359.0], [99.0, 4127.0], [99.1, 4127.0], [99.2, 4127.0], [99.3, 5020.0], [99.4, 5020.0], [99.5, 7680.0], [99.6, 7680.0], [99.7, 7680.0], [99.8, 11984.0], [99.9, 11984.0]], "isOverall": false, "label": "GetBookingIds ", "isController": false}, {"data": [[0.0, 231.0], [0.1, 231.0], [0.2, 231.0], [0.3, 233.0], [0.4, 233.0], [0.5, 233.0], [0.6, 233.0], [0.7, 233.0], [0.8, 233.0], [0.9, 233.0], [1.0, 234.0], [1.1, 234.0], [1.2, 234.0], [1.3, 234.0], [1.4, 234.0], [1.5, 234.0], [1.6, 234.0], [1.7, 234.0], [1.8, 234.0], [1.9, 234.0], [2.0, 234.0], [2.1, 234.0], [2.2, 234.0], [2.3, 234.0], [2.4, 234.0], [2.5, 235.0], [2.6, 235.0], [2.7, 235.0], [2.8, 235.0], [2.9, 235.0], [3.0, 235.0], [3.1, 235.0], [3.2, 235.0], [3.3, 235.0], [3.4, 235.0], [3.5, 235.0], [3.6, 235.0], [3.7, 235.0], [3.8, 235.0], [3.9, 235.0], [4.0, 237.0], [4.1, 237.0], [4.2, 237.0], [4.3, 237.0], [4.4, 237.0], [4.5, 237.0], [4.6, 237.0], [4.7, 237.0], [4.8, 237.0], [4.9, 237.0], [5.0, 238.0], [5.1, 238.0], [5.2, 238.0], [5.3, 238.0], [5.4, 238.0], [5.5, 238.0], [5.6, 238.0], [5.7, 238.0], [5.8, 238.0], [5.9, 238.0], [6.0, 238.0], [6.1, 238.0], [6.2, 238.0], [6.3, 238.0], [6.4, 238.0], [6.5, 239.0], [6.6, 239.0], [6.7, 239.0], [6.8, 239.0], [6.9, 239.0], [7.0, 240.0], [7.1, 240.0], [7.2, 240.0], [7.3, 240.0], [7.4, 240.0], [7.5, 240.0], [7.6, 240.0], [7.7, 240.0], [7.8, 240.0], [7.9, 240.0], [8.0, 241.0], [8.1, 241.0], [8.2, 241.0], [8.3, 241.0], [8.4, 241.0], [8.5, 241.0], [8.6, 241.0], [8.7, 241.0], [8.8, 241.0], [8.9, 241.0], [9.0, 241.0], [9.1, 241.0], [9.2, 241.0], [9.3, 241.0], [9.4, 241.0], [9.5, 242.0], [9.6, 242.0], [9.7, 242.0], [9.8, 242.0], [9.9, 242.0], [10.0, 242.0], [10.1, 242.0], [10.2, 242.0], [10.3, 242.0], [10.4, 242.0], [10.5, 242.0], [10.6, 242.0], [10.7, 242.0], [10.8, 243.0], [10.9, 243.0], [11.0, 243.0], [11.1, 243.0], [11.2, 243.0], [11.3, 243.0], [11.4, 243.0], [11.5, 243.0], [11.6, 243.0], [11.7, 243.0], [11.8, 243.0], [11.9, 243.0], [12.0, 243.0], [12.1, 243.0], [12.2, 243.0], [12.3, 243.0], [12.4, 243.0], [12.5, 243.0], [12.6, 243.0], [12.7, 243.0], [12.8, 243.0], [12.9, 243.0], [13.0, 243.0], [13.1, 243.0], [13.2, 243.0], [13.3, 244.0], [13.4, 244.0], [13.5, 244.0], [13.6, 244.0], [13.7, 244.0], [13.8, 244.0], [13.9, 244.0], [14.0, 244.0], [14.1, 244.0], [14.2, 244.0], [14.3, 244.0], [14.4, 244.0], [14.5, 245.0], [14.6, 245.0], [14.7, 245.0], [14.8, 245.0], [14.9, 245.0], [15.0, 245.0], [15.1, 245.0], [15.2, 245.0], [15.3, 245.0], [15.4, 245.0], [15.5, 245.0], [15.6, 245.0], [15.7, 245.0], [15.8, 245.0], [15.9, 245.0], [16.0, 245.0], [16.1, 245.0], [16.2, 245.0], [16.3, 245.0], [16.4, 245.0], [16.5, 246.0], [16.6, 246.0], [16.7, 246.0], [16.8, 246.0], [16.9, 246.0], [17.0, 246.0], [17.1, 246.0], [17.2, 246.0], [17.3, 246.0], [17.4, 246.0], [17.5, 246.0], [17.6, 246.0], [17.7, 246.0], [17.8, 246.0], [17.9, 246.0], [18.0, 247.0], [18.1, 247.0], [18.2, 247.0], [18.3, 247.0], [18.4, 247.0], [18.5, 247.0], [18.6, 247.0], [18.7, 247.0], [18.8, 247.0], [18.9, 247.0], [19.0, 248.0], [19.1, 248.0], [19.2, 248.0], [19.3, 248.0], [19.4, 248.0], [19.5, 248.0], [19.6, 248.0], [19.7, 248.0], [19.8, 248.0], [19.9, 248.0], [20.0, 248.0], [20.1, 248.0], [20.2, 248.0], [20.3, 248.0], [20.4, 248.0], [20.5, 248.0], [20.6, 248.0], [20.7, 248.0], [20.8, 248.0], [20.9, 248.0], [21.0, 248.0], [21.1, 248.0], [21.2, 248.0], [21.3, 248.0], [21.4, 248.0], [21.5, 248.0], [21.6, 248.0], [21.7, 248.0], [21.8, 249.0], [21.9, 249.0], [22.0, 249.0], [22.1, 249.0], [22.2, 249.0], [22.3, 249.0], [22.4, 249.0], [22.5, 249.0], [22.6, 249.0], [22.7, 249.0], [22.8, 250.0], [22.9, 250.0], [23.0, 250.0], [23.1, 250.0], [23.2, 250.0], [23.3, 250.0], [23.4, 250.0], [23.5, 250.0], [23.6, 250.0], [23.7, 250.0], [23.8, 251.0], [23.9, 251.0], [24.0, 251.0], [24.1, 251.0], [24.2, 251.0], [24.3, 251.0], [24.4, 251.0], [24.5, 251.0], [24.6, 251.0], [24.7, 251.0], [24.8, 251.0], [24.9, 251.0], [25.0, 251.0], [25.1, 251.0], [25.2, 251.0], [25.3, 251.0], [25.4, 251.0], [25.5, 251.0], [25.6, 251.0], [25.7, 251.0], [25.8, 251.0], [25.9, 251.0], [26.0, 252.0], [26.1, 252.0], [26.2, 252.0], [26.3, 252.0], [26.4, 252.0], [26.5, 252.0], [26.6, 252.0], [26.7, 252.0], [26.8, 252.0], [26.9, 252.0], [27.0, 252.0], [27.1, 252.0], [27.2, 252.0], [27.3, 253.0], [27.4, 253.0], [27.5, 253.0], [27.6, 253.0], [27.7, 253.0], [27.8, 253.0], [27.9, 253.0], [28.0, 253.0], [28.1, 253.0], [28.2, 253.0], [28.3, 253.0], [28.4, 253.0], [28.5, 254.0], [28.6, 254.0], [28.7, 254.0], [28.8, 254.0], [28.9, 254.0], [29.0, 254.0], [29.1, 254.0], [29.2, 254.0], [29.3, 255.0], [29.4, 255.0], [29.5, 255.0], [29.6, 255.0], [29.7, 255.0], [29.8, 255.0], [29.9, 255.0], [30.0, 256.0], [30.1, 256.0], [30.2, 256.0], [30.3, 256.0], [30.4, 256.0], [30.5, 256.0], [30.6, 256.0], [30.7, 256.0], [30.8, 257.0], [30.9, 257.0], [31.0, 257.0], [31.1, 257.0], [31.2, 257.0], [31.3, 257.0], [31.4, 257.0], [31.5, 258.0], [31.6, 258.0], [31.7, 258.0], [31.8, 258.0], [31.9, 258.0], [32.0, 258.0], [32.1, 258.0], [32.2, 258.0], [32.3, 259.0], [32.4, 259.0], [32.5, 259.0], [32.6, 259.0], [32.7, 259.0], [32.8, 259.0], [32.9, 259.0], [33.0, 259.0], [33.1, 259.0], [33.2, 259.0], [33.3, 261.0], [33.4, 261.0], [33.5, 262.0], [33.6, 262.0], [33.7, 262.0], [33.8, 267.0], [33.9, 267.0], [34.0, 267.0], [34.1, 267.0], [34.2, 267.0], [34.3, 267.0], [34.4, 267.0], [34.5, 269.0], [34.6, 269.0], [34.7, 269.0], [34.8, 270.0], [34.9, 270.0], [35.0, 270.0], [35.1, 270.0], [35.2, 270.0], [35.3, 270.0], [35.4, 270.0], [35.5, 271.0], [35.6, 271.0], [35.7, 271.0], [35.8, 271.0], [35.9, 271.0], [36.0, 271.0], [36.1, 271.0], [36.2, 271.0], [36.3, 272.0], [36.4, 272.0], [36.5, 272.0], [36.6, 272.0], [36.7, 272.0], [36.8, 272.0], [36.9, 272.0], [37.0, 272.0], [37.1, 272.0], [37.2, 272.0], [37.3, 274.0], [37.4, 274.0], [37.5, 277.0], [37.6, 277.0], [37.7, 277.0], [37.8, 277.0], [37.9, 277.0], [38.0, 278.0], [38.1, 278.0], [38.2, 278.0], [38.3, 279.0], [38.4, 279.0], [38.5, 281.0], [38.6, 281.0], [38.7, 281.0], [38.8, 281.0], [38.9, 281.0], [39.0, 281.0], [39.1, 281.0], [39.2, 281.0], [39.3, 293.0], [39.4, 293.0], [39.5, 295.0], [39.6, 295.0], [39.7, 295.0], [39.8, 298.0], [39.9, 298.0], [40.0, 300.0], [40.1, 300.0], [40.2, 300.0], [40.3, 303.0], [40.4, 303.0], [40.5, 305.0], [40.6, 305.0], [40.7, 305.0], [40.8, 305.0], [40.9, 305.0], [41.0, 307.0], [41.1, 307.0], [41.2, 307.0], [41.3, 307.0], [41.4, 307.0], [41.5, 309.0], [41.6, 309.0], [41.7, 309.0], [41.8, 310.0], [41.9, 310.0], [42.0, 310.0], [42.1, 310.0], [42.2, 310.0], [42.3, 311.0], [42.4, 311.0], [42.5, 312.0], [42.6, 312.0], [42.7, 312.0], [42.8, 312.0], [42.9, 312.0], [43.0, 312.0], [43.1, 312.0], [43.2, 312.0], [43.3, 312.0], [43.4, 312.0], [43.5, 314.0], [43.6, 314.0], [43.7, 314.0], [43.8, 314.0], [43.9, 314.0], [44.0, 317.0], [44.1, 317.0], [44.2, 317.0], [44.3, 317.0], [44.4, 317.0], [44.5, 317.0], [44.6, 317.0], [44.7, 317.0], [44.8, 317.0], [44.9, 317.0], [45.0, 319.0], [45.1, 319.0], [45.2, 319.0], [45.3, 321.0], [45.4, 321.0], [45.5, 323.0], [45.6, 323.0], [45.7, 323.0], [45.8, 325.0], [45.9, 325.0], [46.0, 336.0], [46.1, 336.0], [46.2, 336.0], [46.3, 336.0], [46.4, 336.0], [46.5, 336.0], [46.6, 336.0], [46.7, 336.0], [46.8, 337.0], [46.9, 337.0], [47.0, 337.0], [47.1, 337.0], [47.2, 337.0], [47.3, 339.0], [47.4, 339.0], [47.5, 342.0], [47.6, 342.0], [47.7, 342.0], [47.8, 343.0], [47.9, 343.0], [48.0, 344.0], [48.1, 344.0], [48.2, 344.0], [48.3, 346.0], [48.4, 346.0], [48.5, 349.0], [48.6, 349.0], [48.7, 349.0], [48.8, 350.0], [48.9, 350.0], [49.0, 351.0], [49.1, 351.0], [49.2, 351.0], [49.3, 352.0], [49.4, 352.0], [49.5, 352.0], [49.6, 352.0], [49.7, 352.0], [49.8, 354.0], [49.9, 354.0], [50.0, 365.0], [50.1, 365.0], [50.2, 365.0], [50.3, 368.0], [50.4, 368.0], [50.5, 371.0], [50.6, 371.0], [50.7, 371.0], [50.8, 371.0], [50.9, 371.0], [51.0, 372.0], [51.1, 372.0], [51.2, 372.0], [51.3, 375.0], [51.4, 375.0], [51.5, 381.0], [51.6, 381.0], [51.7, 381.0], [51.8, 382.0], [51.9, 382.0], [52.0, 386.0], [52.1, 386.0], [52.2, 386.0], [52.3, 386.0], [52.4, 386.0], [52.5, 388.0], [52.6, 388.0], [52.7, 388.0], [52.8, 388.0], [52.9, 388.0], [53.0, 389.0], [53.1, 389.0], [53.2, 389.0], [53.3, 392.0], [53.4, 392.0], [53.5, 392.0], [53.6, 392.0], [53.7, 392.0], [53.8, 394.0], [53.9, 394.0], [54.0, 395.0], [54.1, 395.0], [54.2, 395.0], [54.3, 395.0], [54.4, 395.0], [54.5, 395.0], [54.6, 395.0], [54.7, 395.0], [54.8, 396.0], [54.9, 396.0], [55.0, 396.0], [55.1, 396.0], [55.2, 396.0], [55.3, 397.0], [55.4, 397.0], [55.5, 397.0], [55.6, 397.0], [55.7, 397.0], [55.8, 398.0], [55.9, 398.0], [56.0, 399.0], [56.1, 399.0], [56.2, 399.0], [56.3, 399.0], [56.4, 399.0], [56.5, 401.0], [56.6, 401.0], [56.7, 401.0], [56.8, 402.0], [56.9, 402.0], [57.0, 402.0], [57.1, 402.0], [57.2, 402.0], [57.3, 402.0], [57.4, 402.0], [57.5, 402.0], [57.6, 402.0], [57.7, 402.0], [57.8, 403.0], [57.9, 403.0], [58.0, 403.0], [58.1, 403.0], [58.2, 403.0], [58.3, 404.0], [58.4, 404.0], [58.5, 405.0], [58.6, 405.0], [58.7, 405.0], [58.8, 407.0], [58.9, 407.0], [59.0, 408.0], [59.1, 408.0], [59.2, 408.0], [59.3, 408.0], [59.4, 408.0], [59.5, 409.0], [59.6, 409.0], [59.7, 409.0], [59.8, 409.0], [59.9, 409.0], [60.0, 409.0], [60.1, 409.0], [60.2, 409.0], [60.3, 410.0], [60.4, 410.0], [60.5, 410.0], [60.6, 410.0], [60.7, 410.0], [60.8, 410.0], [60.9, 410.0], [61.0, 413.0], [61.1, 413.0], [61.2, 413.0], [61.3, 414.0], [61.4, 414.0], [61.5, 414.0], [61.6, 414.0], [61.7, 414.0], [61.8, 414.0], [61.9, 414.0], [62.0, 414.0], [62.1, 414.0], [62.2, 414.0], [62.3, 414.0], [62.4, 414.0], [62.5, 415.0], [62.6, 415.0], [62.7, 415.0], [62.8, 415.0], [62.9, 415.0], [63.0, 415.0], [63.1, 415.0], [63.2, 415.0], [63.3, 415.0], [63.4, 415.0], [63.5, 417.0], [63.6, 417.0], [63.7, 417.0], [63.8, 417.0], [63.9, 417.0], [64.0, 417.0], [64.1, 417.0], [64.2, 417.0], [64.3, 419.0], [64.4, 419.0], [64.5, 419.0], [64.6, 419.0], [64.7, 419.0], [64.8, 419.0], [64.9, 419.0], [65.0, 420.0], [65.1, 420.0], [65.2, 420.0], [65.3, 422.0], [65.4, 422.0], [65.5, 423.0], [65.6, 423.0], [65.7, 423.0], [65.8, 423.0], [65.9, 423.0], [66.0, 424.0], [66.1, 424.0], [66.2, 424.0], [66.3, 425.0], [66.4, 425.0], [66.5, 425.0], [66.6, 425.0], [66.7, 425.0], [66.8, 425.0], [66.9, 425.0], [67.0, 427.0], [67.1, 427.0], [67.2, 427.0], [67.3, 427.0], [67.4, 427.0], [67.5, 428.0], [67.6, 428.0], [67.7, 428.0], [67.8, 429.0], [67.9, 429.0], [68.0, 429.0], [68.1, 429.0], [68.2, 429.0], [68.3, 430.0], [68.4, 430.0], [68.5, 430.0], [68.6, 430.0], [68.7, 430.0], [68.8, 430.0], [68.9, 430.0], [69.0, 430.0], [69.1, 430.0], [69.2, 430.0], [69.3, 431.0], [69.4, 431.0], [69.5, 431.0], [69.6, 431.0], [69.7, 431.0], [69.8, 433.0], [69.9, 433.0], [70.0, 433.0], [70.1, 433.0], [70.2, 433.0], [70.3, 435.0], [70.4, 435.0], [70.5, 435.0], [70.6, 435.0], [70.7, 435.0], [70.8, 435.0], [70.9, 435.0], [71.0, 436.0], [71.1, 436.0], [71.2, 436.0], [71.3, 437.0], [71.4, 437.0], [71.5, 437.0], [71.6, 437.0], [71.7, 437.0], [71.8, 438.0], [71.9, 438.0], [72.0, 438.0], [72.1, 438.0], [72.2, 438.0], [72.3, 438.0], [72.4, 438.0], [72.5, 439.0], [72.6, 439.0], [72.7, 439.0], [72.8, 439.0], [72.9, 439.0], [73.0, 439.0], [73.1, 439.0], [73.2, 439.0], [73.3, 439.0], [73.4, 439.0], [73.5, 441.0], [73.6, 441.0], [73.7, 441.0], [73.8, 441.0], [73.9, 441.0], [74.0, 442.0], [74.1, 442.0], [74.2, 442.0], [74.3, 443.0], [74.4, 443.0], [74.5, 443.0], [74.6, 443.0], [74.7, 443.0], [74.8, 444.0], [74.9, 444.0], [75.0, 445.0], [75.1, 445.0], [75.2, 445.0], [75.3, 445.0], [75.4, 445.0], [75.5, 445.0], [75.6, 445.0], [75.7, 445.0], [75.8, 445.0], [75.9, 445.0], [76.0, 445.0], [76.1, 445.0], [76.2, 445.0], [76.3, 445.0], [76.4, 445.0], [76.5, 447.0], [76.6, 447.0], [76.7, 447.0], [76.8, 447.0], [76.9, 447.0], [77.0, 448.0], [77.1, 448.0], [77.2, 448.0], [77.3, 451.0], [77.4, 451.0], [77.5, 451.0], [77.6, 451.0], [77.7, 451.0], [77.8, 458.0], [77.9, 458.0], [78.0, 459.0], [78.1, 459.0], [78.2, 459.0], [78.3, 461.0], [78.4, 461.0], [78.5, 461.0], [78.6, 461.0], [78.7, 461.0], [78.8, 497.0], [78.9, 497.0], [79.0, 513.0], [79.1, 513.0], [79.2, 513.0], [79.3, 528.0], [79.4, 528.0], [79.5, 553.0], [79.6, 553.0], [79.7, 553.0], [79.8, 913.0], [79.9, 913.0], [80.0, 949.0], [80.1, 949.0], [80.2, 949.0], [80.3, 968.0], [80.4, 968.0], [80.5, 974.0], [80.6, 974.0], [80.7, 974.0], [80.8, 998.0], [80.9, 998.0], [81.0, 1081.0], [81.1, 1081.0], [81.2, 1081.0], [81.3, 1092.0], [81.4, 1092.0], [81.5, 1113.0], [81.6, 1113.0], [81.7, 1113.0], [81.8, 1166.0], [81.9, 1166.0], [82.0, 1169.0], [82.1, 1169.0], [82.2, 1169.0], [82.3, 1177.0], [82.4, 1177.0], [82.5, 1183.0], [82.6, 1183.0], [82.7, 1183.0], [82.8, 1191.0], [82.9, 1191.0], [83.0, 1197.0], [83.1, 1197.0], [83.2, 1197.0], [83.3, 1202.0], [83.4, 1202.0], [83.5, 1216.0], [83.6, 1216.0], [83.7, 1216.0], [83.8, 1220.0], [83.9, 1220.0], [84.0, 1232.0], [84.1, 1232.0], [84.2, 1232.0], [84.3, 1233.0], [84.4, 1233.0], [84.5, 1257.0], [84.6, 1257.0], [84.7, 1257.0], [84.8, 1261.0], [84.9, 1261.0], [85.0, 1263.0], [85.1, 1263.0], [85.2, 1263.0], [85.3, 1265.0], [85.4, 1265.0], [85.5, 1270.0], [85.6, 1270.0], [85.7, 1270.0], [85.8, 1282.0], [85.9, 1282.0], [86.0, 1283.0], [86.1, 1283.0], [86.2, 1283.0], [86.3, 1312.0], [86.4, 1312.0], [86.5, 1316.0], [86.6, 1316.0], [86.7, 1316.0], [86.8, 1320.0], [86.9, 1320.0], [87.0, 1332.0], [87.1, 1332.0], [87.2, 1332.0], [87.3, 1333.0], [87.4, 1333.0], [87.5, 1345.0], [87.6, 1345.0], [87.7, 1345.0], [87.8, 1346.0], [87.9, 1346.0], [88.0, 1351.0], [88.1, 1351.0], [88.2, 1351.0], [88.3, 1379.0], [88.4, 1379.0], [88.5, 1387.0], [88.6, 1387.0], [88.7, 1387.0], [88.8, 1390.0], [88.9, 1390.0], [89.0, 1395.0], [89.1, 1395.0], [89.2, 1395.0], [89.3, 1412.0], [89.4, 1412.0], [89.5, 1416.0], [89.6, 1416.0], [89.7, 1416.0], [89.8, 1428.0], [89.9, 1428.0], [90.0, 1438.0], [90.1, 1438.0], [90.2, 1438.0], [90.3, 1441.0], [90.4, 1441.0], [90.5, 1449.0], [90.6, 1449.0], [90.7, 1449.0], [90.8, 1449.0], [90.9, 1449.0], [91.0, 1458.0], [91.1, 1458.0], [91.2, 1458.0], [91.3, 1471.0], [91.4, 1471.0], [91.5, 1471.0], [91.6, 1471.0], [91.7, 1471.0], [91.8, 1486.0], [91.9, 1486.0], [92.0, 1496.0], [92.1, 1496.0], [92.2, 1496.0], [92.3, 1501.0], [92.4, 1501.0], [92.5, 1509.0], [92.6, 1509.0], [92.7, 1509.0], [92.8, 1524.0], [92.9, 1524.0], [93.0, 1629.0], [93.1, 1629.0], [93.2, 1629.0], [93.3, 1651.0], [93.4, 1651.0], [93.5, 1657.0], [93.6, 1657.0], [93.7, 1657.0], [93.8, 1673.0], [93.9, 1673.0], [94.0, 1820.0], [94.1, 1820.0], [94.2, 1820.0], [94.3, 1825.0], [94.4, 1825.0], [94.5, 1849.0], [94.6, 1849.0], [94.7, 1849.0], [94.8, 1935.0], [94.9, 1935.0], [95.0, 1994.0], [95.1, 1994.0], [95.2, 1994.0], [95.3, 2090.0], [95.4, 2090.0], [95.5, 2155.0], [95.6, 2155.0], [95.7, 2155.0], [95.8, 2208.0], [95.9, 2208.0], [96.0, 2340.0], [96.1, 2340.0], [96.2, 2340.0], [96.3, 2423.0], [96.4, 2423.0], [96.5, 2438.0], [96.6, 2438.0], [96.7, 2438.0], [96.8, 2512.0], [96.9, 2512.0], [97.0, 2527.0], [97.1, 2527.0], [97.2, 2527.0], [97.3, 2553.0], [97.4, 2553.0], [97.5, 2623.0], [97.6, 2623.0], [97.7, 2623.0], [97.8, 2854.0], [97.9, 2854.0], [98.0, 2863.0], [98.1, 2863.0], [98.2, 2863.0], [98.3, 4297.0], [98.4, 4297.0], [98.5, 4618.0], [98.6, 4618.0], [98.7, 4618.0], [98.8, 4629.0], [98.9, 4629.0], [99.0, 4847.0], [99.1, 4847.0], [99.2, 4847.0], [99.3, 4986.0], [99.4, 4986.0], [99.5, 7889.0], [99.6, 7889.0], [99.7, 7889.0], [99.8, 9551.0], [99.9, 9551.0]], "isOverall": false, "label": "CreateBooking ", "isController": false}, {"data": [[0.0, 235.0], [0.1, 235.0], [0.2, 235.0], [0.3, 236.0], [0.4, 236.0], [0.5, 236.0], [0.6, 236.0], [0.7, 236.0], [0.8, 236.0], [0.9, 236.0], [1.0, 236.0], [1.1, 236.0], [1.2, 236.0], [1.3, 236.0], [1.4, 236.0], [1.5, 236.0], [1.6, 236.0], [1.7, 236.0], [1.8, 236.0], [1.9, 236.0], [2.0, 236.0], [2.1, 236.0], [2.2, 236.0], [2.3, 237.0], [2.4, 237.0], [2.5, 237.0], [2.6, 237.0], [2.7, 237.0], [2.8, 237.0], [2.9, 237.0], [3.0, 237.0], [3.1, 237.0], [3.2, 237.0], [3.3, 237.0], [3.4, 237.0], [3.5, 238.0], [3.6, 238.0], [3.7, 238.0], [3.8, 238.0], [3.9, 238.0], [4.0, 238.0], [4.1, 238.0], [4.2, 238.0], [4.3, 238.0], [4.4, 238.0], [4.5, 239.0], [4.6, 239.0], [4.7, 239.0], [4.8, 239.0], [4.9, 239.0], [5.0, 239.0], [5.1, 239.0], [5.2, 239.0], [5.3, 239.0], [5.4, 239.0], [5.5, 239.0], [5.6, 239.0], [5.7, 239.0], [5.8, 240.0], [5.9, 240.0], [6.0, 240.0], [6.1, 240.0], [6.2, 240.0], [6.3, 240.0], [6.4, 240.0], [6.5, 240.0], [6.6, 240.0], [6.7, 240.0], [6.8, 240.0], [6.9, 240.0], [7.0, 240.0], [7.1, 240.0], [7.2, 240.0], [7.3, 241.0], [7.4, 241.0], [7.5, 241.0], [7.6, 241.0], [7.7, 241.0], [7.8, 242.0], [7.9, 242.0], [8.0, 242.0], [8.1, 242.0], [8.2, 242.0], [8.3, 242.0], [8.4, 242.0], [8.5, 242.0], [8.6, 242.0], [8.7, 242.0], [8.8, 242.0], [8.9, 242.0], [9.0, 242.0], [9.1, 242.0], [9.2, 242.0], [9.3, 242.0], [9.4, 242.0], [9.5, 242.0], [9.6, 242.0], [9.7, 242.0], [9.8, 243.0], [9.9, 243.0], [10.0, 243.0], [10.1, 243.0], [10.2, 243.0], [10.3, 243.0], [10.4, 243.0], [10.5, 243.0], [10.6, 243.0], [10.7, 243.0], [10.8, 243.0], [10.9, 243.0], [11.0, 243.0], [11.1, 243.0], [11.2, 243.0], [11.3, 244.0], [11.4, 244.0], [11.5, 244.0], [11.6, 244.0], [11.7, 244.0], [11.8, 244.0], [11.9, 244.0], [12.0, 244.0], [12.1, 244.0], [12.2, 244.0], [12.3, 244.0], [12.4, 244.0], [12.5, 245.0], [12.6, 245.0], [12.7, 245.0], [12.8, 245.0], [12.9, 245.0], [13.0, 245.0], [13.1, 245.0], [13.2, 245.0], [13.3, 245.0], [13.4, 245.0], [13.5, 245.0], [13.6, 245.0], [13.7, 245.0], [13.8, 245.0], [13.9, 245.0], [14.0, 245.0], [14.1, 245.0], [14.2, 245.0], [14.3, 245.0], [14.4, 245.0], [14.5, 245.0], [14.6, 245.0], [14.7, 245.0], [14.8, 246.0], [14.9, 246.0], [15.0, 246.0], [15.1, 246.0], [15.2, 246.0], [15.3, 246.0], [15.4, 246.0], [15.5, 247.0], [15.6, 247.0], [15.7, 247.0], [15.8, 247.0], [15.9, 247.0], [16.0, 247.0], [16.1, 247.0], [16.2, 247.0], [16.3, 247.0], [16.4, 247.0], [16.5, 247.0], [16.6, 247.0], [16.7, 247.0], [16.8, 247.0], [16.9, 247.0], [17.0, 247.0], [17.1, 247.0], [17.2, 247.0], [17.3, 248.0], [17.4, 248.0], [17.5, 248.0], [17.6, 248.0], [17.7, 248.0], [17.8, 248.0], [17.9, 248.0], [18.0, 248.0], [18.1, 248.0], [18.2, 248.0], [18.3, 248.0], [18.4, 248.0], [18.5, 248.0], [18.6, 248.0], [18.7, 248.0], [18.8, 248.0], [18.9, 248.0], [19.0, 248.0], [19.1, 248.0], [19.2, 248.0], [19.3, 249.0], [19.4, 249.0], [19.5, 249.0], [19.6, 249.0], [19.7, 249.0], [19.8, 249.0], [19.9, 249.0], [20.0, 249.0], [20.1, 249.0], [20.2, 249.0], [20.3, 249.0], [20.4, 249.0], [20.5, 249.0], [20.6, 249.0], [20.7, 249.0], [20.8, 249.0], [20.9, 249.0], [21.0, 249.0], [21.1, 249.0], [21.2, 249.0], [21.3, 250.0], [21.4, 250.0], [21.5, 250.0], [21.6, 250.0], [21.7, 250.0], [21.8, 250.0], [21.9, 250.0], [22.0, 250.0], [22.1, 250.0], [22.2, 250.0], [22.3, 250.0], [22.4, 250.0], [22.5, 250.0], [22.6, 250.0], [22.7, 250.0], [22.8, 250.0], [22.9, 250.0], [23.0, 251.0], [23.1, 251.0], [23.2, 251.0], [23.3, 251.0], [23.4, 251.0], [23.5, 251.0], [23.6, 251.0], [23.7, 251.0], [23.8, 251.0], [23.9, 251.0], [24.0, 251.0], [24.1, 251.0], [24.2, 251.0], [24.3, 251.0], [24.4, 251.0], [24.5, 252.0], [24.6, 252.0], [24.7, 252.0], [24.8, 252.0], [24.9, 252.0], [25.0, 252.0], [25.1, 252.0], [25.2, 252.0], [25.3, 252.0], [25.4, 252.0], [25.5, 252.0], [25.6, 252.0], [25.7, 252.0], [25.8, 252.0], [25.9, 252.0], [26.0, 252.0], [26.1, 252.0], [26.2, 252.0], [26.3, 253.0], [26.4, 253.0], [26.5, 253.0], [26.6, 253.0], [26.7, 253.0], [26.8, 253.0], [26.9, 253.0], [27.0, 253.0], [27.1, 253.0], [27.2, 253.0], [27.3, 253.0], [27.4, 253.0], [27.5, 253.0], [27.6, 253.0], [27.7, 253.0], [27.8, 253.0], [27.9, 253.0], [28.0, 254.0], [28.1, 254.0], [28.2, 254.0], [28.3, 254.0], [28.4, 254.0], [28.5, 254.0], [28.6, 254.0], [28.7, 254.0], [28.8, 254.0], [28.9, 254.0], [29.0, 254.0], [29.1, 254.0], [29.2, 254.0], [29.3, 254.0], [29.4, 254.0], [29.5, 254.0], [29.6, 254.0], [29.7, 254.0], [29.8, 255.0], [29.9, 255.0], [30.0, 255.0], [30.1, 255.0], [30.2, 255.0], [30.3, 256.0], [30.4, 256.0], [30.5, 256.0], [30.6, 256.0], [30.7, 256.0], [30.8, 256.0], [30.9, 256.0], [31.0, 256.0], [31.1, 256.0], [31.2, 256.0], [31.3, 256.0], [31.4, 256.0], [31.5, 256.0], [31.6, 256.0], [31.7, 256.0], [31.8, 257.0], [31.9, 257.0], [32.0, 257.0], [32.1, 257.0], [32.2, 257.0], [32.3, 257.0], [32.4, 257.0], [32.5, 257.0], [32.6, 257.0], [32.7, 257.0], [32.8, 258.0], [32.9, 258.0], [33.0, 258.0], [33.1, 258.0], [33.2, 258.0], [33.3, 259.0], [33.4, 259.0], [33.5, 259.0], [33.6, 259.0], [33.7, 259.0], [33.8, 259.0], [33.9, 259.0], [34.0, 260.0], [34.1, 260.0], [34.2, 260.0], [34.3, 260.0], [34.4, 260.0], [34.5, 261.0], [34.6, 261.0], [34.7, 261.0], [34.8, 262.0], [34.9, 262.0], [35.0, 263.0], [35.1, 263.0], [35.2, 263.0], [35.3, 263.0], [35.4, 263.0], [35.5, 263.0], [35.6, 263.0], [35.7, 263.0], [35.8, 263.0], [35.9, 263.0], [36.0, 267.0], [36.1, 267.0], [36.2, 267.0], [36.3, 267.0], [36.4, 267.0], [36.5, 268.0], [36.6, 268.0], [36.7, 268.0], [36.8, 268.0], [36.9, 268.0], [37.0, 270.0], [37.1, 270.0], [37.2, 270.0], [37.3, 270.0], [37.4, 270.0], [37.5, 271.0], [37.6, 271.0], [37.7, 271.0], [37.8, 272.0], [37.9, 272.0], [38.0, 273.0], [38.1, 273.0], [38.2, 273.0], [38.3, 274.0], [38.4, 274.0], [38.5, 274.0], [38.6, 274.0], [38.7, 274.0], [38.8, 276.0], [38.9, 276.0], [39.0, 280.0], [39.1, 280.0], [39.2, 280.0], [39.3, 280.0], [39.4, 280.0], [39.5, 281.0], [39.6, 281.0], [39.7, 281.0], [39.8, 285.0], [39.9, 285.0], [40.0, 285.0], [40.1, 285.0], [40.2, 285.0], [40.3, 287.0], [40.4, 287.0], [40.5, 288.0], [40.6, 288.0], [40.7, 288.0], [40.8, 288.0], [40.9, 288.0], [41.0, 289.0], [41.1, 289.0], [41.2, 289.0], [41.3, 290.0], [41.4, 290.0], [41.5, 291.0], [41.6, 291.0], [41.7, 291.0], [41.8, 292.0], [41.9, 292.0], [42.0, 298.0], [42.1, 298.0], [42.2, 298.0], [42.3, 303.0], [42.4, 303.0], [42.5, 308.0], [42.6, 308.0], [42.7, 308.0], [42.8, 311.0], [42.9, 311.0], [43.0, 311.0], [43.1, 311.0], [43.2, 311.0], [43.3, 313.0], [43.4, 313.0], [43.5, 313.0], [43.6, 313.0], [43.7, 313.0], [43.8, 313.0], [43.9, 313.0], [44.0, 314.0], [44.1, 314.0], [44.2, 314.0], [44.3, 314.0], [44.4, 314.0], [44.5, 314.0], [44.6, 314.0], [44.7, 314.0], [44.8, 314.0], [44.9, 314.0], [45.0, 315.0], [45.1, 315.0], [45.2, 315.0], [45.3, 318.0], [45.4, 318.0], [45.5, 319.0], [45.6, 319.0], [45.7, 319.0], [45.8, 319.0], [45.9, 319.0], [46.0, 319.0], [46.1, 319.0], [46.2, 319.0], [46.3, 322.0], [46.4, 322.0], [46.5, 322.0], [46.6, 322.0], [46.7, 322.0], [46.8, 323.0], [46.9, 323.0], [47.0, 324.0], [47.1, 324.0], [47.2, 324.0], [47.3, 326.0], [47.4, 326.0], [47.5, 326.0], [47.6, 326.0], [47.7, 326.0], [47.8, 331.0], [47.9, 331.0], [48.0, 332.0], [48.1, 332.0], [48.2, 332.0], [48.3, 338.0], [48.4, 338.0], [48.5, 342.0], [48.6, 342.0], [48.7, 342.0], [48.8, 344.0], [48.9, 344.0], [49.0, 348.0], [49.1, 348.0], [49.2, 348.0], [49.3, 356.0], [49.4, 356.0], [49.5, 357.0], [49.6, 357.0], [49.7, 357.0], [49.8, 359.0], [49.9, 359.0], [50.0, 361.0], [50.1, 361.0], [50.2, 361.0], [50.3, 363.0], [50.4, 363.0], [50.5, 367.0], [50.6, 367.0], [50.7, 367.0], [50.8, 372.0], [50.9, 372.0], [51.0, 376.0], [51.1, 376.0], [51.2, 376.0], [51.3, 379.0], [51.4, 379.0], [51.5, 380.0], [51.6, 380.0], [51.7, 380.0], [51.8, 381.0], [51.9, 381.0], [52.0, 381.0], [52.1, 381.0], [52.2, 381.0], [52.3, 382.0], [52.4, 382.0], [52.5, 383.0], [52.6, 383.0], [52.7, 383.0], [52.8, 383.0], [52.9, 383.0], [53.0, 387.0], [53.1, 387.0], [53.2, 387.0], [53.3, 387.0], [53.4, 387.0], [53.5, 387.0], [53.6, 387.0], [53.7, 387.0], [53.8, 388.0], [53.9, 388.0], [54.0, 388.0], [54.1, 388.0], [54.2, 388.0], [54.3, 389.0], [54.4, 389.0], [54.5, 390.0], [54.6, 390.0], [54.7, 390.0], [54.8, 392.0], [54.9, 392.0], [55.0, 394.0], [55.1, 394.0], [55.2, 394.0], [55.3, 394.0], [55.4, 394.0], [55.5, 395.0], [55.6, 395.0], [55.7, 395.0], [55.8, 395.0], [55.9, 395.0], [56.0, 396.0], [56.1, 396.0], [56.2, 396.0], [56.3, 397.0], [56.4, 397.0], [56.5, 399.0], [56.6, 399.0], [56.7, 399.0], [56.8, 399.0], [56.9, 399.0], [57.0, 401.0], [57.1, 401.0], [57.2, 401.0], [57.3, 401.0], [57.4, 401.0], [57.5, 401.0], [57.6, 401.0], [57.7, 401.0], [57.8, 402.0], [57.9, 402.0], [58.0, 405.0], [58.1, 405.0], [58.2, 405.0], [58.3, 406.0], [58.4, 406.0], [58.5, 407.0], [58.6, 407.0], [58.7, 407.0], [58.8, 407.0], [58.9, 407.0], [59.0, 407.0], [59.1, 407.0], [59.2, 407.0], [59.3, 408.0], [59.4, 408.0], [59.5, 408.0], [59.6, 408.0], [59.7, 408.0], [59.8, 409.0], [59.9, 409.0], [60.0, 409.0], [60.1, 409.0], [60.2, 409.0], [60.3, 410.0], [60.4, 410.0], [60.5, 411.0], [60.6, 411.0], [60.7, 411.0], [60.8, 411.0], [60.9, 411.0], [61.0, 413.0], [61.1, 413.0], [61.2, 413.0], [61.3, 414.0], [61.4, 414.0], [61.5, 414.0], [61.6, 414.0], [61.7, 414.0], [61.8, 414.0], [61.9, 414.0], [62.0, 414.0], [62.1, 414.0], [62.2, 414.0], [62.3, 414.0], [62.4, 414.0], [62.5, 415.0], [62.6, 415.0], [62.7, 415.0], [62.8, 415.0], [62.9, 415.0], [63.0, 416.0], [63.1, 416.0], [63.2, 416.0], [63.3, 416.0], [63.4, 416.0], [63.5, 417.0], [63.6, 417.0], [63.7, 417.0], [63.8, 418.0], [63.9, 418.0], [64.0, 421.0], [64.1, 421.0], [64.2, 421.0], [64.3, 421.0], [64.4, 421.0], [64.5, 422.0], [64.6, 422.0], [64.7, 422.0], [64.8, 422.0], [64.9, 422.0], [65.0, 423.0], [65.1, 423.0], [65.2, 423.0], [65.3, 423.0], [65.4, 423.0], [65.5, 423.0], [65.6, 423.0], [65.7, 423.0], [65.8, 424.0], [65.9, 424.0], [66.0, 425.0], [66.1, 425.0], [66.2, 425.0], [66.3, 425.0], [66.4, 425.0], [66.5, 426.0], [66.6, 426.0], [66.7, 426.0], [66.8, 426.0], [66.9, 426.0], [67.0, 426.0], [67.1, 426.0], [67.2, 426.0], [67.3, 427.0], [67.4, 427.0], [67.5, 428.0], [67.6, 428.0], [67.7, 428.0], [67.8, 429.0], [67.9, 429.0], [68.0, 429.0], [68.1, 429.0], [68.2, 429.0], [68.3, 431.0], [68.4, 431.0], [68.5, 432.0], [68.6, 432.0], [68.7, 432.0], [68.8, 433.0], [68.9, 433.0], [69.0, 433.0], [69.1, 433.0], [69.2, 433.0], [69.3, 433.0], [69.4, 433.0], [69.5, 434.0], [69.6, 434.0], [69.7, 434.0], [69.8, 434.0], [69.9, 434.0], [70.0, 434.0], [70.1, 434.0], [70.2, 434.0], [70.3, 436.0], [70.4, 436.0], [70.5, 436.0], [70.6, 436.0], [70.7, 436.0], [70.8, 437.0], [70.9, 437.0], [71.0, 438.0], [71.1, 438.0], [71.2, 438.0], [71.3, 438.0], [71.4, 438.0], [71.5, 438.0], [71.6, 438.0], [71.7, 438.0], [71.8, 438.0], [71.9, 438.0], [72.0, 438.0], [72.1, 438.0], [72.2, 438.0], [72.3, 439.0], [72.4, 439.0], [72.5, 440.0], [72.6, 440.0], [72.7, 440.0], [72.8, 440.0], [72.9, 440.0], [73.0, 443.0], [73.1, 443.0], [73.2, 443.0], [73.3, 443.0], [73.4, 443.0], [73.5, 443.0], [73.6, 443.0], [73.7, 443.0], [73.8, 446.0], [73.9, 446.0], [74.0, 447.0], [74.1, 447.0], [74.2, 447.0], [74.3, 448.0], [74.4, 448.0], [74.5, 448.0], [74.6, 448.0], [74.7, 448.0], [74.8, 449.0], [74.9, 449.0], [75.0, 450.0], [75.1, 450.0], [75.2, 450.0], [75.3, 451.0], [75.4, 451.0], [75.5, 451.0], [75.6, 451.0], [75.7, 451.0], [75.8, 452.0], [75.9, 452.0], [76.0, 454.0], [76.1, 454.0], [76.2, 454.0], [76.3, 455.0], [76.4, 455.0], [76.5, 456.0], [76.6, 456.0], [76.7, 456.0], [76.8, 457.0], [76.9, 457.0], [77.0, 457.0], [77.1, 457.0], [77.2, 457.0], [77.3, 458.0], [77.4, 458.0], [77.5, 459.0], [77.6, 459.0], [77.7, 459.0], [77.8, 467.0], [77.9, 467.0], [78.0, 478.0], [78.1, 478.0], [78.2, 478.0], [78.3, 545.0], [78.4, 545.0], [78.5, 742.0], [78.6, 742.0], [78.7, 742.0], [78.8, 874.0], [78.9, 874.0], [79.0, 937.0], [79.1, 937.0], [79.2, 937.0], [79.3, 1015.0], [79.4, 1015.0], [79.5, 1024.0], [79.6, 1024.0], [79.7, 1024.0], [79.8, 1031.0], [79.9, 1031.0], [80.0, 1063.0], [80.1, 1063.0], [80.2, 1063.0], [80.3, 1073.0], [80.4, 1073.0], [80.5, 1085.0], [80.6, 1085.0], [80.7, 1085.0], [80.8, 1087.0], [80.9, 1087.0], [81.0, 1098.0], [81.1, 1098.0], [81.2, 1098.0], [81.3, 1100.0], [81.4, 1100.0], [81.5, 1102.0], [81.6, 1102.0], [81.7, 1102.0], [81.8, 1104.0], [81.9, 1104.0], [82.0, 1127.0], [82.1, 1127.0], [82.2, 1127.0], [82.3, 1156.0], [82.4, 1156.0], [82.5, 1158.0], [82.6, 1158.0], [82.7, 1158.0], [82.8, 1166.0], [82.9, 1166.0], [83.0, 1170.0], [83.1, 1170.0], [83.2, 1170.0], [83.3, 1171.0], [83.4, 1171.0], [83.5, 1171.0], [83.6, 1171.0], [83.7, 1171.0], [83.8, 1177.0], [83.9, 1177.0], [84.0, 1179.0], [84.1, 1179.0], [84.2, 1179.0], [84.3, 1180.0], [84.4, 1180.0], [84.5, 1183.0], [84.6, 1183.0], [84.7, 1183.0], [84.8, 1183.0], [84.9, 1183.0], [85.0, 1195.0], [85.1, 1195.0], [85.2, 1195.0], [85.3, 1199.0], [85.4, 1199.0], [85.5, 1199.0], [85.6, 1199.0], [85.7, 1199.0], [85.8, 1205.0], [85.9, 1205.0], [86.0, 1205.0], [86.1, 1205.0], [86.2, 1205.0], [86.3, 1218.0], [86.4, 1218.0], [86.5, 1220.0], [86.6, 1220.0], [86.7, 1220.0], [86.8, 1223.0], [86.9, 1223.0], [87.0, 1228.0], [87.1, 1228.0], [87.2, 1228.0], [87.3, 1230.0], [87.4, 1230.0], [87.5, 1233.0], [87.6, 1233.0], [87.7, 1233.0], [87.8, 1234.0], [87.9, 1234.0], [88.0, 1246.0], [88.1, 1246.0], [88.2, 1246.0], [88.3, 1248.0], [88.4, 1248.0], [88.5, 1248.0], [88.6, 1248.0], [88.7, 1248.0], [88.8, 1249.0], [88.9, 1249.0], [89.0, 1253.0], [89.1, 1253.0], [89.2, 1253.0], [89.3, 1260.0], [89.4, 1260.0], [89.5, 1263.0], [89.6, 1263.0], [89.7, 1263.0], [89.8, 1266.0], [89.9, 1266.0], [90.0, 1270.0], [90.1, 1270.0], [90.2, 1270.0], [90.3, 1277.0], [90.4, 1277.0], [90.5, 1285.0], [90.6, 1285.0], [90.7, 1285.0], [90.8, 1289.0], [90.9, 1289.0], [91.0, 1303.0], [91.1, 1303.0], [91.2, 1303.0], [91.3, 1303.0], [91.4, 1303.0], [91.5, 1312.0], [91.6, 1312.0], [91.7, 1312.0], [91.8, 1324.0], [91.9, 1324.0], [92.0, 1325.0], [92.1, 1325.0], [92.2, 1325.0], [92.3, 1326.0], [92.4, 1326.0], [92.5, 1330.0], [92.6, 1330.0], [92.7, 1330.0], [92.8, 1333.0], [92.9, 1333.0], [93.0, 1340.0], [93.1, 1340.0], [93.2, 1340.0], [93.3, 1347.0], [93.4, 1347.0], [93.5, 1352.0], [93.6, 1352.0], [93.7, 1352.0], [93.8, 1392.0], [93.9, 1392.0], [94.0, 1397.0], [94.1, 1397.0], [94.2, 1397.0], [94.3, 1401.0], [94.4, 1401.0], [94.5, 1415.0], [94.6, 1415.0], [94.7, 1415.0], [94.8, 1419.0], [94.9, 1419.0], [95.0, 1433.0], [95.1, 1433.0], [95.2, 1433.0], [95.3, 1446.0], [95.4, 1446.0], [95.5, 1484.0], [95.6, 1484.0], [95.7, 1484.0], [95.8, 1510.0], [95.9, 1510.0], [96.0, 1522.0], [96.1, 1522.0], [96.2, 1522.0], [96.3, 1533.0], [96.4, 1533.0], [96.5, 1567.0], [96.6, 1567.0], [96.7, 1567.0], [96.8, 1846.0], [96.9, 1846.0], [97.0, 2021.0], [97.1, 2021.0], [97.2, 2021.0], [97.3, 2117.0], [97.4, 2117.0], [97.5, 2131.0], [97.6, 2131.0], [97.7, 2131.0], [97.8, 2436.0], [97.9, 2436.0], [98.0, 2481.0], [98.1, 2481.0], [98.2, 2481.0], [98.3, 2486.0], [98.4, 2486.0], [98.5, 3280.0], [98.6, 3280.0], [98.7, 3280.0], [98.8, 3312.0], [98.9, 3312.0], [99.0, 3784.0], [99.1, 3784.0], [99.2, 3784.0], [99.3, 4097.0], [99.4, 4097.0], [99.5, 4853.0], [99.6, 4853.0], [99.7, 4853.0], [99.8, 8312.0], [99.9, 8312.0]], "isOverall": false, "label": "UpdateBooking ", "isController": false}, {"data": [[0.0, 965.0], [0.1, 965.0], [0.2, 965.0], [0.3, 967.0], [0.4, 967.0], [0.5, 1025.0], [0.6, 1025.0], [0.7, 1025.0], [0.8, 1053.0], [0.9, 1053.0], [1.0, 1055.0], [1.1, 1055.0], [1.2, 1055.0], [1.3, 1069.0], [1.4, 1069.0], [1.5, 1081.0], [1.6, 1081.0], [1.7, 1081.0], [1.8, 1084.0], [1.9, 1084.0], [2.0, 1091.0], [2.1, 1091.0], [2.2, 1091.0], [2.3, 1093.0], [2.4, 1093.0], [2.5, 1095.0], [2.6, 1095.0], [2.7, 1095.0], [2.8, 1146.0], [2.9, 1146.0], [3.0, 1148.0], [3.1, 1148.0], [3.2, 1148.0], [3.3, 1159.0], [3.4, 1159.0], [3.5, 1185.0], [3.6, 1185.0], [3.7, 1185.0], [3.8, 1231.0], [3.9, 1231.0], [4.0, 1243.0], [4.1, 1243.0], [4.2, 1243.0], [4.3, 1246.0], [4.4, 1246.0], [4.5, 1263.0], [4.6, 1263.0], [4.7, 1263.0], [4.8, 1283.0], [4.9, 1283.0], [5.0, 1292.0], [5.1, 1292.0], [5.2, 1292.0], [5.3, 1298.0], [5.4, 1298.0], [5.5, 1313.0], [5.6, 1313.0], [5.7, 1313.0], [5.8, 1315.0], [5.9, 1315.0], [6.0, 1348.0], [6.1, 1348.0], [6.2, 1348.0], [6.3, 1361.0], [6.4, 1361.0], [6.5, 1365.0], [6.6, 1365.0], [6.7, 1365.0], [6.8, 1366.0], [6.9, 1366.0], [7.0, 1370.0], [7.1, 1370.0], [7.2, 1370.0], [7.3, 1370.0], [7.4, 1370.0], [7.5, 1389.0], [7.6, 1389.0], [7.7, 1389.0], [7.8, 1429.0], [7.9, 1429.0], [8.0, 1431.0], [8.1, 1431.0], [8.2, 1431.0], [8.3, 1432.0], [8.4, 1432.0], [8.5, 1445.0], [8.6, 1445.0], [8.7, 1445.0], [8.8, 1464.0], [8.9, 1464.0], [9.0, 1515.0], [9.1, 1515.0], [9.2, 1515.0], [9.3, 1542.0], [9.4, 1542.0], [9.5, 1550.0], [9.6, 1550.0], [9.7, 1550.0], [9.8, 1570.0], [9.9, 1570.0], [10.0, 1591.0], [10.1, 1591.0], [10.2, 1591.0], [10.3, 1592.0], [10.4, 1592.0], [10.5, 1594.0], [10.6, 1594.0], [10.7, 1594.0], [10.8, 1598.0], [10.9, 1598.0], [11.0, 1617.0], [11.1, 1617.0], [11.2, 1617.0], [11.3, 1630.0], [11.4, 1630.0], [11.5, 1632.0], [11.6, 1632.0], [11.7, 1632.0], [11.8, 1640.0], [11.9, 1640.0], [12.0, 1646.0], [12.1, 1646.0], [12.2, 1646.0], [12.3, 1650.0], [12.4, 1650.0], [12.5, 1651.0], [12.6, 1651.0], [12.7, 1651.0], [12.8, 1660.0], [12.9, 1660.0], [13.0, 1673.0], [13.1, 1673.0], [13.2, 1673.0], [13.3, 1678.0], [13.4, 1678.0], [13.5, 1687.0], [13.6, 1687.0], [13.7, 1687.0], [13.8, 1692.0], [13.9, 1692.0], [14.0, 1692.0], [14.1, 1692.0], [14.2, 1692.0], [14.3, 1694.0], [14.4, 1694.0], [14.5, 1696.0], [14.6, 1696.0], [14.7, 1696.0], [14.8, 1713.0], [14.9, 1713.0], [15.0, 1717.0], [15.1, 1717.0], [15.2, 1717.0], [15.3, 1721.0], [15.4, 1721.0], [15.5, 1732.0], [15.6, 1732.0], [15.7, 1732.0], [15.8, 1733.0], [15.9, 1733.0], [16.0, 1740.0], [16.1, 1740.0], [16.2, 1740.0], [16.3, 1744.0], [16.4, 1744.0], [16.5, 1821.0], [16.6, 1821.0], [16.7, 1821.0], [16.8, 1834.0], [16.9, 1834.0], [17.0, 1835.0], [17.1, 1835.0], [17.2, 1835.0], [17.3, 1851.0], [17.4, 1851.0], [17.5, 1881.0], [17.6, 1881.0], [17.7, 1881.0], [17.8, 1882.0], [17.9, 1882.0], [18.0, 1972.0], [18.1, 1972.0], [18.2, 1972.0], [18.3, 2002.0], [18.4, 2002.0], [18.5, 2034.0], [18.6, 2034.0], [18.7, 2034.0], [18.8, 2037.0], [18.9, 2037.0], [19.0, 2074.0], [19.1, 2074.0], [19.2, 2074.0], [19.3, 2103.0], [19.4, 2103.0], [19.5, 2117.0], [19.6, 2117.0], [19.7, 2117.0], [19.8, 2122.0], [19.9, 2122.0], [20.0, 2138.0], [20.1, 2138.0], [20.2, 2138.0], [20.3, 2138.0], [20.4, 2138.0], [20.5, 2149.0], [20.6, 2149.0], [20.7, 2149.0], [20.8, 2151.0], [20.9, 2151.0], [21.0, 2152.0], [21.1, 2152.0], [21.2, 2152.0], [21.3, 2157.0], [21.4, 2157.0], [21.5, 2165.0], [21.6, 2165.0], [21.7, 2165.0], [21.8, 2181.0], [21.9, 2181.0], [22.0, 2190.0], [22.1, 2190.0], [22.2, 2190.0], [22.3, 2209.0], [22.4, 2209.0], [22.5, 2217.0], [22.6, 2217.0], [22.7, 2217.0], [22.8, 2254.0], [22.9, 2254.0], [23.0, 2290.0], [23.1, 2290.0], [23.2, 2290.0], [23.3, 2291.0], [23.4, 2291.0], [23.5, 2302.0], [23.6, 2302.0], [23.7, 2302.0], [23.8, 2304.0], [23.9, 2304.0], [24.0, 2328.0], [24.1, 2328.0], [24.2, 2328.0], [24.3, 2352.0], [24.4, 2352.0], [24.5, 2352.0], [24.6, 2352.0], [24.7, 2352.0], [24.8, 2366.0], [24.9, 2366.0], [25.0, 2375.0], [25.1, 2375.0], [25.2, 2375.0], [25.3, 2376.0], [25.4, 2376.0], [25.5, 2398.0], [25.6, 2398.0], [25.7, 2398.0], [25.8, 2421.0], [25.9, 2421.0], [26.0, 2434.0], [26.1, 2434.0], [26.2, 2434.0], [26.3, 2489.0], [26.4, 2489.0], [26.5, 2499.0], [26.6, 2499.0], [26.7, 2499.0], [26.8, 2515.0], [26.9, 2515.0], [27.0, 2533.0], [27.1, 2533.0], [27.2, 2533.0], [27.3, 2544.0], [27.4, 2544.0], [27.5, 2557.0], [27.6, 2557.0], [27.7, 2557.0], [27.8, 2561.0], [27.9, 2561.0], [28.0, 2568.0], [28.1, 2568.0], [28.2, 2568.0], [28.3, 2597.0], [28.4, 2597.0], [28.5, 2598.0], [28.6, 2598.0], [28.7, 2598.0], [28.8, 2601.0], [28.9, 2601.0], [29.0, 2626.0], [29.1, 2626.0], [29.2, 2626.0], [29.3, 2683.0], [29.4, 2683.0], [29.5, 2790.0], [29.6, 2790.0], [29.7, 2790.0], [29.8, 2820.0], [29.9, 2820.0], [30.0, 2822.0], [30.1, 2822.0], [30.2, 2822.0], [30.3, 2842.0], [30.4, 2842.0], [30.5, 2846.0], [30.6, 2846.0], [30.7, 2846.0], [30.8, 2849.0], [30.9, 2849.0], [31.0, 2898.0], [31.1, 2898.0], [31.2, 2898.0], [31.3, 2904.0], [31.4, 2904.0], [31.5, 2911.0], [31.6, 2911.0], [31.7, 2911.0], [31.8, 2931.0], [31.9, 2931.0], [32.0, 2964.0], [32.1, 2964.0], [32.2, 2964.0], [32.3, 2982.0], [32.4, 2982.0], [32.5, 2992.0], [32.6, 2992.0], [32.7, 2992.0], [32.8, 2997.0], [32.9, 2997.0], [33.0, 3019.0], [33.1, 3019.0], [33.2, 3019.0], [33.3, 3114.0], [33.4, 3114.0], [33.5, 3119.0], [33.6, 3119.0], [33.7, 3119.0], [33.8, 3141.0], [33.9, 3141.0], [34.0, 3142.0], [34.1, 3142.0], [34.2, 3142.0], [34.3, 3187.0], [34.4, 3187.0], [34.5, 3208.0], [34.6, 3208.0], [34.7, 3208.0], [34.8, 3227.0], [34.9, 3227.0], [35.0, 3258.0], [35.1, 3258.0], [35.2, 3258.0], [35.3, 3268.0], [35.4, 3268.0], [35.5, 3275.0], [35.6, 3275.0], [35.7, 3275.0], [35.8, 3291.0], [35.9, 3291.0], [36.0, 3299.0], [36.1, 3299.0], [36.2, 3299.0], [36.3, 3307.0], [36.4, 3307.0], [36.5, 3320.0], [36.6, 3320.0], [36.7, 3320.0], [36.8, 3323.0], [36.9, 3323.0], [37.0, 3339.0], [37.1, 3339.0], [37.2, 3339.0], [37.3, 3348.0], [37.4, 3348.0], [37.5, 3355.0], [37.6, 3355.0], [37.7, 3355.0], [37.8, 3369.0], [37.9, 3369.0], [38.0, 3377.0], [38.1, 3377.0], [38.2, 3377.0], [38.3, 3405.0], [38.4, 3405.0], [38.5, 3489.0], [38.6, 3489.0], [38.7, 3489.0], [38.8, 3516.0], [38.9, 3516.0], [39.0, 3546.0], [39.1, 3546.0], [39.2, 3546.0], [39.3, 3566.0], [39.4, 3566.0], [39.5, 3590.0], [39.6, 3590.0], [39.7, 3590.0], [39.8, 3604.0], [39.9, 3604.0], [40.0, 3670.0], [40.1, 3670.0], [40.2, 3670.0], [40.3, 3700.0], [40.4, 3700.0], [40.5, 3728.0], [40.6, 3728.0], [40.7, 3728.0], [40.8, 3765.0], [40.9, 3765.0], [41.0, 3773.0], [41.1, 3773.0], [41.2, 3773.0], [41.3, 3812.0], [41.4, 3812.0], [41.5, 3850.0], [41.6, 3850.0], [41.7, 3850.0], [41.8, 3879.0], [41.9, 3879.0], [42.0, 3883.0], [42.1, 3883.0], [42.2, 3883.0], [42.3, 3922.0], [42.4, 3922.0], [42.5, 3958.0], [42.6, 3958.0], [42.7, 3958.0], [42.8, 3978.0], [42.9, 3978.0], [43.0, 4019.0], [43.1, 4019.0], [43.2, 4019.0], [43.3, 4031.0], [43.4, 4031.0], [43.5, 4061.0], [43.6, 4061.0], [43.7, 4061.0], [43.8, 4071.0], [43.9, 4071.0], [44.0, 4073.0], [44.1, 4073.0], [44.2, 4073.0], [44.3, 4082.0], [44.4, 4082.0], [44.5, 4087.0], [44.6, 4087.0], [44.7, 4087.0], [44.8, 4091.0], [44.9, 4091.0], [45.0, 4130.0], [45.1, 4130.0], [45.2, 4130.0], [45.3, 4171.0], [45.4, 4171.0], [45.5, 4178.0], [45.6, 4178.0], [45.7, 4178.0], [45.8, 4201.0], [45.9, 4201.0], [46.0, 4212.0], [46.1, 4212.0], [46.2, 4212.0], [46.3, 4218.0], [46.4, 4218.0], [46.5, 4219.0], [46.6, 4219.0], [46.7, 4219.0], [46.8, 4269.0], [46.9, 4269.0], [47.0, 4296.0], [47.1, 4296.0], [47.2, 4296.0], [47.3, 4323.0], [47.4, 4323.0], [47.5, 4332.0], [47.6, 4332.0], [47.7, 4332.0], [47.8, 4359.0], [47.9, 4359.0], [48.0, 4360.0], [48.1, 4360.0], [48.2, 4360.0], [48.3, 4376.0], [48.4, 4376.0], [48.5, 4390.0], [48.6, 4390.0], [48.7, 4390.0], [48.8, 4431.0], [48.9, 4431.0], [49.0, 4440.0], [49.1, 4440.0], [49.2, 4440.0], [49.3, 4450.0], [49.4, 4450.0], [49.5, 4463.0], [49.6, 4463.0], [49.7, 4463.0], [49.8, 4478.0], [49.9, 4478.0], [50.0, 4484.0], [50.1, 4484.0], [50.2, 4484.0], [50.3, 4492.0], [50.4, 4492.0], [50.5, 4493.0], [50.6, 4493.0], [50.7, 4493.0], [50.8, 4535.0], [50.9, 4535.0], [51.0, 4563.0], [51.1, 4563.0], [51.2, 4563.0], [51.3, 4603.0], [51.4, 4603.0], [51.5, 4609.0], [51.6, 4609.0], [51.7, 4609.0], [51.8, 4679.0], [51.9, 4679.0], [52.0, 4721.0], [52.1, 4721.0], [52.2, 4721.0], [52.3, 4756.0], [52.4, 4756.0], [52.5, 4758.0], [52.6, 4758.0], [52.7, 4758.0], [52.8, 4773.0], [52.9, 4773.0], [53.0, 4779.0], [53.1, 4779.0], [53.2, 4779.0], [53.3, 4785.0], [53.4, 4785.0], [53.5, 4844.0], [53.6, 4844.0], [53.7, 4844.0], [53.8, 4909.0], [53.9, 4909.0], [54.0, 4989.0], [54.1, 4989.0], [54.2, 4989.0], [54.3, 5007.0], [54.4, 5007.0], [54.5, 5032.0], [54.6, 5032.0], [54.7, 5032.0], [54.8, 5037.0], [54.9, 5037.0], [55.0, 5077.0], [55.1, 5077.0], [55.2, 5077.0], [55.3, 5102.0], [55.4, 5102.0], [55.5, 5154.0], [55.6, 5154.0], [55.7, 5154.0], [55.8, 5170.0], [55.9, 5170.0], [56.0, 5201.0], [56.1, 5201.0], [56.2, 5201.0], [56.3, 5222.0], [56.4, 5222.0], [56.5, 5264.0], [56.6, 5264.0], [56.7, 5264.0], [56.8, 5276.0], [56.9, 5276.0], [57.0, 5297.0], [57.1, 5297.0], [57.2, 5297.0], [57.3, 5300.0], [57.4, 5300.0], [57.5, 5317.0], [57.6, 5317.0], [57.7, 5317.0], [57.8, 5340.0], [57.9, 5340.0], [58.0, 5361.0], [58.1, 5361.0], [58.2, 5361.0], [58.3, 5362.0], [58.4, 5362.0], [58.5, 5409.0], [58.6, 5409.0], [58.7, 5409.0], [58.8, 5454.0], [58.9, 5454.0], [59.0, 5463.0], [59.1, 5463.0], [59.2, 5463.0], [59.3, 5470.0], [59.4, 5470.0], [59.5, 5529.0], [59.6, 5529.0], [59.7, 5529.0], [59.8, 5556.0], [59.9, 5556.0], [60.0, 5600.0], [60.1, 5600.0], [60.2, 5600.0], [60.3, 5619.0], [60.4, 5619.0], [60.5, 5624.0], [60.6, 5624.0], [60.7, 5624.0], [60.8, 5635.0], [60.9, 5635.0], [61.0, 5672.0], [61.1, 5672.0], [61.2, 5672.0], [61.3, 5683.0], [61.4, 5683.0], [61.5, 5700.0], [61.6, 5700.0], [61.7, 5700.0], [61.8, 5705.0], [61.9, 5705.0], [62.0, 5714.0], [62.1, 5714.0], [62.2, 5714.0], [62.3, 5717.0], [62.4, 5717.0], [62.5, 5785.0], [62.6, 5785.0], [62.7, 5785.0], [62.8, 5809.0], [62.9, 5809.0], [63.0, 5845.0], [63.1, 5845.0], [63.2, 5845.0], [63.3, 5856.0], [63.4, 5856.0], [63.5, 5875.0], [63.6, 5875.0], [63.7, 5875.0], [63.8, 5886.0], [63.9, 5886.0], [64.0, 5957.0], [64.1, 5957.0], [64.2, 5957.0], [64.3, 5980.0], [64.4, 5980.0], [64.5, 6139.0], [64.6, 6139.0], [64.7, 6139.0], [64.8, 6230.0], [64.9, 6230.0], [65.0, 6245.0], [65.1, 6245.0], [65.2, 6245.0], [65.3, 6320.0], [65.4, 6320.0], [65.5, 6351.0], [65.6, 6351.0], [65.7, 6351.0], [65.8, 6383.0], [65.9, 6383.0], [66.0, 6457.0], [66.1, 6457.0], [66.2, 6457.0], [66.3, 6499.0], [66.4, 6499.0], [66.5, 6514.0], [66.6, 6514.0], [66.7, 6514.0], [66.8, 6541.0], [66.9, 6541.0], [67.0, 6556.0], [67.1, 6556.0], [67.2, 6556.0], [67.3, 6586.0], [67.4, 6586.0], [67.5, 6593.0], [67.6, 6593.0], [67.7, 6593.0], [67.8, 6619.0], [67.9, 6619.0], [68.0, 6672.0], [68.1, 6672.0], [68.2, 6672.0], [68.3, 6688.0], [68.4, 6688.0], [68.5, 6693.0], [68.6, 6693.0], [68.7, 6693.0], [68.8, 6702.0], [68.9, 6702.0], [69.0, 6713.0], [69.1, 6713.0], [69.2, 6713.0], [69.3, 6725.0], [69.4, 6725.0], [69.5, 6730.0], [69.6, 6730.0], [69.7, 6730.0], [69.8, 6757.0], [69.9, 6757.0], [70.0, 6777.0], [70.1, 6777.0], [70.2, 6777.0], [70.3, 6799.0], [70.4, 6799.0], [70.5, 6818.0], [70.6, 6818.0], [70.7, 6818.0], [70.8, 6874.0], [70.9, 6874.0], [71.0, 6879.0], [71.1, 6879.0], [71.2, 6879.0], [71.3, 6892.0], [71.4, 6892.0], [71.5, 6953.0], [71.6, 6953.0], [71.7, 6953.0], [71.8, 6967.0], [71.9, 6967.0], [72.0, 6993.0], [72.1, 6993.0], [72.2, 6993.0], [72.3, 7020.0], [72.4, 7020.0], [72.5, 7027.0], [72.6, 7027.0], [72.7, 7027.0], [72.8, 7038.0], [72.9, 7038.0], [73.0, 7061.0], [73.1, 7061.0], [73.2, 7061.0], [73.3, 7068.0], [73.4, 7068.0], [73.5, 7085.0], [73.6, 7085.0], [73.7, 7085.0], [73.8, 7085.0], [73.9, 7085.0], [74.0, 7157.0], [74.1, 7157.0], [74.2, 7157.0], [74.3, 7168.0], [74.4, 7168.0], [74.5, 7172.0], [74.6, 7172.0], [74.7, 7172.0], [74.8, 7199.0], [74.9, 7199.0], [75.0, 7204.0], [75.1, 7204.0], [75.2, 7204.0], [75.3, 7219.0], [75.4, 7219.0], [75.5, 7244.0], [75.6, 7244.0], [75.7, 7244.0], [75.8, 7266.0], [75.9, 7266.0], [76.0, 7316.0], [76.1, 7316.0], [76.2, 7316.0], [76.3, 7420.0], [76.4, 7420.0], [76.5, 7433.0], [76.6, 7433.0], [76.7, 7433.0], [76.8, 7449.0], [76.9, 7449.0], [77.0, 7467.0], [77.1, 7467.0], [77.2, 7467.0], [77.3, 7468.0], [77.4, 7468.0], [77.5, 7507.0], [77.6, 7507.0], [77.7, 7507.0], [77.8, 7514.0], [77.9, 7514.0], [78.0, 7519.0], [78.1, 7519.0], [78.2, 7519.0], [78.3, 7521.0], [78.4, 7521.0], [78.5, 7683.0], [78.6, 7683.0], [78.7, 7683.0], [78.8, 7689.0], [78.9, 7689.0], [79.0, 7809.0], [79.1, 7809.0], [79.2, 7809.0], [79.3, 7848.0], [79.4, 7848.0], [79.5, 7918.0], [79.6, 7918.0], [79.7, 7918.0], [79.8, 7997.0], [79.9, 7997.0], [80.0, 8010.0], [80.1, 8010.0], [80.2, 8010.0], [80.3, 8071.0], [80.4, 8071.0], [80.5, 8088.0], [80.6, 8088.0], [80.7, 8088.0], [80.8, 8105.0], [80.9, 8105.0], [81.0, 8124.0], [81.1, 8124.0], [81.2, 8124.0], [81.3, 8149.0], [81.4, 8149.0], [81.5, 8177.0], [81.6, 8177.0], [81.7, 8177.0], [81.8, 8274.0], [81.9, 8274.0], [82.0, 8291.0], [82.1, 8291.0], [82.2, 8291.0], [82.3, 8346.0], [82.4, 8346.0], [82.5, 8496.0], [82.6, 8496.0], [82.7, 8496.0], [82.8, 8496.0], [82.9, 8496.0], [83.0, 8501.0], [83.1, 8501.0], [83.2, 8501.0], [83.3, 8611.0], [83.4, 8611.0], [83.5, 8667.0], [83.6, 8667.0], [83.7, 8667.0], [83.8, 8770.0], [83.9, 8770.0], [84.0, 8774.0], [84.1, 8774.0], [84.2, 8774.0], [84.3, 9117.0], [84.4, 9117.0], [84.5, 9184.0], [84.6, 9184.0], [84.7, 9184.0], [84.8, 9353.0], [84.9, 9353.0], [85.0, 9814.0], [85.1, 9814.0], [85.2, 9814.0], [85.3, 9868.0], [85.4, 9868.0], [85.5, 9919.0], [85.6, 9919.0], [85.7, 9919.0], [85.8, 10414.0], [85.9, 10414.0], [86.0, 10709.0], [86.1, 10709.0], [86.2, 10709.0], [86.3, 10877.0], [86.4, 10877.0], [86.5, 11306.0], [86.6, 11306.0], [86.7, 11306.0], [86.8, 11354.0], [86.9, 11354.0], [87.0, 11358.0], [87.1, 11358.0], [87.2, 11358.0], [87.3, 11423.0], [87.4, 11423.0], [87.5, 11464.0], [87.6, 11464.0], [87.7, 11464.0], [87.8, 11510.0], [87.9, 11510.0], [88.0, 11827.0], [88.1, 11827.0], [88.2, 11827.0], [88.3, 11835.0], [88.4, 11835.0], [88.5, 12159.0], [88.6, 12159.0], [88.7, 12159.0], [88.8, 12178.0], [88.9, 12178.0], [89.0, 12188.0], [89.1, 12188.0], [89.2, 12188.0], [89.3, 12196.0], [89.4, 12196.0], [89.5, 12199.0], [89.6, 12199.0], [89.7, 12199.0], [89.8, 12243.0], [89.9, 12243.0], [90.0, 12537.0], [90.1, 12537.0], [90.2, 12537.0], [90.3, 12649.0], [90.4, 12649.0], [90.5, 12891.0], [90.6, 12891.0], [90.7, 12891.0], [90.8, 13048.0], [90.9, 13048.0], [91.0, 13164.0], [91.1, 13164.0], [91.2, 13164.0], [91.3, 13215.0], [91.4, 13215.0], [91.5, 13255.0], [91.6, 13255.0], [91.7, 13255.0], [91.8, 13264.0], [91.9, 13264.0], [92.0, 13350.0], [92.1, 13350.0], [92.2, 13350.0], [92.3, 13522.0], [92.4, 13522.0], [92.5, 13606.0], [92.6, 13606.0], [92.7, 13606.0], [92.8, 13613.0], [92.9, 13613.0], [93.0, 13671.0], [93.1, 13671.0], [93.2, 13671.0], [93.3, 13877.0], [93.4, 13877.0], [93.5, 14047.0], [93.6, 14047.0], [93.7, 14047.0], [93.8, 14307.0], [93.9, 14307.0], [94.0, 14516.0], [94.1, 14516.0], [94.2, 14516.0], [94.3, 14849.0], [94.4, 14849.0], [94.5, 14869.0], [94.6, 14869.0], [94.7, 14869.0], [94.8, 15509.0], [94.9, 15509.0], [95.0, 15875.0], [95.1, 15875.0], [95.2, 15875.0], [95.3, 15884.0], [95.4, 15884.0], [95.5, 15999.0], [95.6, 15999.0], [95.7, 15999.0], [95.8, 17939.0], [95.9, 17939.0], [96.0, 20288.0], [96.1, 20288.0], [96.2, 20288.0], [96.3, 21920.0], [96.4, 21920.0], [96.5, 22155.0], [96.6, 22155.0], [96.7, 22155.0], [96.8, 22486.0], [96.9, 22486.0], [97.0, 22585.0], [97.1, 22585.0], [97.2, 22585.0], [97.3, 23182.0], [97.4, 23182.0], [97.5, 23945.0], [97.6, 23945.0], [97.7, 23945.0], [97.8, 24636.0], [97.9, 24636.0], [98.0, 25232.0], [98.1, 25232.0], [98.2, 25232.0], [98.3, 26016.0], [98.4, 26016.0], [98.5, 27937.0], [98.6, 27937.0], [98.7, 27937.0], [98.8, 33623.0], [98.9, 33623.0], [99.0, 36261.0], [99.1, 36261.0], [99.2, 36261.0], [99.3, 42205.0], [99.4, 42205.0], [99.5, 46282.0], [99.6, 46282.0], [99.7, 46282.0], [99.8, 79806.0], [99.9, 79806.0]], "isOverall": false, "label": "login", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 178.0, "series": [{"data": [[2100.0, 3.0], [2300.0, 3.0], [2200.0, 3.0], [2400.0, 2.0], [2500.0, 1.0], [11900.0, 1.0], [200.0, 178.0], [3300.0, 1.0], [800.0, 1.0], [900.0, 2.0], [1000.0, 10.0], [4100.0, 1.0], [1100.0, 11.0], [300.0, 53.0], [1200.0, 12.0], [5000.0, 1.0], [1300.0, 8.0], [1400.0, 10.0], [1500.0, 3.0], [400.0, 93.0], [1900.0, 1.0], [7600.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "GetBookingIds ", "isController": false}, {"data": [[9500.0, 1.0], [900.0, 5.0], [1000.0, 2.0], [1100.0, 7.0], [1200.0, 12.0], [1300.0, 12.0], [1400.0, 12.0], [1500.0, 3.0], [1600.0, 4.0], [1800.0, 3.0], [1900.0, 2.0], [2000.0, 1.0], [2100.0, 1.0], [2200.0, 1.0], [2300.0, 1.0], [2400.0, 2.0], [2500.0, 3.0], [2600.0, 1.0], [2800.0, 2.0], [200.0, 160.0], [4200.0, 1.0], [4600.0, 2.0], [300.0, 66.0], [4800.0, 1.0], [4900.0, 1.0], [400.0, 90.0], [7800.0, 1.0], [500.0, 3.0]], "isOverall": false, "label": "CreateBooking ", "isController": false}, {"data": [[2100.0, 2.0], [8300.0, 1.0], [2400.0, 3.0], [700.0, 1.0], [200.0, 169.0], [3300.0, 1.0], [3200.0, 1.0], [800.0, 1.0], [3700.0, 1.0], [900.0, 1.0], [1000.0, 8.0], [4000.0, 1.0], [1100.0, 18.0], [300.0, 59.0], [1200.0, 21.0], [4800.0, 1.0], [1300.0, 13.0], [1400.0, 6.0], [1500.0, 4.0], [400.0, 85.0], [1800.0, 1.0], [2000.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "UpdateBooking ", "isController": false}, {"data": [[79800.0, 1.0], [900.0, 2.0], [1000.0, 9.0], [1100.0, 4.0], [1200.0, 7.0], [1300.0, 9.0], [1400.0, 5.0], [1500.0, 8.0], [1600.0, 15.0], [1700.0, 7.0], [1800.0, 6.0], [1900.0, 1.0], [2000.0, 4.0], [2100.0, 12.0], [2300.0, 9.0], [2200.0, 5.0], [2400.0, 4.0], [2500.0, 8.0], [2600.0, 3.0], [2800.0, 6.0], [2700.0, 1.0], [2900.0, 7.0], [3000.0, 1.0], [3100.0, 5.0], [3300.0, 8.0], [3200.0, 7.0], [3400.0, 2.0], [3500.0, 4.0], [3600.0, 2.0], [3700.0, 4.0], [3800.0, 4.0], [3900.0, 3.0], [4000.0, 8.0], [4200.0, 6.0], [4300.0, 6.0], [4100.0, 3.0], [4600.0, 3.0], [4400.0, 8.0], [4500.0, 2.0], [4700.0, 6.0], [4800.0, 1.0], [4900.0, 2.0], [5000.0, 4.0], [5100.0, 3.0], [5300.0, 5.0], [5200.0, 5.0], [5400.0, 4.0], [5500.0, 2.0], [5600.0, 6.0], [5700.0, 5.0], [5800.0, 5.0], [5900.0, 2.0], [6100.0, 1.0], [6200.0, 2.0], [6300.0, 3.0], [6500.0, 5.0], [6400.0, 2.0], [6600.0, 4.0], [6800.0, 4.0], [6700.0, 7.0], [6900.0, 3.0], [7100.0, 4.0], [7000.0, 7.0], [7300.0, 1.0], [7200.0, 4.0], [7400.0, 5.0], [7500.0, 4.0], [7600.0, 2.0], [7800.0, 2.0], [7900.0, 2.0], [8100.0, 4.0], [8000.0, 3.0], [8600.0, 2.0], [8700.0, 2.0], [8500.0, 1.0], [8200.0, 2.0], [8400.0, 2.0], [8300.0, 1.0], [9100.0, 2.0], [9300.0, 1.0], [9800.0, 2.0], [9900.0, 1.0], [10700.0, 1.0], [10400.0, 1.0], [10800.0, 1.0], [11300.0, 3.0], [11400.0, 2.0], [11500.0, 1.0], [12100.0, 5.0], [11800.0, 2.0], [12200.0, 1.0], [12600.0, 1.0], [12500.0, 1.0], [12800.0, 1.0], [13200.0, 3.0], [13300.0, 1.0], [13000.0, 1.0], [13100.0, 1.0], [13600.0, 3.0], [13500.0, 1.0], [13800.0, 1.0], [14000.0, 1.0], [14300.0, 1.0], [14500.0, 1.0], [14800.0, 2.0], [15500.0, 1.0], [15800.0, 2.0], [15900.0, 1.0], [17900.0, 1.0], [20200.0, 1.0], [21900.0, 1.0], [22400.0, 1.0], [22500.0, 1.0], [22100.0, 1.0], [23100.0, 1.0], [23900.0, 1.0], [25200.0, 1.0], [24600.0, 1.0], [26000.0, 1.0], [27900.0, 1.0], [33600.0, 1.0], [36200.0, 1.0], [42200.0, 1.0], [46200.0, 1.0]], "isOverall": false, "label": "login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 79800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 214.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 953.0, "series": [{"data": [[0.0, 953.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 214.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 433.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.6250000000000004, "minX": 1.72210056E12, "maxY": 157.26199494949483, "series": [{"data": [[1.72210056E12, 157.26199494949483], [1.72210062E12, 2.6250000000000004]], "isOverall": false, "label": "BookingApplication", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72210062E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 231.0, "minX": 1.0, "maxY": 79806.0, "series": [{"data": [[2.0, 2545.0], [3.0, 490.0], [4.0, 1316.0], [5.0, 250.0], [7.0, 366.5], [8.0, 245.0], [9.0, 239.0], [10.0, 255.0], [11.0, 251.0], [12.0, 240.0], [13.0, 253.0], [14.0, 240.0], [17.0, 901.5], [18.0, 893.5], [19.0, 247.0], [20.0, 4127.0], [26.0, 255.0], [28.0, 252.0], [30.0, 246.0], [31.0, 254.0], [32.0, 239.0], [34.0, 452.6666666666667], [37.0, 247.0], [39.0, 251.33333333333334], [38.0, 241.0], [43.0, 245.0], [47.0, 260.0], [48.0, 254.0], [53.0, 239.0], [52.0, 588.0], [54.0, 245.0], [58.0, 243.0], [61.0, 766.0], [63.0, 239.5], [62.0, 245.0], [66.0, 253.0], [65.0, 250.0], [64.0, 247.0], [71.0, 246.0], [70.0, 244.75], [69.0, 243.0], [68.0, 250.0], [75.0, 240.0], [73.0, 11984.0], [72.0, 251.0], [78.0, 235.0], [80.0, 252.0], [81.0, 591.6666666666667], [82.0, 253.0], [83.0, 264.0], [85.0, 276.5], [86.0, 321.0], [87.0, 240.0], [84.0, 241.0], [92.0, 488.75000000000006], [93.0, 324.0], [95.0, 544.6666666666666], [97.0, 296.0], [98.0, 371.0], [101.0, 235.33333333333334], [100.0, 242.0], [104.0, 1031.0], [106.0, 3148.5], [108.0, 339.8], [110.0, 411.0], [109.0, 329.5], [111.0, 553.25], [115.0, 435.0], [114.0, 245.0], [117.0, 504.3333333333333], [120.0, 719.0], [122.0, 601.0], [123.0, 233.0], [125.0, 554.5714285714287], [126.0, 331.5], [127.0, 661.0], [124.0, 754.25], [130.0, 740.6666666666667], [132.0, 558.0], [134.0, 245.33333333333334], [128.0, 242.33333333333334], [137.0, 411.0], [141.0, 707.2], [142.0, 729.0], [139.0, 243.5], [138.0, 935.0], [144.0, 440.0], [146.0, 424.0], [148.0, 468.6], [149.0, 457.0], [150.0, 782.0], [151.0, 385.5], [147.0, 251.0], [152.0, 413.5], [153.0, 410.0], [154.0, 347.0], [157.0, 449.0], [159.0, 1098.0], [156.0, 275.0], [155.0, 270.75], [160.0, 391.5], [161.0, 440.0], [162.0, 345.6666666666667], [164.0, 370.0], [167.0, 1165.0], [165.0, 241.5], [163.0, 244.0], [171.0, 408.0], [172.0, 283.2], [170.0, 287.42857142857144], [173.0, 638.3333333333333], [174.0, 246.0], [168.0, 3359.0], [176.0, 454.0], [177.0, 1118.0], [178.0, 1333.0], [180.0, 368.0], [179.0, 428.0], [183.0, 436.0], [181.0, 278.5], [185.0, 446.3333333333333], [188.0, 422.5], [191.0, 408.6666666666667], [190.0, 388.0], [186.0, 712.5], [184.0, 345.0], [192.0, 710.8571428571429], [195.0, 270.0], [198.0, 776.5], [199.0, 944.1428571428572], [196.0, 1135.0], [194.0, 404.0], [193.0, 386.0], [200.0, 316.0], [201.0, 335.0], [206.0, 287.5], [207.0, 360.0], [205.0, 581.2], [203.0, 758.3333333333334], [213.0, 953.6666666666666], [217.0, 356.0], [218.0, 393.0], [219.0, 2358.5], [222.0, 434.6666666666667], [223.0, 1280.0], [221.0, 3996.0], [216.0, 352.0], [224.0, 422.0], [226.0, 331.4], [228.0, 449.0], [236.0, 1353.5], [239.0, 417.5], [238.0, 297.5], [234.0, 299.0], [242.0, 689.3333333333334], [243.0, 366.5], [247.0, 445.0], [246.0, 265.5], [245.0, 791.5], [244.0, 2357.0], [241.0, 293.0], [248.0, 338.5], [249.0, 1268.0], [254.0, 275.0], [253.0, 266.0], [250.0, 1109.0], [271.0, 728.0], [256.0, 401.6666666666667], [257.0, 411.0], [258.0, 266.3333333333333], [263.0, 477.8333333333333], [261.0, 255.0], [260.0, 259.0], [266.0, 783.0], [268.0, 421.0], [259.0, 261.4], [267.0, 405.0], [265.0, 442.5], [264.0, 470.0], [276.0, 451.3333333333333], [277.0, 446.5], [274.0, 1431.0], [1.0, 270.0]], "isOverall": false, "label": "GetBookingIds ", "isController": false}, {"data": [[155.18999999999974, 593.7274999999993]], "isOverall": false, "label": "GetBookingIds -Aggregated", "isController": false}, {"data": [[3.0, 1426.5], [4.0, 231.0], [5.0, 248.0], [7.0, 367.5], [8.0, 243.0], [9.0, 238.0], [10.0, 253.0], [12.0, 250.0], [13.0, 245.5], [14.0, 240.0], [18.0, 246.5], [20.0, 246.0], [28.0, 255.0], [30.0, 249.5], [32.0, 243.66666666666666], [34.0, 1707.6666666666665], [37.0, 553.0], [36.0, 238.0], [39.0, 1386.0], [38.0, 247.0], [41.0, 7889.0], [40.0, 253.0], [48.0, 243.0], [53.0, 257.0], [52.0, 1257.0], [54.0, 252.0], [58.0, 248.0], [61.0, 237.0], [63.0, 243.0], [62.0, 499.5], [66.0, 239.33333333333334], [65.0, 245.5], [70.0, 245.25], [71.0, 247.33333333333334], [68.0, 245.0], [73.0, 250.0], [74.0, 251.0], [75.0, 238.0], [72.0, 619.5], [79.0, 248.0], [77.0, 241.0], [80.0, 262.0], [83.0, 1166.0], [82.0, 1216.0], [86.0, 312.0], [87.0, 248.5], [85.0, 234.0], [88.0, 317.0], [89.0, 271.0], [90.0, 532.0], [91.0, 247.0], [92.0, 333.2], [93.0, 968.0], [94.0, 350.0], [95.0, 317.3333333333333], [98.0, 365.0], [99.0, 351.0], [96.0, 240.0], [101.0, 343.6666666666667], [103.0, 233.0], [104.0, 413.0], [105.0, 395.0], [107.0, 388.0], [110.0, 290.0], [111.0, 429.0], [109.0, 1544.5], [108.0, 254.0], [114.0, 411.0], [117.0, 3486.3333333333335], [119.0, 420.3333333333333], [118.0, 401.0], [120.0, 445.0], [122.0, 668.5], [123.0, 1169.0], [121.0, 259.0], [127.0, 503.0], [125.0, 251.5], [124.0, 752.5], [130.0, 312.2], [133.0, 304.3333333333333], [134.0, 628.0], [132.0, 244.0], [129.0, 235.0], [128.0, 242.75], [136.0, 410.0], [138.0, 387.0], [137.0, 414.0], [139.0, 2505.0], [140.0, 419.0], [141.0, 1197.0], [142.0, 1233.0], [143.0, 1035.0], [144.0, 425.0], [145.0, 461.0], [147.0, 368.0], [148.0, 417.0], [150.0, 1177.0], [151.0, 807.0], [149.0, 266.6666666666667], [146.0, 247.0], [152.0, 799.0], [153.0, 410.5], [157.0, 441.5], [158.0, 414.0], [154.0, 253.0], [161.0, 1273.6666666666667], [160.0, 625.5], [162.0, 451.0], [165.0, 375.0], [166.0, 1320.0], [169.0, 329.8], [171.0, 423.0], [170.0, 694.2857142857142], [173.0, 332.5], [174.0, 235.33333333333334], [172.0, 244.0], [168.0, 248.0], [176.0, 441.0], [177.0, 650.6666666666666], [179.0, 444.0], [181.0, 784.0], [180.0, 418.6666666666667], [182.0, 425.0], [183.0, 312.5], [185.0, 2623.0], [187.0, 1449.0], [188.0, 417.0], [191.0, 371.0], [184.0, 683.0], [192.0, 567.0], [196.0, 298.0], [199.0, 389.5], [198.0, 1191.0], [194.0, 395.0], [200.0, 1302.8], [205.0, 962.9999999999999], [203.0, 1063.75], [210.0, 1135.5], [213.0, 362.0], [214.0, 317.0], [215.0, 343.0], [212.0, 341.5], [211.0, 352.0], [209.0, 354.0], [217.0, 361.5], [218.0, 2155.0], [219.0, 420.0], [222.0, 1387.0], [221.0, 314.3333333333333], [216.0, 1416.0], [227.0, 422.0], [229.0, 899.5], [231.0, 923.5], [233.0, 444.0], [232.0, 385.5], [234.0, 1190.3333333333333], [237.0, 712.3333333333333], [239.0, 305.0], [236.0, 310.0], [242.0, 419.0], [244.0, 1607.5], [246.0, 388.0], [245.0, 270.0], [240.0, 293.0], [248.0, 375.25], [249.0, 404.0], [253.0, 442.0], [255.0, 1333.0], [254.0, 855.0], [250.0, 1456.5], [268.0, 1057.5], [258.0, 460.3333333333333], [259.0, 621.75], [260.0, 941.0], [262.0, 493.6666666666667], [263.0, 851.25], [264.0, 940.75], [271.0, 953.1666666666667], [267.0, 414.25], [266.0, 431.0], [274.0, 1494.0000000000002], [277.0, 445.0], [275.0, 441.5], [272.0, 415.0], [1.0, 949.0]], "isOverall": false, "label": "CreateBooking ", "isController": false}, {"data": [[157.99499999999998, 645.0474999999994]], "isOverall": false, "label": "CreateBooking -Aggregated", "isController": false}, {"data": [[2.0, 1085.0], [3.0, 250.0], [4.0, 467.0], [5.0, 251.0], [6.0, 742.0], [7.0, 240.0], [8.0, 245.0], [9.0, 242.0], [10.0, 257.0], [11.0, 253.0], [12.0, 242.0], [13.0, 255.0], [14.0, 241.0], [15.0, 248.0], [16.0, 1325.0], [17.0, 239.0], [18.0, 254.0], [19.0, 250.0], [20.0, 258.0], [21.0, 874.0], [22.0, 254.0], [23.0, 4097.0], [24.0, 545.0], [25.0, 263.0], [26.0, 246.0], [27.0, 2131.0], [28.0, 251.0], [29.0, 4853.0], [30.0, 259.0], [31.0, 240.0], [33.0, 246.0], [32.0, 237.0], [35.0, 2436.0], [34.0, 243.0], [37.0, 250.0], [36.0, 1522.0], [39.0, 259.0], [38.0, 248.0], [41.0, 261.0], [40.0, 247.0], [43.0, 1263.0], [42.0, 257.0], [45.0, 247.0], [44.0, 1179.0], [47.0, 1183.0], [46.0, 242.0], [49.0, 254.0], [48.0, 239.0], [51.0, 244.0], [50.0, 245.0], [53.0, 243.0], [52.0, 937.0], [54.0, 243.0], [57.0, 249.0], [56.0, 246.5], [59.0, 236.0], [58.0, 244.0], [61.0, 248.0], [60.0, 243.0], [63.0, 254.0], [62.0, 252.0], [67.0, 240.0], [66.0, 8312.0], [65.0, 249.0], [64.0, 1567.0], [71.0, 242.0], [70.0, 249.0], [69.0, 253.0], [68.0, 245.0], [75.0, 250.0], [74.0, 253.0], [73.0, 236.0], [72.0, 236.0], [79.0, 238.0], [78.0, 256.0], [77.0, 236.0], [76.0, 249.0], [83.0, 250.0], [82.0, 1228.0], [81.0, 245.0], [80.0, 240.0], [87.0, 1195.0], [86.0, 247.0], [85.0, 236.0], [84.0, 239.0], [91.0, 298.5], [90.0, 238.0], [89.0, 243.0], [88.0, 253.0], [93.0, 289.6666666666667], [92.0, 299.3333333333333], [95.0, 1166.0], [94.0, 254.0], [98.0, 1223.0], [97.0, 1171.0], [96.0, 258.0], [102.0, 329.5], [103.0, 244.0], [101.0, 1220.0], [100.0, 742.5], [106.0, 325.0], [107.0, 250.0], [105.0, 257.0], [104.0, 247.0], [108.0, 348.3333333333333], [111.0, 336.0], [110.0, 334.5], [109.0, 1087.0], [113.0, 627.0], [114.0, 329.5], [115.0, 260.0], [112.0, 1248.0], [118.0, 334.0], [119.0, 253.0], [117.0, 245.0], [116.0, 246.0], [120.0, 376.6666666666667], [121.0, 368.6666666666667], [122.0, 352.0], [123.0, 252.0], [127.0, 348.5], [126.0, 348.0], [125.0, 353.3333333333333], [124.0, 245.0], [130.0, 837.0], [132.0, 317.5], [133.0, 346.0], [135.0, 253.0], [134.0, 1205.0], [131.0, 256.0], [129.0, 244.0], [128.0, 1073.0], [137.0, 637.5], [136.0, 322.0], [138.0, 327.0], [141.0, 605.5], [140.0, 1131.5], [143.0, 257.0], [142.0, 249.0], [139.0, 1205.0], [148.0, 691.0], [149.0, 347.0], [151.0, 355.0], [150.0, 271.0], [147.0, 236.0], [146.0, 251.0], [145.0, 252.0], [144.0, 242.0], [152.0, 368.75], [153.0, 561.75], [159.0, 390.85714285714283], [157.0, 268.0], [156.0, 1031.0], [155.0, 256.0], [154.0, 1270.0], [161.0, 702.0], [160.0, 375.6666666666667], [162.0, 341.0], [167.0, 254.0], [166.0, 252.0], [165.0, 243.0], [164.0, 248.0], [163.0, 276.0], [170.0, 341.6666666666667], [169.0, 315.5], [172.0, 559.75], [171.0, 715.5], [173.0, 715.0], [175.0, 1199.0], [174.0, 235.0], [168.0, 248.0], [176.0, 344.5], [181.0, 1149.0], [180.0, 725.6], [182.0, 390.0], [183.0, 314.0], [179.0, 267.0], [178.0, 249.0], [177.0, 242.0], [184.0, 386.0], [185.0, 409.5], [189.0, 389.0], [188.0, 382.5], [191.0, 401.0], [190.0, 378.0], [187.0, 380.0], [186.0, 387.0], [192.0, 2555.0], [196.0, 351.5], [199.0, 297.25], [198.0, 394.0], [197.0, 396.0], [195.0, 408.0], [194.0, 395.0], [193.0, 383.0], [201.0, 417.3333333333333], [200.0, 315.6666666666667], [206.0, 334.5], [207.0, 359.0], [205.0, 418.0], [204.0, 1324.0], [203.0, 422.0], [202.0, 1415.0], [208.0, 357.0], [215.0, 357.0], [214.0, 344.0], [213.0, 332.0], [212.0, 356.0], [211.0, 372.0], [210.0, 376.0], [209.0, 367.0], [217.0, 1303.0], [220.0, 810.0], [219.0, 1210.8], [222.0, 657.3333333333334], [223.0, 308.0], [221.0, 1218.0], [218.0, 348.0], [216.0, 2486.0], [229.0, 579.25], [231.0, 314.0], [230.0, 323.0], [226.0, 303.0], [225.0, 1177.0], [224.0, 3312.0], [234.0, 723.3333333333334], [233.0, 388.0], [236.0, 401.0], [235.0, 864.0], [238.0, 784.5], [239.0, 315.0], [237.0, 318.0], [232.0, 1330.0], [240.0, 1203.5], [246.0, 629.6666666666666], [247.0, 285.0], [245.0, 1303.0], [244.0, 291.0], [243.0, 289.0], [242.0, 1303.0], [241.0, 288.0], [248.0, 357.0], [249.0, 833.0], [252.0, 588.0], [253.0, 847.5], [255.0, 368.5], [254.0, 1098.0], [250.0, 1183.0], [268.0, 939.5], [256.0, 385.0], [258.0, 384.3333333333333], [259.0, 1333.0], [257.0, 996.0], [262.0, 819.0], [261.0, 270.0], [260.0, 1253.0], [263.0, 313.0], [271.0, 448.0], [265.0, 1312.0], [264.0, 281.0], [270.0, 438.0], [269.0, 2021.0], [267.0, 414.0], [266.0, 439.0], [277.0, 1347.0], [276.0, 1533.0], [275.0, 1484.0], [274.0, 1233.0], [273.0, 428.0], [272.0, 429.0], [1.0, 272.0]], "isOverall": false, "label": "UpdateBooking ", "isController": false}, {"data": [[150.1625000000001, 584.7950000000001]], "isOverall": false, "label": "UpdateBooking -Aggregated", "isController": false}, {"data": [[3.0, 44243.5], [4.0, 36261.0], [5.0, 33623.0], [7.0, 26286.5], [8.0, 26016.0], [9.0, 25232.0], [11.0, 23945.0], [13.0, 21221.5], [14.0, 22883.5], [18.0, 19163.0], [20.0, 12537.0], [30.0, 12178.0], [32.0, 13342.0], [34.0, 13544.75], [36.0, 11789.0], [39.0, 13692.5], [40.0, 12243.0], [43.0, 8291.0], [54.0, 11827.0], [59.0, 1185.0], [60.0, 1341.6], [61.0, 6912.4], [63.0, 5175.666666666666], [66.0, 13255.0], [65.0, 9841.0], [70.0, 8918.714285714286], [71.0, 11423.0], [69.0, 13350.0], [73.0, 6857.0], [75.0, 8720.333333333334], [74.0, 13264.0], [76.0, 1646.0], [77.0, 1390.5], [78.0, 5041.0], [79.0, 967.0], [83.0, 13671.0], [82.0, 14516.0], [81.0, 11144.5], [80.0, 8441.0], [87.0, 1093.0], [85.0, 8010.0], [88.0, 3304.3333333333335], [91.0, 1737.75], [92.0, 2839.75], [93.0, 1288.5], [98.0, 1464.0], [99.0, 1520.5], [96.0, 8490.0], [100.0, 4136.5], [103.0, 6541.0], [101.0, 9814.5], [104.0, 1768.5], [105.0, 1298.0], [106.0, 1572.0], [108.0, 6168.2], [109.0, 1359.0], [110.0, 2151.0], [111.0, 9049.333333333334], [113.0, 1445.0], [114.0, 1880.0], [112.0, 8346.0], [118.0, 2992.0], [120.0, 2169.0], [123.0, 2290.0], [122.0, 9799.75], [125.0, 2931.0], [126.0, 3907.1666666666665], [127.0, 4379.5], [130.0, 2611.0], [133.0, 1717.0], [134.0, 5436.714285714285], [135.0, 6730.0], [132.0, 6104.0], [129.0, 9184.0], [128.0, 5890.666666666667], [137.0, 5614.25], [136.0, 1592.0], [138.0, 7255.5], [140.0, 5139.0], [143.0, 2499.0], [141.0, 7997.0], [146.0, 3676.0], [147.0, 2598.0], [148.0, 2112.5], [150.0, 2846.0], [152.0, 1933.0], [153.0, 2668.5], [155.0, 5431.0], [158.0, 2524.5], [159.0, 2294.25], [156.0, 4296.0], [161.0, 2140.5], [162.0, 6577.5], [165.0, 4519.0], [167.0, 5409.0], [166.0, 5007.0], [163.0, 5875.0], [160.0, 8150.5], [168.0, 1656.5], [170.0, 6084.833333333333], [169.0, 2138.0], [172.0, 3535.75], [171.0, 2671.0], [173.0, 4567.833333333334], [174.0, 8172.5], [180.0, 4250.5], [182.0, 4785.0], [183.0, 5346.0], [189.0, 4201.0], [191.0, 3291.0], [190.0, 3590.0], [186.0, 8501.0], [185.0, 3959.5], [184.0, 5310.0], [192.0, 4703.0], [195.0, 2258.0], [197.0, 4087.0], [198.0, 1594.0], [199.0, 3805.25], [196.0, 6282.0], [194.0, 4779.0], [200.0, 4071.0], [201.0, 3283.3333333333335], [203.0, 3842.0], [205.0, 5110.0], [207.0, 6135.0], [208.0, 3922.0], [213.0, 6252.666666666667], [212.0, 4551.5], [210.0, 6457.0], [209.0, 5717.0], [217.0, 3208.0], [218.0, 3377.0], [219.0, 3887.75], [220.0, 4554.333333333334], [221.0, 3598.5], [222.0, 1660.0], [223.0, 2489.0], [224.0, 5705.0], [226.0, 4376.0], [228.0, 2860.5], [231.0, 6725.0], [229.0, 3986.0], [225.0, 3119.0], [234.0, 4867.0], [236.0, 2021.5], [237.0, 5615.0], [238.0, 4839.285714285715], [239.0, 6777.0], [241.0, 4052.333333333333], [242.0, 3978.0], [246.0, 8611.0], [245.0, 5683.0], [244.0, 8774.0], [240.0, 4535.0], [249.0, 4842.0], [252.0, 1689.5], [253.0, 3788.75], [254.0, 6818.0], [255.0, 3879.0], [268.0, 2379.5], [256.0, 4679.0], [258.0, 5278.5], [259.0, 3512.5], [261.0, 6536.25], [262.0, 5323.0], [263.0, 4006.8333333333335], [264.0, 4700.166666666667], [265.0, 5311.666666666667], [271.0, 3808.5], [270.0, 5224.0], [267.0, 5700.0], [266.0, 5312.333333333333], [273.0, 5154.0], [275.0, 2642.6666666666665], [277.0, 2839.25], [276.0, 4440.0], [274.0, 4923.25], [272.0, 4739.5], [1.0, 79806.0]], "isOverall": false, "label": "login", "isController": false}, {"data": [[159.51499999999993, 6208.737499999998]], "isOverall": false, "label": "login-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 277.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 91.46666666666667, "minX": 1.72210056E12, "maxY": 23538.0, "series": [{"data": [[1.72210056E12, 23538.0], [1.72210062E12, 237.4]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72210056E12, 9055.2], [1.72210062E12, 91.46666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72210062E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 518.5, "minX": 1.72210056E12, "maxY": 51138.5, "series": [{"data": [[1.72210056E12, 588.0555555555549], [1.72210062E12, 1155.25]], "isOverall": false, "label": "GetBookingIds ", "isController": false}, {"data": [[1.72210056E12, 641.3787878787873], [1.72210062E12, 1008.25]], "isOverall": false, "label": "CreateBooking ", "isController": false}, {"data": [[1.72210056E12, 585.4646464646465], [1.72210062E12, 518.5]], "isOverall": false, "label": "UpdateBooking ", "isController": false}, {"data": [[1.72210056E12, 5754.901515151514], [1.72210062E12, 51138.5]], "isOverall": false, "label": "login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72210062E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 518.5, "minX": 1.72210056E12, "maxY": 51138.5, "series": [{"data": [[1.72210056E12, 588.0479797979798], [1.72210062E12, 1155.25]], "isOverall": false, "label": "GetBookingIds ", "isController": false}, {"data": [[1.72210056E12, 641.3712121212122], [1.72210062E12, 1008.25]], "isOverall": false, "label": "CreateBooking ", "isController": false}, {"data": [[1.72210056E12, 585.4545454545454], [1.72210062E12, 518.5]], "isOverall": false, "label": "UpdateBooking ", "isController": false}, {"data": [[1.72210056E12, 5754.886363636362], [1.72210062E12, 51138.5]], "isOverall": false, "label": "login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72210062E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72210056E12, "maxY": 50707.75, "series": [{"data": [[1.72210056E12, 0.0], [1.72210062E12, 0.0]], "isOverall": false, "label": "GetBookingIds ", "isController": false}, {"data": [[1.72210056E12, 0.0], [1.72210062E12, 169.75]], "isOverall": false, "label": "CreateBooking ", "isController": false}, {"data": [[1.72210056E12, 0.0], [1.72210062E12, 0.0]], "isOverall": false, "label": "UpdateBooking ", "isController": false}, {"data": [[1.72210056E12, 5117.888888888889], [1.72210062E12, 50707.75]], "isOverall": false, "label": "login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72210062E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 231.0, "minX": 1.72210056E12, "maxY": 79806.0, "series": [{"data": [[1.72210056E12, 33623.0], [1.72210062E12, 79806.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72210056E12, 233.0], [1.72210062E12, 231.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72210056E12, 5629.5], [1.72210062E12, 56339.200000000026]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72210056E12, 15876.35], [1.72210062E12, 79806.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72210056E12, 424.0], [1.72210062E12, 1017.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.72210056E12, 8006.75], [1.72210062E12, 79806.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72210062E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 244.0, "minX": 1.0, "maxY": 23965.0, "series": [{"data": [[2.0, 501.5], [3.0, 272.0], [57.0, 378.0], [56.0, 469.5], [67.0, 440.0], [66.0, 1465.0], [4.0, 244.0], [70.0, 1374.5], [74.0, 441.5], [77.0, 248.0], [5.0, 253.5], [88.0, 436.5], [94.0, 251.0], [6.0, 256.0], [107.0, 414.0], [7.0, 252.0], [119.0, 251.0], [128.0, 429.0], [133.0, 259.0], [142.0, 358.0], [9.0, 253.0], [10.0, 249.0], [1.0, 23965.0], [17.0, 256.0], [19.0, 1069.0], [28.0, 254.5], [29.0, 254.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 142.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 244.0, "minX": 1.0, "maxY": 23965.0, "series": [{"data": [[2.0, 501.5], [3.0, 272.0], [57.0, 378.0], [56.0, 469.5], [67.0, 440.0], [66.0, 1465.0], [4.0, 244.0], [70.0, 1374.5], [74.0, 441.5], [77.0, 248.0], [5.0, 253.5], [88.0, 436.5], [94.0, 251.0], [6.0, 256.0], [107.0, 414.0], [7.0, 252.0], [119.0, 251.0], [128.0, 429.0], [133.0, 259.0], [142.0, 358.0], [9.0, 253.0], [10.0, 249.0], [1.0, 23965.0], [17.0, 256.0], [19.0, 1069.0], [28.0, 254.5], [29.0, 254.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 142.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.72210056E12, "maxY": 26.466666666666665, "series": [{"data": [[1.72210056E12, 26.466666666666665], [1.72210062E12, 0.2]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72210062E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.26666666666666666, "minX": 1.72210056E12, "maxY": 26.4, "series": [{"data": [[1.72210056E12, 26.4], [1.72210062E12, 0.26666666666666666]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72210062E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.72210056E12, "maxY": 6.6, "series": [{"data": [[1.72210056E12, 6.6], [1.72210062E12, 0.06666666666666667]], "isOverall": false, "label": "GetBookingIds -success", "isController": false}, {"data": [[1.72210056E12, 6.6], [1.72210062E12, 0.06666666666666667]], "isOverall": false, "label": "UpdateBooking -success", "isController": false}, {"data": [[1.72210056E12, 6.6], [1.72210062E12, 0.06666666666666667]], "isOverall": false, "label": "login-success", "isController": false}, {"data": [[1.72210056E12, 6.6], [1.72210062E12, 0.06666666666666667]], "isOverall": false, "label": "CreateBooking -success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72210062E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.26666666666666666, "minX": 1.72210056E12, "maxY": 26.4, "series": [{"data": [[1.72210056E12, 26.4], [1.72210062E12, 0.26666666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72210062E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

