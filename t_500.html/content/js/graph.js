/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 229.0, "minX": 0.0, "maxY": 176186.0, "series": [{"data": [[0.0, 231.0], [0.1, 231.0], [0.2, 231.0], [0.3, 231.0], [0.4, 231.0], [0.5, 231.0], [0.6, 234.0], [0.7, 234.0], [0.8, 234.0], [0.9, 234.0], [1.0, 234.0], [1.1, 234.0], [1.2, 234.0], [1.3, 234.0], [1.4, 235.0], [1.5, 235.0], [1.6, 236.0], [1.7, 236.0], [1.8, 237.0], [1.9, 237.0], [2.0, 238.0], [2.1, 238.0], [2.2, 240.0], [2.3, 240.0], [2.4, 240.0], [2.5, 240.0], [2.6, 240.0], [2.7, 240.0], [2.8, 241.0], [2.9, 241.0], [3.0, 241.0], [3.1, 241.0], [3.2, 242.0], [3.3, 242.0], [3.4, 242.0], [3.5, 242.0], [3.6, 242.0], [3.7, 242.0], [3.8, 242.0], [3.9, 242.0], [4.0, 243.0], [4.1, 243.0], [4.2, 243.0], [4.3, 243.0], [4.4, 243.0], [4.5, 243.0], [4.6, 243.0], [4.7, 243.0], [4.8, 243.0], [4.9, 243.0], [5.0, 243.0], [5.1, 243.0], [5.2, 244.0], [5.3, 244.0], [5.4, 244.0], [5.5, 244.0], [5.6, 244.0], [5.7, 244.0], [5.8, 244.0], [5.9, 244.0], [6.0, 244.0], [6.1, 244.0], [6.2, 244.0], [6.3, 244.0], [6.4, 245.0], [6.5, 245.0], [6.6, 245.0], [6.7, 245.0], [6.8, 245.0], [6.9, 245.0], [7.0, 245.0], [7.1, 245.0], [7.2, 245.0], [7.3, 245.0], [7.4, 245.0], [7.5, 245.0], [7.6, 245.0], [7.7, 245.0], [7.8, 245.0], [7.9, 245.0], [8.0, 245.0], [8.1, 245.0], [8.2, 245.0], [8.3, 245.0], [8.4, 246.0], [8.5, 246.0], [8.6, 246.0], [8.7, 246.0], [8.8, 246.0], [8.9, 246.0], [9.0, 246.0], [9.1, 246.0], [9.2, 246.0], [9.3, 246.0], [9.4, 246.0], [9.5, 246.0], [9.6, 247.0], [9.7, 247.0], [9.8, 247.0], [9.9, 247.0], [10.0, 247.0], [10.1, 247.0], [10.2, 247.0], [10.3, 247.0], [10.4, 248.0], [10.5, 248.0], [10.6, 248.0], [10.7, 248.0], [10.8, 248.0], [10.9, 248.0], [11.0, 248.0], [11.1, 248.0], [11.2, 248.0], [11.3, 249.0], [11.4, 249.0], [11.5, 249.0], [11.6, 249.0], [11.7, 249.0], [11.8, 249.0], [11.9, 249.0], [12.0, 249.0], [12.1, 249.0], [12.2, 249.0], [12.3, 249.0], [12.4, 250.0], [12.5, 250.0], [12.6, 250.0], [12.7, 250.0], [12.8, 250.0], [12.9, 250.0], [13.0, 250.0], [13.1, 250.0], [13.2, 250.0], [13.3, 250.0], [13.4, 250.0], [13.5, 250.0], [13.6, 250.0], [13.7, 250.0], [13.8, 251.0], [13.9, 251.0], [14.0, 251.0], [14.1, 251.0], [14.2, 251.0], [14.3, 251.0], [14.4, 251.0], [14.5, 251.0], [14.6, 251.0], [14.7, 251.0], [14.8, 251.0], [14.9, 251.0], [15.0, 251.0], [15.1, 251.0], [15.2, 251.0], [15.3, 252.0], [15.4, 252.0], [15.5, 252.0], [15.6, 252.0], [15.7, 252.0], [15.8, 252.0], [15.9, 252.0], [16.0, 252.0], [16.1, 252.0], [16.2, 252.0], [16.3, 252.0], [16.4, 252.0], [16.5, 252.0], [16.6, 252.0], [16.7, 252.0], [16.8, 252.0], [16.9, 252.0], [17.0, 252.0], [17.1, 252.0], [17.2, 252.0], [17.3, 252.0], [17.4, 252.0], [17.5, 253.0], [17.6, 253.0], [17.7, 253.0], [17.8, 253.0], [17.9, 253.0], [18.0, 253.0], [18.1, 253.0], [18.2, 253.0], [18.3, 253.0], [18.4, 253.0], [18.5, 253.0], [18.6, 253.0], [18.7, 253.0], [18.8, 253.0], [18.9, 253.0], [19.0, 253.0], [19.1, 253.0], [19.2, 253.0], [19.3, 253.0], [19.4, 253.0], [19.5, 254.0], [19.6, 254.0], [19.7, 254.0], [19.8, 254.0], [19.9, 254.0], [20.0, 254.0], [20.1, 254.0], [20.2, 254.0], [20.3, 254.0], [20.4, 254.0], [20.5, 254.0], [20.6, 254.0], [20.7, 254.0], [20.8, 254.0], [20.9, 254.0], [21.0, 254.0], [21.1, 254.0], [21.2, 254.0], [21.3, 254.0], [21.4, 254.0], [21.5, 255.0], [21.6, 255.0], [21.7, 255.0], [21.8, 255.0], [21.9, 255.0], [22.0, 255.0], [22.1, 255.0], [22.2, 255.0], [22.3, 255.0], [22.4, 255.0], [22.5, 255.0], [22.6, 256.0], [22.7, 256.0], [22.8, 256.0], [22.9, 256.0], [23.0, 256.0], [23.1, 256.0], [23.2, 256.0], [23.3, 256.0], [23.4, 256.0], [23.5, 256.0], [23.6, 256.0], [23.7, 256.0], [23.8, 256.0], [23.9, 256.0], [24.0, 257.0], [24.1, 257.0], [24.2, 257.0], [24.3, 257.0], [24.4, 257.0], [24.5, 257.0], [24.6, 257.0], [24.7, 257.0], [24.8, 257.0], [24.9, 257.0], [25.0, 257.0], [25.1, 257.0], [25.2, 257.0], [25.3, 257.0], [25.4, 257.0], [25.5, 257.0], [25.6, 257.0], [25.7, 257.0], [25.8, 258.0], [25.9, 258.0], [26.0, 258.0], [26.1, 258.0], [26.2, 258.0], [26.3, 258.0], [26.4, 258.0], [26.5, 258.0], [26.6, 259.0], [26.7, 259.0], [26.8, 259.0], [26.9, 259.0], [27.0, 259.0], [27.1, 259.0], [27.2, 259.0], [27.3, 259.0], [27.4, 259.0], [27.5, 259.0], [27.6, 259.0], [27.7, 259.0], [27.8, 259.0], [27.9, 259.0], [28.0, 259.0], [28.1, 259.0], [28.2, 259.0], [28.3, 259.0], [28.4, 259.0], [28.5, 259.0], [28.6, 259.0], [28.7, 259.0], [28.8, 260.0], [28.9, 260.0], [29.0, 260.0], [29.1, 260.0], [29.2, 260.0], [29.3, 260.0], [29.4, 260.0], [29.5, 260.0], [29.6, 260.0], [29.7, 260.0], [29.8, 260.0], [29.9, 260.0], [30.0, 260.0], [30.1, 260.0], [30.2, 261.0], [30.3, 261.0], [30.4, 261.0], [30.5, 261.0], [30.6, 261.0], [30.7, 261.0], [30.8, 261.0], [30.9, 261.0], [31.0, 261.0], [31.1, 261.0], [31.2, 261.0], [31.3, 261.0], [31.4, 261.0], [31.5, 261.0], [31.6, 261.0], [31.7, 261.0], [31.8, 261.0], [31.9, 261.0], [32.0, 261.0], [32.1, 261.0], [32.2, 261.0], [32.3, 261.0], [32.4, 261.0], [32.5, 261.0], [32.6, 261.0], [32.7, 261.0], [32.8, 262.0], [32.9, 262.0], [33.0, 262.0], [33.1, 262.0], [33.2, 262.0], [33.3, 262.0], [33.4, 262.0], [33.5, 262.0], [33.6, 262.0], [33.7, 262.0], [33.8, 262.0], [33.9, 262.0], [34.0, 262.0], [34.1, 262.0], [34.2, 263.0], [34.3, 263.0], [34.4, 263.0], [34.5, 263.0], [34.6, 263.0], [34.7, 263.0], [34.8, 263.0], [34.9, 263.0], [35.0, 263.0], [35.1, 263.0], [35.2, 263.0], [35.3, 263.0], [35.4, 264.0], [35.5, 264.0], [35.6, 264.0], [35.7, 264.0], [35.8, 264.0], [35.9, 264.0], [36.0, 265.0], [36.1, 265.0], [36.2, 265.0], [36.3, 265.0], [36.4, 265.0], [36.5, 265.0], [36.6, 265.0], [36.7, 265.0], [36.8, 266.0], [36.9, 266.0], [37.0, 266.0], [37.1, 266.0], [37.2, 267.0], [37.3, 267.0], [37.4, 267.0], [37.5, 267.0], [37.6, 267.0], [37.7, 267.0], [37.8, 268.0], [37.9, 268.0], [38.0, 268.0], [38.1, 268.0], [38.2, 268.0], [38.3, 268.0], [38.4, 268.0], [38.5, 268.0], [38.6, 268.0], [38.7, 268.0], [38.8, 269.0], [38.9, 269.0], [39.0, 269.0], [39.1, 269.0], [39.2, 269.0], [39.3, 269.0], [39.4, 269.0], [39.5, 269.0], [39.6, 269.0], [39.7, 269.0], [39.8, 270.0], [39.9, 270.0], [40.0, 270.0], [40.1, 270.0], [40.2, 270.0], [40.3, 270.0], [40.4, 273.0], [40.5, 273.0], [40.6, 273.0], [40.7, 273.0], [40.8, 274.0], [40.9, 274.0], [41.0, 275.0], [41.1, 275.0], [41.2, 282.0], [41.3, 282.0], [41.4, 282.0], [41.5, 284.0], [41.6, 284.0], [41.7, 293.0], [41.8, 293.0], [41.9, 297.0], [42.0, 297.0], [42.1, 297.0], [42.2, 297.0], [42.3, 299.0], [42.4, 299.0], [42.5, 299.0], [42.6, 299.0], [42.7, 301.0], [42.8, 301.0], [42.9, 303.0], [43.0, 303.0], [43.1, 321.0], [43.2, 321.0], [43.3, 322.0], [43.4, 322.0], [43.5, 325.0], [43.6, 325.0], [43.7, 331.0], [43.8, 331.0], [43.9, 334.0], [44.0, 334.0], [44.1, 335.0], [44.2, 335.0], [44.3, 337.0], [44.4, 337.0], [44.5, 339.0], [44.6, 339.0], [44.7, 339.0], [44.8, 339.0], [44.9, 341.0], [45.0, 341.0], [45.1, 346.0], [45.2, 346.0], [45.3, 350.0], [45.4, 350.0], [45.5, 350.0], [45.6, 350.0], [45.7, 353.0], [45.8, 353.0], [45.9, 354.0], [46.0, 354.0], [46.1, 357.0], [46.2, 357.0], [46.3, 360.0], [46.4, 360.0], [46.5, 363.0], [46.6, 363.0], [46.7, 373.0], [46.8, 373.0], [46.9, 379.0], [47.0, 379.0], [47.1, 380.0], [47.2, 380.0], [47.3, 383.0], [47.4, 383.0], [47.5, 384.0], [47.6, 384.0], [47.7, 388.0], [47.8, 388.0], [47.9, 393.0], [48.0, 393.0], [48.1, 393.0], [48.2, 393.0], [48.3, 395.0], [48.4, 395.0], [48.5, 396.0], [48.6, 396.0], [48.7, 397.0], [48.8, 397.0], [48.9, 403.0], [49.0, 403.0], [49.1, 405.0], [49.2, 405.0], [49.3, 406.0], [49.4, 406.0], [49.5, 407.0], [49.6, 407.0], [49.7, 408.0], [49.8, 408.0], [49.9, 413.0], [50.0, 413.0], [50.1, 415.0], [50.2, 415.0], [50.3, 415.0], [50.4, 415.0], [50.5, 415.0], [50.6, 415.0], [50.7, 415.0], [50.8, 415.0], [50.9, 416.0], [51.0, 416.0], [51.1, 416.0], [51.2, 416.0], [51.3, 417.0], [51.4, 417.0], [51.5, 418.0], [51.6, 418.0], [51.7, 418.0], [51.8, 418.0], [51.9, 419.0], [52.0, 419.0], [52.1, 420.0], [52.2, 420.0], [52.3, 420.0], [52.4, 420.0], [52.5, 421.0], [52.6, 421.0], [52.7, 421.0], [52.8, 421.0], [52.9, 422.0], [53.0, 422.0], [53.1, 422.0], [53.2, 422.0], [53.3, 423.0], [53.4, 423.0], [53.5, 423.0], [53.6, 423.0], [53.7, 424.0], [53.8, 424.0], [53.9, 424.0], [54.0, 424.0], [54.1, 425.0], [54.2, 425.0], [54.3, 425.0], [54.4, 425.0], [54.5, 426.0], [54.6, 426.0], [54.7, 426.0], [54.8, 426.0], [54.9, 427.0], [55.0, 427.0], [55.1, 427.0], [55.2, 427.0], [55.3, 428.0], [55.4, 428.0], [55.5, 429.0], [55.6, 429.0], [55.7, 430.0], [55.8, 430.0], [55.9, 431.0], [56.0, 431.0], [56.1, 432.0], [56.2, 432.0], [56.3, 432.0], [56.4, 432.0], [56.5, 432.0], [56.6, 432.0], [56.7, 433.0], [56.8, 433.0], [56.9, 433.0], [57.0, 433.0], [57.1, 434.0], [57.2, 434.0], [57.3, 434.0], [57.4, 434.0], [57.5, 434.0], [57.6, 434.0], [57.7, 435.0], [57.8, 435.0], [57.9, 435.0], [58.0, 435.0], [58.1, 435.0], [58.2, 435.0], [58.3, 435.0], [58.4, 435.0], [58.5, 436.0], [58.6, 436.0], [58.7, 436.0], [58.8, 436.0], [58.9, 436.0], [59.0, 436.0], [59.1, 436.0], [59.2, 436.0], [59.3, 437.0], [59.4, 437.0], [59.5, 437.0], [59.6, 437.0], [59.7, 437.0], [59.8, 437.0], [59.9, 439.0], [60.0, 439.0], [60.1, 440.0], [60.2, 440.0], [60.3, 441.0], [60.4, 441.0], [60.5, 441.0], [60.6, 441.0], [60.7, 442.0], [60.8, 442.0], [60.9, 442.0], [61.0, 442.0], [61.1, 442.0], [61.2, 442.0], [61.3, 442.0], [61.4, 442.0], [61.5, 442.0], [61.6, 442.0], [61.7, 442.0], [61.8, 442.0], [61.9, 442.0], [62.0, 442.0], [62.1, 442.0], [62.2, 442.0], [62.3, 443.0], [62.4, 443.0], [62.5, 443.0], [62.6, 443.0], [62.7, 444.0], [62.8, 444.0], [62.9, 444.0], [63.0, 444.0], [63.1, 444.0], [63.2, 444.0], [63.3, 444.0], [63.4, 444.0], [63.5, 445.0], [63.6, 445.0], [63.7, 445.0], [63.8, 445.0], [63.9, 446.0], [64.0, 446.0], [64.1, 446.0], [64.2, 446.0], [64.3, 447.0], [64.4, 447.0], [64.5, 447.0], [64.6, 447.0], [64.7, 448.0], [64.8, 448.0], [64.9, 448.0], [65.0, 448.0], [65.1, 448.0], [65.2, 448.0], [65.3, 448.0], [65.4, 448.0], [65.5, 448.0], [65.6, 448.0], [65.7, 449.0], [65.8, 449.0], [65.9, 449.0], [66.0, 449.0], [66.1, 449.0], [66.2, 449.0], [66.3, 449.0], [66.4, 449.0], [66.5, 449.0], [66.6, 449.0], [66.7, 449.0], [66.8, 449.0], [66.9, 450.0], [67.0, 450.0], [67.1, 450.0], [67.2, 450.0], [67.3, 451.0], [67.4, 451.0], [67.5, 451.0], [67.6, 451.0], [67.7, 452.0], [67.8, 452.0], [67.9, 452.0], [68.0, 452.0], [68.1, 452.0], [68.2, 452.0], [68.3, 452.0], [68.4, 452.0], [68.5, 453.0], [68.6, 453.0], [68.7, 453.0], [68.8, 453.0], [68.9, 454.0], [69.0, 454.0], [69.1, 454.0], [69.2, 454.0], [69.3, 454.0], [69.4, 454.0], [69.5, 455.0], [69.6, 455.0], [69.7, 455.0], [69.8, 455.0], [69.9, 455.0], [70.0, 455.0], [70.1, 456.0], [70.2, 456.0], [70.3, 457.0], [70.4, 457.0], [70.5, 457.0], [70.6, 457.0], [70.7, 458.0], [70.8, 458.0], [70.9, 458.0], [71.0, 458.0], [71.1, 458.0], [71.2, 458.0], [71.3, 458.0], [71.4, 458.0], [71.5, 459.0], [71.6, 459.0], [71.7, 459.0], [71.8, 459.0], [71.9, 459.0], [72.0, 459.0], [72.1, 459.0], [72.2, 459.0], [72.3, 459.0], [72.4, 459.0], [72.5, 461.0], [72.6, 461.0], [72.7, 463.0], [72.8, 463.0], [72.9, 463.0], [73.0, 463.0], [73.1, 464.0], [73.2, 464.0], [73.3, 464.0], [73.4, 464.0], [73.5, 464.0], [73.6, 464.0], [73.7, 465.0], [73.8, 465.0], [73.9, 466.0], [74.0, 466.0], [74.1, 466.0], [74.2, 466.0], [74.3, 466.0], [74.4, 466.0], [74.5, 477.0], [74.6, 477.0], [74.7, 483.0], [74.8, 483.0], [74.9, 490.0], [75.0, 490.0], [75.1, 500.0], [75.2, 500.0], [75.3, 511.0], [75.4, 511.0], [75.5, 511.0], [75.6, 511.0], [75.7, 523.0], [75.8, 523.0], [75.9, 557.0], [76.0, 557.0], [76.1, 584.0], [76.2, 584.0], [76.3, 585.0], [76.4, 585.0], [76.5, 741.0], [76.6, 741.0], [76.7, 745.0], [76.8, 745.0], [76.9, 748.0], [77.0, 748.0], [77.1, 934.0], [77.2, 934.0], [77.3, 984.0], [77.4, 984.0], [77.5, 1060.0], [77.6, 1060.0], [77.7, 1093.0], [77.8, 1093.0], [77.9, 1111.0], [78.0, 1111.0], [78.1, 1136.0], [78.2, 1136.0], [78.3, 1156.0], [78.4, 1156.0], [78.5, 1179.0], [78.6, 1179.0], [78.7, 1234.0], [78.8, 1234.0], [78.9, 1243.0], [79.0, 1243.0], [79.1, 1244.0], [79.2, 1244.0], [79.3, 1250.0], [79.4, 1250.0], [79.5, 1250.0], [79.6, 1250.0], [79.7, 1254.0], [79.8, 1254.0], [79.9, 1254.0], [80.0, 1254.0], [80.1, 1265.0], [80.2, 1265.0], [80.3, 1266.0], [80.4, 1266.0], [80.5, 1269.0], [80.6, 1269.0], [80.7, 1285.0], [80.8, 1285.0], [80.9, 1288.0], [81.0, 1288.0], [81.1, 1295.0], [81.2, 1295.0], [81.3, 1295.0], [81.4, 1295.0], [81.5, 1300.0], [81.6, 1300.0], [81.7, 1302.0], [81.8, 1302.0], [81.9, 1303.0], [82.0, 1303.0], [82.1, 1304.0], [82.2, 1304.0], [82.3, 1304.0], [82.4, 1304.0], [82.5, 1312.0], [82.6, 1312.0], [82.7, 1317.0], [82.8, 1317.0], [82.9, 1319.0], [83.0, 1319.0], [83.1, 1319.0], [83.2, 1319.0], [83.3, 1323.0], [83.4, 1323.0], [83.5, 1332.0], [83.6, 1332.0], [83.7, 1348.0], [83.8, 1348.0], [83.9, 1357.0], [84.0, 1357.0], [84.1, 1358.0], [84.2, 1358.0], [84.3, 1371.0], [84.4, 1371.0], [84.5, 1375.0], [84.6, 1375.0], [84.7, 1376.0], [84.8, 1376.0], [84.9, 1381.0], [85.0, 1381.0], [85.1, 1389.0], [85.2, 1389.0], [85.3, 1396.0], [85.4, 1396.0], [85.5, 1421.0], [85.6, 1421.0], [85.7, 1422.0], [85.8, 1422.0], [85.9, 1422.0], [86.0, 1422.0], [86.1, 1424.0], [86.2, 1424.0], [86.3, 1426.0], [86.4, 1426.0], [86.5, 1429.0], [86.6, 1429.0], [86.7, 1433.0], [86.8, 1433.0], [86.9, 1434.0], [87.0, 1434.0], [87.1, 1443.0], [87.2, 1443.0], [87.3, 1448.0], [87.4, 1448.0], [87.5, 1457.0], [87.6, 1457.0], [87.7, 1457.0], [87.8, 1457.0], [87.9, 1464.0], [88.0, 1464.0], [88.1, 1468.0], [88.2, 1468.0], [88.3, 1469.0], [88.4, 1469.0], [88.5, 1482.0], [88.6, 1482.0], [88.7, 1482.0], [88.8, 1482.0], [88.9, 1484.0], [89.0, 1484.0], [89.1, 1485.0], [89.2, 1485.0], [89.3, 1503.0], [89.4, 1503.0], [89.5, 1514.0], [89.6, 1514.0], [89.7, 1514.0], [89.8, 1514.0], [89.9, 1516.0], [90.0, 1516.0], [90.1, 1520.0], [90.2, 1520.0], [90.3, 1524.0], [90.4, 1524.0], [90.5, 1535.0], [90.6, 1535.0], [90.7, 1550.0], [90.8, 1550.0], [90.9, 1550.0], [91.0, 1550.0], [91.1, 1556.0], [91.2, 1556.0], [91.3, 1565.0], [91.4, 1565.0], [91.5, 1570.0], [91.6, 1570.0], [91.7, 1579.0], [91.8, 1579.0], [91.9, 1902.0], [92.0, 1902.0], [92.1, 1922.0], [92.2, 1922.0], [92.3, 2094.0], [92.4, 2094.0], [92.5, 2159.0], [92.6, 2159.0], [92.7, 2162.0], [92.8, 2162.0], [92.9, 2227.0], [93.0, 2227.0], [93.1, 2414.0], [93.2, 2414.0], [93.3, 2424.0], [93.4, 2424.0], [93.5, 2433.0], [93.6, 2433.0], [93.7, 2484.0], [93.8, 2484.0], [93.9, 2498.0], [94.0, 2498.0], [94.1, 2513.0], [94.2, 2513.0], [94.3, 2513.0], [94.4, 2513.0], [94.5, 2598.0], [94.6, 2598.0], [94.7, 2620.0], [94.8, 2620.0], [94.9, 2628.0], [95.0, 2628.0], [95.1, 2641.0], [95.2, 2641.0], [95.3, 2676.0], [95.4, 2676.0], [95.5, 2735.0], [95.6, 2735.0], [95.7, 2841.0], [95.8, 2841.0], [95.9, 2891.0], [96.0, 2891.0], [96.1, 3045.0], [96.2, 3045.0], [96.3, 3653.0], [96.4, 3653.0], [96.5, 3859.0], [96.6, 3859.0], [96.7, 3913.0], [96.8, 3913.0], [96.9, 4091.0], [97.0, 4091.0], [97.1, 4272.0], [97.2, 4272.0], [97.3, 4367.0], [97.4, 4367.0], [97.5, 5218.0], [97.6, 5218.0], [97.7, 5281.0], [97.8, 5281.0], [97.9, 5379.0], [98.0, 5379.0], [98.1, 7833.0], [98.2, 7833.0], [98.3, 8092.0], [98.4, 8092.0], [98.5, 8427.0], [98.6, 8427.0], [98.7, 8512.0], [98.8, 8512.0], [98.9, 8688.0], [99.0, 8688.0], [99.1, 9080.0], [99.2, 9080.0], [99.3, 10456.0], [99.4, 10456.0], [99.5, 13834.0], [99.6, 13834.0], [99.7, 15213.0], [99.8, 15213.0], [99.9, 16897.0], [100.0, 16897.0]], "isOverall": false, "label": "GetBookingIds ", "isController": false}, {"data": [[0.0, 230.0], [0.1, 230.0], [0.2, 234.0], [0.3, 234.0], [0.4, 234.0], [0.5, 234.0], [0.6, 234.0], [0.7, 238.0], [0.8, 238.0], [0.9, 238.0], [1.0, 240.0], [1.1, 240.0], [1.2, 240.0], [1.3, 240.0], [1.4, 240.0], [1.5, 240.0], [1.6, 241.0], [1.7, 241.0], [1.8, 241.0], [1.9, 241.0], [2.0, 242.0], [2.1, 242.0], [2.2, 242.0], [2.3, 242.0], [2.4, 242.0], [2.5, 242.0], [2.6, 243.0], [2.7, 243.0], [2.8, 243.0], [2.9, 243.0], [3.0, 243.0], [3.1, 243.0], [3.2, 244.0], [3.3, 244.0], [3.4, 244.0], [3.5, 244.0], [3.6, 244.0], [3.7, 244.0], [3.8, 244.0], [3.9, 244.0], [4.0, 245.0], [4.1, 245.0], [4.2, 245.0], [4.3, 245.0], [4.4, 245.0], [4.5, 245.0], [4.6, 245.0], [4.7, 245.0], [4.8, 245.0], [4.9, 245.0], [5.0, 245.0], [5.1, 245.0], [5.2, 246.0], [5.3, 246.0], [5.4, 246.0], [5.5, 246.0], [5.6, 246.0], [5.7, 246.0], [5.8, 247.0], [5.9, 247.0], [6.0, 247.0], [6.1, 247.0], [6.2, 247.0], [6.3, 247.0], [6.4, 247.0], [6.5, 247.0], [6.6, 247.0], [6.7, 247.0], [6.8, 247.0], [6.9, 247.0], [7.0, 247.0], [7.1, 247.0], [7.2, 248.0], [7.3, 248.0], [7.4, 248.0], [7.5, 248.0], [7.6, 248.0], [7.7, 248.0], [7.8, 248.0], [7.9, 248.0], [8.0, 248.0], [8.1, 248.0], [8.2, 248.0], [8.3, 248.0], [8.4, 248.0], [8.5, 248.0], [8.6, 248.0], [8.7, 248.0], [8.8, 248.0], [8.9, 248.0], [9.0, 248.0], [9.1, 248.0], [9.2, 249.0], [9.3, 249.0], [9.4, 249.0], [9.5, 249.0], [9.6, 249.0], [9.7, 249.0], [9.8, 249.0], [9.9, 249.0], [10.0, 249.0], [10.1, 249.0], [10.2, 249.0], [10.3, 249.0], [10.4, 249.0], [10.5, 249.0], [10.6, 249.0], [10.7, 249.0], [10.8, 249.0], [10.9, 249.0], [11.0, 250.0], [11.1, 250.0], [11.2, 250.0], [11.3, 250.0], [11.4, 251.0], [11.5, 251.0], [11.6, 251.0], [11.7, 251.0], [11.8, 251.0], [11.9, 251.0], [12.0, 251.0], [12.1, 251.0], [12.2, 251.0], [12.3, 251.0], [12.4, 251.0], [12.5, 251.0], [12.6, 251.0], [12.7, 251.0], [12.8, 251.0], [12.9, 251.0], [13.0, 251.0], [13.1, 251.0], [13.2, 251.0], [13.3, 252.0], [13.4, 252.0], [13.5, 252.0], [13.6, 252.0], [13.7, 252.0], [13.8, 252.0], [13.9, 252.0], [14.0, 252.0], [14.1, 253.0], [14.2, 253.0], [14.3, 253.0], [14.4, 253.0], [14.5, 253.0], [14.6, 253.0], [14.7, 253.0], [14.8, 253.0], [14.9, 253.0], [15.0, 253.0], [15.1, 253.0], [15.2, 253.0], [15.3, 253.0], [15.4, 253.0], [15.5, 254.0], [15.6, 254.0], [15.7, 254.0], [15.8, 254.0], [15.9, 254.0], [16.0, 254.0], [16.1, 254.0], [16.2, 254.0], [16.3, 254.0], [16.4, 254.0], [16.5, 254.0], [16.6, 254.0], [16.7, 254.0], [16.8, 255.0], [16.9, 255.0], [17.0, 255.0], [17.1, 255.0], [17.2, 255.0], [17.3, 255.0], [17.4, 255.0], [17.5, 255.0], [17.6, 255.0], [17.7, 255.0], [17.8, 255.0], [17.9, 255.0], [18.0, 255.0], [18.1, 255.0], [18.2, 256.0], [18.3, 256.0], [18.4, 256.0], [18.5, 256.0], [18.6, 256.0], [18.7, 256.0], [18.8, 256.0], [18.9, 256.0], [19.0, 256.0], [19.1, 256.0], [19.2, 256.0], [19.3, 256.0], [19.4, 256.0], [19.5, 256.0], [19.6, 256.0], [19.7, 256.0], [19.8, 256.0], [19.9, 256.0], [20.0, 256.0], [20.1, 256.0], [20.2, 256.0], [20.3, 256.0], [20.4, 256.0], [20.5, 256.0], [20.6, 257.0], [20.7, 257.0], [20.8, 257.0], [20.9, 257.0], [21.0, 257.0], [21.1, 257.0], [21.2, 257.0], [21.3, 257.0], [21.4, 257.0], [21.5, 257.0], [21.6, 257.0], [21.7, 257.0], [21.8, 257.0], [21.9, 257.0], [22.0, 257.0], [22.1, 257.0], [22.2, 257.0], [22.3, 257.0], [22.4, 257.0], [22.5, 257.0], [22.6, 258.0], [22.7, 258.0], [22.8, 258.0], [22.9, 258.0], [23.0, 258.0], [23.1, 258.0], [23.2, 258.0], [23.3, 258.0], [23.4, 258.0], [23.5, 258.0], [23.6, 258.0], [23.7, 258.0], [23.8, 259.0], [23.9, 259.0], [24.0, 259.0], [24.1, 259.0], [24.2, 259.0], [24.3, 259.0], [24.4, 259.0], [24.5, 259.0], [24.6, 259.0], [24.7, 259.0], [24.8, 259.0], [24.9, 259.0], [25.0, 260.0], [25.1, 260.0], [25.2, 260.0], [25.3, 260.0], [25.4, 260.0], [25.5, 260.0], [25.6, 260.0], [25.7, 260.0], [25.8, 260.0], [25.9, 260.0], [26.0, 260.0], [26.1, 260.0], [26.2, 260.0], [26.3, 260.0], [26.4, 260.0], [26.5, 260.0], [26.6, 260.0], [26.7, 260.0], [26.8, 261.0], [26.9, 261.0], [27.0, 261.0], [27.1, 261.0], [27.2, 261.0], [27.3, 261.0], [27.4, 261.0], [27.5, 261.0], [27.6, 261.0], [27.7, 261.0], [27.8, 261.0], [27.9, 261.0], [28.0, 261.0], [28.1, 261.0], [28.2, 261.0], [28.3, 261.0], [28.4, 262.0], [28.5, 262.0], [28.6, 262.0], [28.7, 262.0], [28.8, 262.0], [28.9, 262.0], [29.0, 262.0], [29.1, 262.0], [29.2, 262.0], [29.3, 262.0], [29.4, 263.0], [29.5, 263.0], [29.6, 263.0], [29.7, 263.0], [29.8, 263.0], [29.9, 263.0], [30.0, 263.0], [30.1, 263.0], [30.2, 263.0], [30.3, 263.0], [30.4, 264.0], [30.5, 264.0], [30.6, 264.0], [30.7, 264.0], [30.8, 264.0], [30.9, 264.0], [31.0, 265.0], [31.1, 265.0], [31.2, 265.0], [31.3, 265.0], [31.4, 265.0], [31.5, 265.0], [31.6, 266.0], [31.7, 266.0], [31.8, 266.0], [31.9, 266.0], [32.0, 267.0], [32.1, 267.0], [32.2, 267.0], [32.3, 267.0], [32.4, 267.0], [32.5, 267.0], [32.6, 267.0], [32.7, 267.0], [32.8, 268.0], [32.9, 268.0], [33.0, 268.0], [33.1, 268.0], [33.2, 269.0], [33.3, 269.0], [33.4, 269.0], [33.5, 269.0], [33.6, 269.0], [33.7, 269.0], [33.8, 270.0], [33.9, 270.0], [34.0, 270.0], [34.1, 270.0], [34.2, 270.0], [34.3, 270.0], [34.4, 271.0], [34.5, 271.0], [34.6, 281.0], [34.7, 281.0], [34.8, 281.0], [34.9, 284.0], [35.0, 284.0], [35.1, 285.0], [35.2, 285.0], [35.3, 289.0], [35.4, 289.0], [35.5, 290.0], [35.6, 290.0], [35.7, 300.0], [35.8, 300.0], [35.9, 300.0], [36.0, 300.0], [36.1, 300.0], [36.2, 300.0], [36.3, 312.0], [36.4, 312.0], [36.5, 317.0], [36.6, 317.0], [36.7, 318.0], [36.8, 318.0], [36.9, 319.0], [37.0, 319.0], [37.1, 319.0], [37.2, 319.0], [37.3, 323.0], [37.4, 323.0], [37.5, 323.0], [37.6, 323.0], [37.7, 325.0], [37.8, 325.0], [37.9, 325.0], [38.0, 325.0], [38.1, 330.0], [38.2, 330.0], [38.3, 331.0], [38.4, 331.0], [38.5, 333.0], [38.6, 333.0], [38.7, 336.0], [38.8, 336.0], [38.9, 337.0], [39.0, 337.0], [39.1, 339.0], [39.2, 339.0], [39.3, 340.0], [39.4, 340.0], [39.5, 340.0], [39.6, 340.0], [39.7, 343.0], [39.8, 343.0], [39.9, 345.0], [40.0, 345.0], [40.1, 348.0], [40.2, 348.0], [40.3, 349.0], [40.4, 349.0], [40.5, 351.0], [40.6, 351.0], [40.7, 353.0], [40.8, 353.0], [40.9, 354.0], [41.0, 354.0], [41.1, 356.0], [41.2, 356.0], [41.3, 357.0], [41.4, 357.0], [41.5, 357.0], [41.6, 357.0], [41.7, 358.0], [41.8, 358.0], [41.9, 358.0], [42.0, 358.0], [42.1, 358.0], [42.2, 358.0], [42.3, 359.0], [42.4, 359.0], [42.5, 360.0], [42.6, 360.0], [42.7, 363.0], [42.8, 363.0], [42.9, 363.0], [43.0, 363.0], [43.1, 365.0], [43.2, 365.0], [43.3, 366.0], [43.4, 366.0], [43.5, 366.0], [43.6, 366.0], [43.7, 367.0], [43.8, 367.0], [43.9, 367.0], [44.0, 367.0], [44.1, 369.0], [44.2, 369.0], [44.3, 378.0], [44.4, 378.0], [44.5, 380.0], [44.6, 380.0], [44.7, 381.0], [44.8, 381.0], [44.9, 381.0], [45.0, 381.0], [45.1, 387.0], [45.2, 387.0], [45.3, 391.0], [45.4, 391.0], [45.5, 394.0], [45.6, 394.0], [45.7, 397.0], [45.8, 397.0], [45.9, 399.0], [46.0, 399.0], [46.1, 401.0], [46.2, 401.0], [46.3, 404.0], [46.4, 404.0], [46.5, 409.0], [46.6, 409.0], [46.7, 410.0], [46.8, 410.0], [46.9, 410.0], [47.0, 410.0], [47.1, 411.0], [47.2, 411.0], [47.3, 411.0], [47.4, 411.0], [47.5, 412.0], [47.6, 412.0], [47.7, 413.0], [47.8, 413.0], [47.9, 413.0], [48.0, 413.0], [48.1, 413.0], [48.2, 413.0], [48.3, 414.0], [48.4, 414.0], [48.5, 417.0], [48.6, 417.0], [48.7, 418.0], [48.8, 418.0], [48.9, 419.0], [49.0, 419.0], [49.1, 421.0], [49.2, 421.0], [49.3, 422.0], [49.4, 422.0], [49.5, 422.0], [49.6, 422.0], [49.7, 423.0], [49.8, 423.0], [49.9, 425.0], [50.0, 425.0], [50.1, 425.0], [50.2, 425.0], [50.3, 425.0], [50.4, 425.0], [50.5, 428.0], [50.6, 428.0], [50.7, 428.0], [50.8, 428.0], [50.9, 428.0], [51.0, 428.0], [51.1, 429.0], [51.2, 429.0], [51.3, 430.0], [51.4, 430.0], [51.5, 431.0], [51.6, 431.0], [51.7, 431.0], [51.8, 431.0], [51.9, 431.0], [52.0, 431.0], [52.1, 431.0], [52.2, 431.0], [52.3, 431.0], [52.4, 431.0], [52.5, 432.0], [52.6, 432.0], [52.7, 432.0], [52.8, 432.0], [52.9, 433.0], [53.0, 433.0], [53.1, 433.0], [53.2, 433.0], [53.3, 435.0], [53.4, 435.0], [53.5, 436.0], [53.6, 436.0], [53.7, 436.0], [53.8, 436.0], [53.9, 436.0], [54.0, 436.0], [54.1, 436.0], [54.2, 436.0], [54.3, 437.0], [54.4, 437.0], [54.5, 437.0], [54.6, 437.0], [54.7, 437.0], [54.8, 437.0], [54.9, 437.0], [55.0, 437.0], [55.1, 437.0], [55.2, 437.0], [55.3, 437.0], [55.4, 437.0], [55.5, 438.0], [55.6, 438.0], [55.7, 438.0], [55.8, 438.0], [55.9, 439.0], [56.0, 439.0], [56.1, 439.0], [56.2, 439.0], [56.3, 439.0], [56.4, 439.0], [56.5, 440.0], [56.6, 440.0], [56.7, 440.0], [56.8, 440.0], [56.9, 440.0], [57.0, 440.0], [57.1, 441.0], [57.2, 441.0], [57.3, 441.0], [57.4, 441.0], [57.5, 441.0], [57.6, 441.0], [57.7, 442.0], [57.8, 442.0], [57.9, 442.0], [58.0, 442.0], [58.1, 442.0], [58.2, 442.0], [58.3, 442.0], [58.4, 442.0], [58.5, 442.0], [58.6, 442.0], [58.7, 442.0], [58.8, 442.0], [58.9, 443.0], [59.0, 443.0], [59.1, 444.0], [59.2, 444.0], [59.3, 445.0], [59.4, 445.0], [59.5, 445.0], [59.6, 445.0], [59.7, 445.0], [59.8, 445.0], [59.9, 445.0], [60.0, 445.0], [60.1, 445.0], [60.2, 445.0], [60.3, 445.0], [60.4, 445.0], [60.5, 445.0], [60.6, 445.0], [60.7, 446.0], [60.8, 446.0], [60.9, 446.0], [61.0, 446.0], [61.1, 446.0], [61.2, 446.0], [61.3, 446.0], [61.4, 446.0], [61.5, 447.0], [61.6, 447.0], [61.7, 447.0], [61.8, 447.0], [61.9, 447.0], [62.0, 447.0], [62.1, 447.0], [62.2, 447.0], [62.3, 448.0], [62.4, 448.0], [62.5, 448.0], [62.6, 448.0], [62.7, 448.0], [62.8, 448.0], [62.9, 448.0], [63.0, 448.0], [63.1, 448.0], [63.2, 448.0], [63.3, 449.0], [63.4, 449.0], [63.5, 449.0], [63.6, 449.0], [63.7, 450.0], [63.8, 450.0], [63.9, 450.0], [64.0, 450.0], [64.1, 450.0], [64.2, 450.0], [64.3, 450.0], [64.4, 450.0], [64.5, 451.0], [64.6, 451.0], [64.7, 451.0], [64.8, 451.0], [64.9, 452.0], [65.0, 452.0], [65.1, 452.0], [65.2, 452.0], [65.3, 452.0], [65.4, 452.0], [65.5, 452.0], [65.6, 452.0], [65.7, 452.0], [65.8, 452.0], [65.9, 453.0], [66.0, 453.0], [66.1, 453.0], [66.2, 453.0], [66.3, 453.0], [66.4, 453.0], [66.5, 454.0], [66.6, 454.0], [66.7, 454.0], [66.8, 454.0], [66.9, 454.0], [67.0, 454.0], [67.1, 454.0], [67.2, 454.0], [67.3, 455.0], [67.4, 455.0], [67.5, 455.0], [67.6, 455.0], [67.7, 456.0], [67.8, 456.0], [67.9, 456.0], [68.0, 456.0], [68.1, 457.0], [68.2, 457.0], [68.3, 457.0], [68.4, 457.0], [68.5, 457.0], [68.6, 457.0], [68.7, 457.0], [68.8, 457.0], [68.9, 458.0], [69.0, 458.0], [69.1, 459.0], [69.2, 459.0], [69.3, 459.0], [69.4, 459.0], [69.5, 459.0], [69.6, 459.0], [69.7, 459.0], [69.8, 459.0], [69.9, 460.0], [70.0, 460.0], [70.1, 460.0], [70.2, 460.0], [70.3, 460.0], [70.4, 460.0], [70.5, 460.0], [70.6, 460.0], [70.7, 461.0], [70.8, 461.0], [70.9, 462.0], [71.0, 462.0], [71.1, 462.0], [71.2, 462.0], [71.3, 463.0], [71.4, 463.0], [71.5, 463.0], [71.6, 463.0], [71.7, 464.0], [71.8, 464.0], [71.9, 464.0], [72.0, 464.0], [72.1, 465.0], [72.2, 465.0], [72.3, 465.0], [72.4, 465.0], [72.5, 467.0], [72.6, 467.0], [72.7, 467.0], [72.8, 467.0], [72.9, 467.0], [73.0, 467.0], [73.1, 468.0], [73.2, 468.0], [73.3, 470.0], [73.4, 470.0], [73.5, 471.0], [73.6, 471.0], [73.7, 471.0], [73.8, 471.0], [73.9, 472.0], [74.0, 472.0], [74.1, 473.0], [74.2, 473.0], [74.3, 479.0], [74.4, 479.0], [74.5, 480.0], [74.6, 480.0], [74.7, 480.0], [74.8, 480.0], [74.9, 502.0], [75.0, 502.0], [75.1, 509.0], [75.2, 509.0], [75.3, 552.0], [75.4, 552.0], [75.5, 771.0], [75.6, 771.0], [75.7, 787.0], [75.8, 787.0], [75.9, 854.0], [76.0, 854.0], [76.1, 909.0], [76.2, 909.0], [76.3, 942.0], [76.4, 942.0], [76.5, 964.0], [76.6, 964.0], [76.7, 1038.0], [76.8, 1038.0], [76.9, 1047.0], [77.0, 1047.0], [77.1, 1120.0], [77.2, 1120.0], [77.3, 1149.0], [77.4, 1149.0], [77.5, 1179.0], [77.6, 1179.0], [77.7, 1185.0], [77.8, 1185.0], [77.9, 1191.0], [78.0, 1191.0], [78.1, 1214.0], [78.2, 1214.0], [78.3, 1224.0], [78.4, 1224.0], [78.5, 1235.0], [78.6, 1235.0], [78.7, 1248.0], [78.8, 1248.0], [78.9, 1260.0], [79.0, 1260.0], [79.1, 1267.0], [79.2, 1267.0], [79.3, 1268.0], [79.4, 1268.0], [79.5, 1275.0], [79.6, 1275.0], [79.7, 1284.0], [79.8, 1284.0], [79.9, 1303.0], [80.0, 1303.0], [80.1, 1307.0], [80.2, 1307.0], [80.3, 1309.0], [80.4, 1309.0], [80.5, 1312.0], [80.6, 1312.0], [80.7, 1318.0], [80.8, 1318.0], [80.9, 1322.0], [81.0, 1322.0], [81.1, 1324.0], [81.2, 1324.0], [81.3, 1324.0], [81.4, 1324.0], [81.5, 1326.0], [81.6, 1326.0], [81.7, 1337.0], [81.8, 1337.0], [81.9, 1343.0], [82.0, 1343.0], [82.1, 1352.0], [82.2, 1352.0], [82.3, 1353.0], [82.4, 1353.0], [82.5, 1368.0], [82.6, 1368.0], [82.7, 1374.0], [82.8, 1374.0], [82.9, 1379.0], [83.0, 1379.0], [83.1, 1381.0], [83.2, 1381.0], [83.3, 1382.0], [83.4, 1382.0], [83.5, 1386.0], [83.6, 1386.0], [83.7, 1390.0], [83.8, 1390.0], [83.9, 1390.0], [84.0, 1390.0], [84.1, 1392.0], [84.2, 1392.0], [84.3, 1398.0], [84.4, 1398.0], [84.5, 1400.0], [84.6, 1400.0], [84.7, 1403.0], [84.8, 1403.0], [84.9, 1404.0], [85.0, 1404.0], [85.1, 1407.0], [85.2, 1407.0], [85.3, 1409.0], [85.4, 1409.0], [85.5, 1412.0], [85.6, 1412.0], [85.7, 1436.0], [85.8, 1436.0], [85.9, 1437.0], [86.0, 1437.0], [86.1, 1445.0], [86.2, 1445.0], [86.3, 1446.0], [86.4, 1446.0], [86.5, 1451.0], [86.6, 1451.0], [86.7, 1451.0], [86.8, 1451.0], [86.9, 1458.0], [87.0, 1458.0], [87.1, 1459.0], [87.2, 1459.0], [87.3, 1460.0], [87.4, 1460.0], [87.5, 1461.0], [87.6, 1461.0], [87.7, 1470.0], [87.8, 1470.0], [87.9, 1472.0], [88.0, 1472.0], [88.1, 1485.0], [88.2, 1485.0], [88.3, 1492.0], [88.4, 1492.0], [88.5, 1505.0], [88.6, 1505.0], [88.7, 1510.0], [88.8, 1510.0], [88.9, 1523.0], [89.0, 1523.0], [89.1, 1535.0], [89.2, 1535.0], [89.3, 1538.0], [89.4, 1538.0], [89.5, 1542.0], [89.6, 1542.0], [89.7, 1543.0], [89.8, 1543.0], [89.9, 1545.0], [90.0, 1545.0], [90.1, 1551.0], [90.2, 1551.0], [90.3, 1558.0], [90.4, 1558.0], [90.5, 1558.0], [90.6, 1558.0], [90.7, 1572.0], [90.8, 1572.0], [90.9, 1575.0], [91.0, 1575.0], [91.1, 1577.0], [91.2, 1577.0], [91.3, 1587.0], [91.4, 1587.0], [91.5, 1602.0], [91.6, 1602.0], [91.7, 1610.0], [91.8, 1610.0], [91.9, 1648.0], [92.0, 1648.0], [92.1, 1773.0], [92.2, 1773.0], [92.3, 1864.0], [92.4, 1864.0], [92.5, 2020.0], [92.6, 2020.0], [92.7, 2175.0], [92.8, 2175.0], [92.9, 2185.0], [93.0, 2185.0], [93.1, 2331.0], [93.2, 2331.0], [93.3, 2423.0], [93.4, 2423.0], [93.5, 2513.0], [93.6, 2513.0], [93.7, 2517.0], [93.8, 2517.0], [93.9, 2580.0], [94.0, 2580.0], [94.1, 2643.0], [94.2, 2643.0], [94.3, 2679.0], [94.4, 2679.0], [94.5, 2711.0], [94.6, 2711.0], [94.7, 2855.0], [94.8, 2855.0], [94.9, 2900.0], [95.0, 2900.0], [95.1, 2902.0], [95.2, 2902.0], [95.3, 3041.0], [95.4, 3041.0], [95.5, 3390.0], [95.6, 3390.0], [95.7, 3393.0], [95.8, 3393.0], [95.9, 3579.0], [96.0, 3579.0], [96.1, 3735.0], [96.2, 3735.0], [96.3, 3852.0], [96.4, 3852.0], [96.5, 3884.0], [96.6, 3884.0], [96.7, 3922.0], [96.8, 3922.0], [96.9, 4198.0], [97.0, 4198.0], [97.1, 4424.0], [97.2, 4424.0], [97.3, 4897.0], [97.4, 4897.0], [97.5, 4950.0], [97.6, 4950.0], [97.7, 4953.0], [97.8, 4953.0], [97.9, 5230.0], [98.0, 5230.0], [98.1, 5491.0], [98.2, 5491.0], [98.3, 6653.0], [98.4, 6653.0], [98.5, 6733.0], [98.6, 6733.0], [98.7, 8679.0], [98.8, 8679.0], [98.9, 9772.0], [99.0, 9772.0], [99.1, 10981.0], [99.2, 10981.0], [99.3, 12837.0], [99.4, 12837.0], [99.5, 19907.0], [99.6, 19907.0], [99.7, 39619.0], [99.8, 39619.0], [99.9, 40190.0], [100.0, 40190.0]], "isOverall": false, "label": "CreateBooking ", "isController": false}, {"data": [[0.0, 229.0], [0.1, 229.0], [0.2, 231.0], [0.3, 231.0], [0.4, 233.0], [0.5, 233.0], [0.6, 233.0], [0.7, 233.0], [0.8, 233.0], [0.9, 233.0], [1.0, 234.0], [1.1, 234.0], [1.2, 234.0], [1.3, 234.0], [1.4, 236.0], [1.5, 236.0], [1.6, 237.0], [1.7, 237.0], [1.8, 237.0], [1.9, 237.0], [2.0, 238.0], [2.1, 238.0], [2.2, 238.0], [2.3, 238.0], [2.4, 240.0], [2.5, 240.0], [2.6, 241.0], [2.7, 241.0], [2.8, 241.0], [2.9, 241.0], [3.0, 241.0], [3.1, 241.0], [3.2, 241.0], [3.3, 241.0], [3.4, 241.0], [3.5, 242.0], [3.6, 242.0], [3.7, 242.0], [3.8, 242.0], [3.9, 242.0], [4.0, 242.0], [4.1, 242.0], [4.2, 243.0], [4.3, 243.0], [4.4, 243.0], [4.5, 243.0], [4.6, 243.0], [4.7, 243.0], [4.8, 243.0], [4.9, 243.0], [5.0, 243.0], [5.1, 243.0], [5.2, 243.0], [5.3, 243.0], [5.4, 243.0], [5.5, 243.0], [5.6, 244.0], [5.7, 244.0], [5.8, 244.0], [5.9, 244.0], [6.0, 244.0], [6.1, 244.0], [6.2, 244.0], [6.3, 244.0], [6.4, 244.0], [6.5, 244.0], [6.6, 245.0], [6.7, 245.0], [6.8, 245.0], [6.9, 245.0], [7.0, 245.0], [7.1, 245.0], [7.2, 245.0], [7.3, 245.0], [7.4, 245.0], [7.5, 245.0], [7.6, 245.0], [7.7, 245.0], [7.8, 245.0], [7.9, 245.0], [8.0, 245.0], [8.1, 245.0], [8.2, 245.0], [8.3, 245.0], [8.4, 246.0], [8.5, 246.0], [8.6, 246.0], [8.7, 246.0], [8.8, 246.0], [8.9, 246.0], [9.0, 246.0], [9.1, 246.0], [9.2, 246.0], [9.3, 246.0], [9.4, 246.0], [9.5, 246.0], [9.6, 246.0], [9.7, 246.0], [9.8, 246.0], [9.9, 246.0], [10.0, 247.0], [10.1, 247.0], [10.2, 247.0], [10.3, 247.0], [10.4, 247.0], [10.5, 247.0], [10.6, 247.0], [10.7, 247.0], [10.8, 248.0], [10.9, 248.0], [11.0, 248.0], [11.1, 248.0], [11.2, 248.0], [11.3, 248.0], [11.4, 248.0], [11.5, 248.0], [11.6, 248.0], [11.7, 248.0], [11.8, 249.0], [11.9, 249.0], [12.0, 249.0], [12.1, 249.0], [12.2, 249.0], [12.3, 249.0], [12.4, 249.0], [12.5, 249.0], [12.6, 249.0], [12.7, 249.0], [12.8, 249.0], [12.9, 249.0], [13.0, 249.0], [13.1, 249.0], [13.2, 249.0], [13.3, 249.0], [13.4, 250.0], [13.5, 250.0], [13.6, 250.0], [13.7, 250.0], [13.8, 250.0], [13.9, 250.0], [14.0, 250.0], [14.1, 250.0], [14.2, 250.0], [14.3, 250.0], [14.4, 250.0], [14.5, 250.0], [14.6, 250.0], [14.7, 250.0], [14.8, 250.0], [14.9, 250.0], [15.0, 251.0], [15.1, 251.0], [15.2, 251.0], [15.3, 251.0], [15.4, 251.0], [15.5, 251.0], [15.6, 251.0], [15.7, 251.0], [15.8, 251.0], [15.9, 251.0], [16.0, 251.0], [16.1, 251.0], [16.2, 251.0], [16.3, 251.0], [16.4, 251.0], [16.5, 251.0], [16.6, 251.0], [16.7, 251.0], [16.8, 251.0], [16.9, 251.0], [17.0, 252.0], [17.1, 252.0], [17.2, 252.0], [17.3, 252.0], [17.4, 252.0], [17.5, 252.0], [17.6, 252.0], [17.7, 252.0], [17.8, 252.0], [17.9, 252.0], [18.0, 252.0], [18.1, 252.0], [18.2, 252.0], [18.3, 252.0], [18.4, 252.0], [18.5, 252.0], [18.6, 252.0], [18.7, 252.0], [18.8, 252.0], [18.9, 252.0], [19.0, 253.0], [19.1, 253.0], [19.2, 253.0], [19.3, 253.0], [19.4, 253.0], [19.5, 253.0], [19.6, 253.0], [19.7, 253.0], [19.8, 253.0], [19.9, 253.0], [20.0, 253.0], [20.1, 253.0], [20.2, 253.0], [20.3, 253.0], [20.4, 254.0], [20.5, 254.0], [20.6, 254.0], [20.7, 254.0], [20.8, 254.0], [20.9, 254.0], [21.0, 254.0], [21.1, 254.0], [21.2, 254.0], [21.3, 254.0], [21.4, 254.0], [21.5, 254.0], [21.6, 254.0], [21.7, 254.0], [21.8, 254.0], [21.9, 254.0], [22.0, 255.0], [22.1, 255.0], [22.2, 255.0], [22.3, 255.0], [22.4, 255.0], [22.5, 255.0], [22.6, 255.0], [22.7, 255.0], [22.8, 255.0], [22.9, 255.0], [23.0, 255.0], [23.1, 255.0], [23.2, 255.0], [23.3, 255.0], [23.4, 255.0], [23.5, 255.0], [23.6, 256.0], [23.7, 256.0], [23.8, 256.0], [23.9, 256.0], [24.0, 256.0], [24.1, 256.0], [24.2, 256.0], [24.3, 256.0], [24.4, 256.0], [24.5, 256.0], [24.6, 256.0], [24.7, 256.0], [24.8, 256.0], [24.9, 256.0], [25.0, 256.0], [25.1, 256.0], [25.2, 256.0], [25.3, 256.0], [25.4, 256.0], [25.5, 256.0], [25.6, 256.0], [25.7, 256.0], [25.8, 256.0], [25.9, 256.0], [26.0, 256.0], [26.1, 256.0], [26.2, 256.0], [26.3, 256.0], [26.4, 256.0], [26.5, 257.0], [26.6, 257.0], [26.7, 257.0], [26.8, 257.0], [26.9, 257.0], [27.0, 257.0], [27.1, 257.0], [27.2, 257.0], [27.3, 257.0], [27.4, 257.0], [27.5, 257.0], [27.6, 257.0], [27.7, 257.0], [27.8, 257.0], [27.9, 257.0], [28.0, 257.0], [28.1, 257.0], [28.2, 257.0], [28.3, 257.0], [28.4, 257.0], [28.5, 257.0], [28.6, 257.0], [28.7, 257.0], [28.8, 257.0], [28.9, 257.0], [29.0, 257.0], [29.1, 258.0], [29.2, 258.0], [29.3, 258.0], [29.4, 258.0], [29.5, 258.0], [29.6, 258.0], [29.7, 258.0], [29.8, 258.0], [29.9, 258.0], [30.0, 258.0], [30.1, 258.0], [30.2, 258.0], [30.3, 258.0], [30.4, 258.0], [30.5, 258.0], [30.6, 258.0], [30.7, 258.0], [30.8, 258.0], [30.9, 258.0], [31.0, 258.0], [31.1, 258.0], [31.2, 258.0], [31.3, 258.0], [31.4, 258.0], [31.5, 259.0], [31.6, 259.0], [31.7, 259.0], [31.8, 259.0], [31.9, 259.0], [32.0, 259.0], [32.1, 259.0], [32.2, 259.0], [32.3, 259.0], [32.4, 259.0], [32.5, 259.0], [32.6, 259.0], [32.7, 259.0], [32.8, 259.0], [32.9, 260.0], [33.0, 260.0], [33.1, 260.0], [33.2, 260.0], [33.3, 260.0], [33.4, 260.0], [33.5, 260.0], [33.6, 260.0], [33.7, 260.0], [33.8, 260.0], [33.9, 260.0], [34.0, 260.0], [34.1, 260.0], [34.2, 260.0], [34.3, 260.0], [34.4, 260.0], [34.5, 261.0], [34.6, 261.0], [34.7, 261.0], [34.8, 261.0], [34.9, 261.0], [35.0, 261.0], [35.1, 261.0], [35.2, 261.0], [35.3, 261.0], [35.4, 261.0], [35.5, 261.0], [35.6, 261.0], [35.7, 261.0], [35.8, 261.0], [35.9, 261.0], [36.0, 261.0], [36.1, 261.0], [36.2, 261.0], [36.3, 261.0], [36.4, 261.0], [36.5, 261.0], [36.6, 261.0], [36.7, 261.0], [36.8, 261.0], [36.9, 261.0], [37.0, 261.0], [37.1, 261.0], [37.2, 261.0], [37.3, 261.0], [37.4, 261.0], [37.5, 262.0], [37.6, 262.0], [37.7, 262.0], [37.8, 262.0], [37.9, 262.0], [38.0, 262.0], [38.1, 263.0], [38.2, 263.0], [38.3, 263.0], [38.4, 263.0], [38.5, 263.0], [38.6, 263.0], [38.7, 263.0], [38.8, 263.0], [38.9, 263.0], [39.0, 263.0], [39.1, 263.0], [39.2, 263.0], [39.3, 263.0], [39.4, 263.0], [39.5, 263.0], [39.6, 263.0], [39.7, 263.0], [39.8, 263.0], [39.9, 263.0], [40.0, 263.0], [40.1, 263.0], [40.2, 263.0], [40.3, 264.0], [40.4, 264.0], [40.5, 264.0], [40.6, 264.0], [40.7, 264.0], [40.8, 264.0], [40.9, 264.0], [41.0, 264.0], [41.1, 264.0], [41.2, 264.0], [41.3, 265.0], [41.4, 265.0], [41.5, 265.0], [41.6, 265.0], [41.7, 265.0], [41.8, 265.0], [41.9, 265.0], [42.0, 265.0], [42.1, 266.0], [42.2, 266.0], [42.3, 266.0], [42.4, 266.0], [42.5, 266.0], [42.6, 266.0], [42.7, 266.0], [42.8, 266.0], [42.9, 266.0], [43.0, 266.0], [43.1, 267.0], [43.2, 267.0], [43.3, 267.0], [43.4, 267.0], [43.5, 267.0], [43.6, 267.0], [43.7, 268.0], [43.8, 268.0], [43.9, 268.0], [44.0, 268.0], [44.1, 268.0], [44.2, 268.0], [44.3, 268.0], [44.4, 268.0], [44.5, 268.0], [44.6, 268.0], [44.7, 269.0], [44.8, 269.0], [44.9, 269.0], [45.0, 269.0], [45.1, 269.0], [45.2, 269.0], [45.3, 269.0], [45.4, 269.0], [45.5, 269.0], [45.6, 269.0], [45.7, 269.0], [45.8, 269.0], [45.9, 270.0], [46.0, 270.0], [46.1, 270.0], [46.2, 270.0], [46.3, 270.0], [46.4, 270.0], [46.5, 272.0], [46.6, 272.0], [46.7, 276.0], [46.8, 276.0], [46.9, 282.0], [47.0, 282.0], [47.1, 283.0], [47.2, 283.0], [47.3, 286.0], [47.4, 286.0], [47.5, 287.0], [47.6, 287.0], [47.7, 288.0], [47.8, 288.0], [47.9, 288.0], [48.0, 288.0], [48.1, 292.0], [48.2, 292.0], [48.3, 292.0], [48.4, 292.0], [48.5, 292.0], [48.6, 292.0], [48.7, 295.0], [48.8, 295.0], [48.9, 295.0], [49.0, 295.0], [49.1, 307.0], [49.2, 307.0], [49.3, 307.0], [49.4, 307.0], [49.5, 307.0], [49.6, 307.0], [49.7, 309.0], [49.8, 309.0], [49.9, 315.0], [50.0, 315.0], [50.1, 315.0], [50.2, 315.0], [50.3, 319.0], [50.4, 319.0], [50.5, 319.0], [50.6, 319.0], [50.7, 322.0], [50.8, 322.0], [50.9, 324.0], [51.0, 324.0], [51.1, 330.0], [51.2, 330.0], [51.3, 334.0], [51.4, 334.0], [51.5, 335.0], [51.6, 335.0], [51.7, 335.0], [51.8, 335.0], [51.9, 337.0], [52.0, 337.0], [52.1, 339.0], [52.2, 339.0], [52.3, 342.0], [52.4, 342.0], [52.5, 344.0], [52.6, 344.0], [52.7, 345.0], [52.8, 345.0], [52.9, 349.0], [53.0, 349.0], [53.1, 349.0], [53.2, 349.0], [53.3, 353.0], [53.4, 353.0], [53.5, 355.0], [53.6, 355.0], [53.7, 357.0], [53.8, 357.0], [53.9, 358.0], [54.0, 358.0], [54.1, 359.0], [54.2, 359.0], [54.3, 360.0], [54.4, 360.0], [54.5, 361.0], [54.6, 361.0], [54.7, 367.0], [54.8, 367.0], [54.9, 369.0], [55.0, 369.0], [55.1, 371.0], [55.2, 371.0], [55.3, 375.0], [55.4, 375.0], [55.5, 383.0], [55.6, 383.0], [55.7, 386.0], [55.8, 386.0], [55.9, 393.0], [56.0, 393.0], [56.1, 395.0], [56.2, 395.0], [56.3, 396.0], [56.4, 396.0], [56.5, 396.0], [56.6, 396.0], [56.7, 397.0], [56.8, 397.0], [56.9, 400.0], [57.0, 400.0], [57.1, 409.0], [57.2, 409.0], [57.3, 410.0], [57.4, 410.0], [57.5, 412.0], [57.6, 412.0], [57.7, 415.0], [57.8, 415.0], [57.9, 418.0], [58.0, 418.0], [58.1, 418.0], [58.2, 418.0], [58.3, 420.0], [58.4, 420.0], [58.5, 422.0], [58.6, 422.0], [58.7, 423.0], [58.8, 423.0], [58.9, 423.0], [59.0, 423.0], [59.1, 425.0], [59.2, 425.0], [59.3, 425.0], [59.4, 425.0], [59.5, 425.0], [59.6, 425.0], [59.7, 426.0], [59.8, 426.0], [59.9, 426.0], [60.0, 426.0], [60.1, 428.0], [60.2, 428.0], [60.3, 428.0], [60.4, 428.0], [60.5, 429.0], [60.6, 429.0], [60.7, 429.0], [60.8, 429.0], [60.9, 430.0], [61.0, 430.0], [61.1, 431.0], [61.2, 431.0], [61.3, 432.0], [61.4, 432.0], [61.5, 432.0], [61.6, 432.0], [61.7, 433.0], [61.8, 433.0], [61.9, 434.0], [62.0, 434.0], [62.1, 434.0], [62.2, 434.0], [62.3, 436.0], [62.4, 436.0], [62.5, 437.0], [62.6, 437.0], [62.7, 437.0], [62.8, 437.0], [62.9, 437.0], [63.0, 437.0], [63.1, 437.0], [63.2, 437.0], [63.3, 437.0], [63.4, 437.0], [63.5, 438.0], [63.6, 438.0], [63.7, 439.0], [63.8, 439.0], [63.9, 441.0], [64.0, 441.0], [64.1, 442.0], [64.2, 442.0], [64.3, 442.0], [64.4, 442.0], [64.5, 443.0], [64.6, 443.0], [64.7, 444.0], [64.8, 444.0], [64.9, 445.0], [65.0, 445.0], [65.1, 445.0], [65.2, 445.0], [65.3, 446.0], [65.4, 446.0], [65.5, 446.0], [65.6, 446.0], [65.7, 447.0], [65.8, 447.0], [65.9, 447.0], [66.0, 447.0], [66.1, 448.0], [66.2, 448.0], [66.3, 448.0], [66.4, 448.0], [66.5, 449.0], [66.6, 449.0], [66.7, 449.0], [66.8, 449.0], [66.9, 449.0], [67.0, 449.0], [67.1, 449.0], [67.2, 449.0], [67.3, 451.0], [67.4, 451.0], [67.5, 451.0], [67.6, 451.0], [67.7, 452.0], [67.8, 452.0], [67.9, 452.0], [68.0, 452.0], [68.1, 452.0], [68.2, 452.0], [68.3, 452.0], [68.4, 452.0], [68.5, 452.0], [68.6, 452.0], [68.7, 453.0], [68.8, 453.0], [68.9, 453.0], [69.0, 453.0], [69.1, 453.0], [69.2, 453.0], [69.3, 454.0], [69.4, 454.0], [69.5, 454.0], [69.6, 454.0], [69.7, 455.0], [69.8, 455.0], [69.9, 456.0], [70.0, 456.0], [70.1, 456.0], [70.2, 456.0], [70.3, 456.0], [70.4, 456.0], [70.5, 457.0], [70.6, 457.0], [70.7, 457.0], [70.8, 457.0], [70.9, 460.0], [71.0, 460.0], [71.1, 460.0], [71.2, 460.0], [71.3, 460.0], [71.4, 460.0], [71.5, 460.0], [71.6, 460.0], [71.7, 460.0], [71.8, 460.0], [71.9, 461.0], [72.0, 461.0], [72.1, 461.0], [72.2, 461.0], [72.3, 461.0], [72.4, 461.0], [72.5, 462.0], [72.6, 462.0], [72.7, 462.0], [72.8, 462.0], [72.9, 462.0], [73.0, 462.0], [73.1, 463.0], [73.2, 463.0], [73.3, 463.0], [73.4, 463.0], [73.5, 464.0], [73.6, 464.0], [73.7, 465.0], [73.8, 465.0], [73.9, 465.0], [74.0, 465.0], [74.1, 465.0], [74.2, 465.0], [74.3, 466.0], [74.4, 466.0], [74.5, 467.0], [74.6, 467.0], [74.7, 467.0], [74.8, 467.0], [74.9, 468.0], [75.0, 468.0], [75.1, 468.0], [75.2, 468.0], [75.3, 472.0], [75.4, 472.0], [75.5, 472.0], [75.6, 472.0], [75.7, 472.0], [75.8, 472.0], [75.9, 473.0], [76.0, 473.0], [76.1, 479.0], [76.2, 479.0], [76.3, 483.0], [76.4, 483.0], [76.5, 495.0], [76.6, 495.0], [76.7, 499.0], [76.8, 499.0], [76.9, 501.0], [77.0, 501.0], [77.1, 502.0], [77.2, 502.0], [77.3, 504.0], [77.4, 504.0], [77.5, 507.0], [77.6, 507.0], [77.7, 510.0], [77.8, 510.0], [77.9, 755.0], [78.0, 755.0], [78.1, 793.0], [78.2, 793.0], [78.3, 814.0], [78.4, 814.0], [78.5, 834.0], [78.6, 834.0], [78.7, 896.0], [78.8, 896.0], [78.9, 967.0], [79.0, 967.0], [79.1, 1022.0], [79.2, 1022.0], [79.3, 1036.0], [79.4, 1036.0], [79.5, 1079.0], [79.6, 1079.0], [79.7, 1134.0], [79.8, 1134.0], [79.9, 1135.0], [80.0, 1135.0], [80.1, 1159.0], [80.2, 1159.0], [80.3, 1161.0], [80.4, 1161.0], [80.5, 1172.0], [80.6, 1172.0], [80.7, 1181.0], [80.8, 1181.0], [80.9, 1213.0], [81.0, 1213.0], [81.1, 1218.0], [81.2, 1218.0], [81.3, 1221.0], [81.4, 1221.0], [81.5, 1224.0], [81.6, 1224.0], [81.7, 1224.0], [81.8, 1224.0], [81.9, 1227.0], [82.0, 1227.0], [82.1, 1230.0], [82.2, 1230.0], [82.3, 1232.0], [82.4, 1232.0], [82.5, 1235.0], [82.6, 1235.0], [82.7, 1240.0], [82.8, 1240.0], [82.9, 1245.0], [83.0, 1245.0], [83.1, 1246.0], [83.2, 1246.0], [83.3, 1267.0], [83.4, 1267.0], [83.5, 1271.0], [83.6, 1271.0], [83.7, 1271.0], [83.8, 1271.0], [83.9, 1284.0], [84.0, 1284.0], [84.1, 1285.0], [84.2, 1285.0], [84.3, 1295.0], [84.4, 1295.0], [84.5, 1296.0], [84.6, 1296.0], [84.7, 1298.0], [84.8, 1298.0], [84.9, 1306.0], [85.0, 1306.0], [85.1, 1317.0], [85.2, 1317.0], [85.3, 1321.0], [85.4, 1321.0], [85.5, 1334.0], [85.6, 1334.0], [85.7, 1334.0], [85.8, 1334.0], [85.9, 1340.0], [86.0, 1340.0], [86.1, 1343.0], [86.2, 1343.0], [86.3, 1344.0], [86.4, 1344.0], [86.5, 1371.0], [86.6, 1371.0], [86.7, 1373.0], [86.8, 1373.0], [86.9, 1375.0], [87.0, 1375.0], [87.1, 1376.0], [87.2, 1376.0], [87.3, 1383.0], [87.4, 1383.0], [87.5, 1393.0], [87.6, 1393.0], [87.7, 1402.0], [87.8, 1402.0], [87.9, 1411.0], [88.0, 1411.0], [88.1, 1417.0], [88.2, 1417.0], [88.3, 1419.0], [88.4, 1419.0], [88.5, 1424.0], [88.6, 1424.0], [88.7, 1436.0], [88.8, 1436.0], [88.9, 1439.0], [89.0, 1439.0], [89.1, 1445.0], [89.2, 1445.0], [89.3, 1455.0], [89.4, 1455.0], [89.5, 1467.0], [89.6, 1467.0], [89.7, 1467.0], [89.8, 1467.0], [89.9, 1470.0], [90.0, 1470.0], [90.1, 1480.0], [90.2, 1480.0], [90.3, 1480.0], [90.4, 1480.0], [90.5, 1490.0], [90.6, 1490.0], [90.7, 1491.0], [90.8, 1491.0], [90.9, 1503.0], [91.0, 1503.0], [91.1, 1518.0], [91.2, 1518.0], [91.3, 1526.0], [91.4, 1526.0], [91.5, 1532.0], [91.6, 1532.0], [91.7, 1533.0], [91.8, 1533.0], [91.9, 1539.0], [92.0, 1539.0], [92.1, 1541.0], [92.2, 1541.0], [92.3, 1555.0], [92.4, 1555.0], [92.5, 1594.0], [92.6, 1594.0], [92.7, 1598.0], [92.8, 1598.0], [92.9, 1603.0], [93.0, 1603.0], [93.1, 1652.0], [93.2, 1652.0], [93.3, 1734.0], [93.4, 1734.0], [93.5, 2102.0], [93.6, 2102.0], [93.7, 2105.0], [93.8, 2105.0], [93.9, 2136.0], [94.0, 2136.0], [94.1, 2146.0], [94.2, 2146.0], [94.3, 2196.0], [94.4, 2196.0], [94.5, 2231.0], [94.6, 2231.0], [94.7, 2291.0], [94.8, 2291.0], [94.9, 2316.0], [95.0, 2316.0], [95.1, 2421.0], [95.2, 2421.0], [95.3, 2488.0], [95.4, 2488.0], [95.5, 2517.0], [95.6, 2517.0], [95.7, 2542.0], [95.8, 2542.0], [95.9, 2565.0], [96.0, 2565.0], [96.1, 2566.0], [96.2, 2566.0], [96.3, 2619.0], [96.4, 2619.0], [96.5, 2634.0], [96.6, 2634.0], [96.7, 2637.0], [96.8, 2637.0], [96.9, 2696.0], [97.0, 2696.0], [97.1, 3293.0], [97.2, 3293.0], [97.3, 3459.0], [97.4, 3459.0], [97.5, 3643.0], [97.6, 3643.0], [97.7, 3697.0], [97.8, 3697.0], [97.9, 3705.0], [98.0, 3705.0], [98.1, 3878.0], [98.2, 3878.0], [98.3, 3979.0], [98.4, 3979.0], [98.5, 4129.0], [98.6, 4129.0], [98.7, 4508.0], [98.8, 4508.0], [98.9, 4683.0], [99.0, 4683.0], [99.1, 8477.0], [99.2, 8477.0], [99.3, 8578.0], [99.4, 8578.0], [99.5, 9538.0], [99.6, 9538.0], [99.7, 14896.0], [99.8, 14896.0], [99.9, 131285.0], [100.0, 131285.0]], "isOverall": false, "label": "UpdateBooking ", "isController": false}, {"data": [[0.0, 1327.0], [0.1, 1327.0], [0.2, 1356.0], [0.3, 1356.0], [0.4, 1372.0], [0.5, 1372.0], [0.6, 1372.0], [0.7, 1418.0], [0.8, 1429.0], [0.9, 1429.0], [1.0, 1447.0], [1.1, 1447.0], [1.2, 1477.0], [1.3, 1477.0], [1.4, 1488.0], [1.5, 1488.0], [1.6, 1491.0], [1.7, 1491.0], [1.8, 1567.0], [1.9, 1567.0], [2.0, 1574.0], [2.1, 1574.0], [2.2, 1579.0], [2.3, 1579.0], [2.4, 1593.0], [2.5, 1593.0], [2.6, 1602.0], [2.7, 1602.0], [2.8, 1602.0], [2.9, 1610.0], [3.0, 1610.0], [3.1, 1613.0], [3.2, 1613.0], [3.3, 1617.0], [3.4, 1617.0], [3.5, 1620.0], [3.6, 1620.0], [3.7, 1629.0], [3.8, 1629.0], [3.9, 1633.0], [4.0, 1633.0], [4.1, 1637.0], [4.2, 1637.0], [4.3, 1646.0], [4.4, 1646.0], [4.5, 1647.0], [4.6, 1647.0], [4.7, 1689.0], [4.8, 1689.0], [4.9, 1693.0], [5.0, 1693.0], [5.1, 1713.0], [5.2, 1713.0], [5.3, 1728.0], [5.4, 1728.0], [5.5, 1745.0], [5.6, 1745.0], [5.7, 1784.0], [5.8, 1784.0], [5.9, 1901.0], [6.0, 1901.0], [6.1, 1910.0], [6.2, 1910.0], [6.3, 1984.0], [6.4, 1984.0], [6.5, 1999.0], [6.6, 1999.0], [6.7, 2014.0], [6.8, 2014.0], [6.9, 2048.0], [7.0, 2048.0], [7.1, 2069.0], [7.2, 2069.0], [7.3, 2111.0], [7.4, 2111.0], [7.5, 2157.0], [7.6, 2157.0], [7.7, 2189.0], [7.8, 2189.0], [7.9, 2195.0], [8.0, 2195.0], [8.1, 2200.0], [8.2, 2200.0], [8.3, 2216.0], [8.4, 2216.0], [8.5, 2240.0], [8.6, 2240.0], [8.7, 2301.0], [8.8, 2340.0], [8.9, 2340.0], [9.0, 2340.0], [9.1, 2340.0], [9.2, 2340.0], [9.3, 2404.0], [9.4, 2423.0], [9.5, 2423.0], [9.6, 2423.0], [9.7, 2423.0], [9.8, 2428.0], [9.9, 2428.0], [10.0, 2505.0], [10.1, 2505.0], [10.2, 2566.0], [10.3, 2566.0], [10.4, 2576.0], [10.5, 2576.0], [10.6, 2577.0], [10.7, 2577.0], [10.8, 2590.0], [10.9, 2590.0], [11.0, 2604.0], [11.1, 2604.0], [11.2, 2605.0], [11.3, 2605.0], [11.4, 2611.0], [11.5, 2611.0], [11.6, 2633.0], [11.7, 2633.0], [11.8, 2667.0], [11.9, 2667.0], [12.0, 2679.0], [12.1, 2679.0], [12.2, 2689.0], [12.3, 2689.0], [12.4, 2717.0], [12.5, 2717.0], [12.6, 2762.0], [12.7, 2762.0], [12.8, 2776.0], [12.9, 2776.0], [13.0, 2780.0], [13.1, 2780.0], [13.2, 2823.0], [13.3, 2823.0], [13.4, 2857.0], [13.5, 2857.0], [13.6, 2875.0], [13.7, 2875.0], [13.8, 2880.0], [13.9, 2880.0], [14.0, 2947.0], [14.1, 2947.0], [14.2, 2962.0], [14.3, 2962.0], [14.4, 2981.0], [14.5, 2981.0], [14.6, 3011.0], [14.7, 3011.0], [14.8, 3043.0], [14.9, 3043.0], [15.0, 3046.0], [15.1, 3046.0], [15.2, 3090.0], [15.3, 3090.0], [15.4, 3106.0], [15.5, 3106.0], [15.6, 3117.0], [15.7, 3117.0], [15.8, 3192.0], [15.9, 3192.0], [16.0, 3205.0], [16.1, 3205.0], [16.2, 3255.0], [16.3, 3255.0], [16.4, 3261.0], [16.5, 3261.0], [16.6, 3270.0], [16.7, 3270.0], [16.8, 3273.0], [16.9, 3273.0], [17.0, 3278.0], [17.1, 3278.0], [17.2, 3279.0], [17.3, 3279.0], [17.4, 3320.0], [17.5, 3320.0], [17.6, 3320.0], [17.7, 3320.0], [17.8, 3361.0], [17.9, 3361.0], [18.0, 3362.0], [18.1, 3362.0], [18.2, 3363.0], [18.3, 3363.0], [18.4, 3393.0], [18.5, 3393.0], [18.6, 3489.0], [18.7, 3489.0], [18.8, 3532.0], [18.9, 3532.0], [19.0, 3535.0], [19.1, 3535.0], [19.2, 3589.0], [19.3, 3589.0], [19.4, 3677.0], [19.5, 3677.0], [19.6, 3718.0], [19.7, 3718.0], [19.8, 3752.0], [19.9, 3752.0], [20.0, 3752.0], [20.1, 3752.0], [20.2, 3771.0], [20.3, 3771.0], [20.4, 3779.0], [20.5, 3779.0], [20.6, 3799.0], [20.7, 3799.0], [20.8, 3843.0], [20.9, 3843.0], [21.0, 3852.0], [21.1, 3852.0], [21.2, 3862.0], [21.3, 3862.0], [21.4, 3871.0], [21.5, 3871.0], [21.6, 3882.0], [21.7, 3882.0], [21.8, 3887.0], [21.9, 3887.0], [22.0, 3908.0], [22.1, 3908.0], [22.2, 3914.0], [22.3, 3914.0], [22.4, 3959.0], [22.5, 3959.0], [22.6, 3997.0], [22.7, 3997.0], [22.8, 4026.0], [22.9, 4026.0], [23.0, 4027.0], [23.1, 4027.0], [23.2, 4040.0], [23.3, 4040.0], [23.4, 4041.0], [23.5, 4041.0], [23.6, 4058.0], [23.7, 4058.0], [23.8, 4068.0], [23.9, 4068.0], [24.0, 4088.0], [24.1, 4088.0], [24.2, 4094.0], [24.3, 4094.0], [24.4, 4104.0], [24.5, 4104.0], [24.6, 4121.0], [24.7, 4121.0], [24.8, 4134.0], [24.9, 4134.0], [25.0, 4178.0], [25.1, 4178.0], [25.2, 4209.0], [25.3, 4209.0], [25.4, 4226.0], [25.5, 4226.0], [25.6, 4278.0], [25.7, 4278.0], [25.8, 4294.0], [25.9, 4294.0], [26.0, 4304.0], [26.1, 4304.0], [26.2, 4387.0], [26.3, 4387.0], [26.4, 4445.0], [26.5, 4445.0], [26.6, 4466.0], [26.7, 4466.0], [26.8, 4474.0], [26.9, 4474.0], [27.0, 4503.0], [27.1, 4503.0], [27.2, 4503.0], [27.3, 4503.0], [27.4, 4520.0], [27.5, 4520.0], [27.6, 4536.0], [27.7, 4536.0], [27.8, 4545.0], [27.9, 4545.0], [28.0, 4574.0], [28.1, 4574.0], [28.2, 4585.0], [28.3, 4585.0], [28.4, 4596.0], [28.5, 4596.0], [28.6, 4597.0], [28.7, 4597.0], [28.8, 4621.0], [28.9, 4621.0], [29.0, 4621.0], [29.1, 4621.0], [29.2, 4625.0], [29.3, 4625.0], [29.4, 4632.0], [29.5, 4632.0], [29.6, 4637.0], [29.7, 4637.0], [29.8, 4645.0], [29.9, 4645.0], [30.0, 4655.0], [30.1, 4655.0], [30.2, 4657.0], [30.3, 4657.0], [30.4, 4659.0], [30.5, 4659.0], [30.6, 4673.0], [30.7, 4673.0], [30.8, 4770.0], [30.9, 4770.0], [31.0, 4776.0], [31.1, 4776.0], [31.2, 4779.0], [31.3, 4779.0], [31.4, 4797.0], [31.5, 4797.0], [31.6, 4804.0], [31.7, 4804.0], [31.8, 4826.0], [31.9, 4826.0], [32.0, 4847.0], [32.1, 4847.0], [32.2, 4848.0], [32.3, 4848.0], [32.4, 4864.0], [32.5, 4864.0], [32.6, 4935.0], [32.7, 4935.0], [32.8, 4943.0], [32.9, 4943.0], [33.0, 4992.0], [33.1, 4992.0], [33.2, 4995.0], [33.3, 4995.0], [33.4, 5025.0], [33.5, 5025.0], [33.6, 5040.0], [33.7, 5040.0], [33.8, 5057.0], [33.9, 5057.0], [34.0, 5078.0], [34.1, 5078.0], [34.2, 5097.0], [34.3, 5097.0], [34.4, 5108.0], [34.5, 5108.0], [34.6, 5118.0], [34.7, 5118.0], [34.8, 5131.0], [34.9, 5131.0], [35.0, 5170.0], [35.1, 5170.0], [35.2, 5196.0], [35.3, 5196.0], [35.4, 5226.0], [35.5, 5226.0], [35.6, 5256.0], [35.7, 5256.0], [35.8, 5280.0], [35.9, 5280.0], [36.0, 5282.0], [36.1, 5282.0], [36.2, 5289.0], [36.3, 5289.0], [36.4, 5319.0], [36.5, 5319.0], [36.6, 5325.0], [36.7, 5325.0], [36.8, 5334.0], [36.9, 5334.0], [37.0, 5339.0], [37.1, 5339.0], [37.2, 5383.0], [37.3, 5383.0], [37.4, 5419.0], [37.5, 5419.0], [37.6, 5475.0], [37.7, 5475.0], [37.8, 5475.0], [37.9, 5505.0], [38.0, 5505.0], [38.1, 5512.0], [38.2, 5512.0], [38.3, 5539.0], [38.4, 5539.0], [38.5, 5541.0], [38.6, 5541.0], [38.7, 5592.0], [38.8, 5592.0], [38.9, 5617.0], [39.0, 5617.0], [39.1, 5659.0], [39.2, 5659.0], [39.3, 5689.0], [39.4, 5689.0], [39.5, 5700.0], [39.6, 5700.0], [39.7, 5777.0], [39.8, 5777.0], [39.9, 5815.0], [40.0, 5815.0], [40.1, 5834.0], [40.2, 5834.0], [40.3, 5836.0], [40.4, 5836.0], [40.5, 5845.0], [40.6, 5845.0], [40.7, 5864.0], [40.8, 5864.0], [40.9, 5927.0], [41.0, 5927.0], [41.1, 5978.0], [41.2, 5978.0], [41.3, 5994.0], [41.4, 5994.0], [41.5, 6086.0], [41.6, 6086.0], [41.7, 6091.0], [41.8, 6091.0], [41.9, 6104.0], [42.0, 6104.0], [42.1, 6114.0], [42.2, 6114.0], [42.3, 6123.0], [42.4, 6123.0], [42.5, 6270.0], [42.6, 6270.0], [42.7, 6307.0], [42.8, 6307.0], [42.9, 6315.0], [43.0, 6315.0], [43.1, 6325.0], [43.2, 6325.0], [43.3, 6356.0], [43.4, 6356.0], [43.5, 6382.0], [43.6, 6382.0], [43.7, 6384.0], [43.8, 6384.0], [43.9, 6429.0], [44.0, 6429.0], [44.1, 6450.0], [44.2, 6450.0], [44.3, 6474.0], [44.4, 6474.0], [44.5, 6490.0], [44.6, 6490.0], [44.7, 6494.0], [44.8, 6494.0], [44.9, 6504.0], [45.0, 6504.0], [45.1, 6517.0], [45.2, 6517.0], [45.3, 6542.0], [45.4, 6542.0], [45.5, 6621.0], [45.6, 6621.0], [45.7, 6648.0], [45.8, 6648.0], [45.9, 6649.0], [46.0, 6649.0], [46.1, 6653.0], [46.2, 6653.0], [46.3, 6724.0], [46.4, 6724.0], [46.5, 6737.0], [46.6, 6737.0], [46.7, 6760.0], [46.8, 6760.0], [46.9, 6808.0], [47.0, 6808.0], [47.1, 6840.0], [47.2, 6840.0], [47.3, 6858.0], [47.4, 6858.0], [47.5, 6863.0], [47.6, 6863.0], [47.7, 6925.0], [47.8, 6925.0], [47.9, 6937.0], [48.0, 6937.0], [48.1, 6964.0], [48.2, 6964.0], [48.3, 7003.0], [48.4, 7003.0], [48.5, 7009.0], [48.6, 7009.0], [48.7, 7042.0], [48.8, 7042.0], [48.9, 7057.0], [49.0, 7057.0], [49.1, 7067.0], [49.2, 7067.0], [49.3, 7071.0], [49.4, 7071.0], [49.5, 7142.0], [49.6, 7142.0], [49.7, 7195.0], [49.8, 7195.0], [49.9, 7236.0], [50.0, 7236.0], [50.1, 7258.0], [50.2, 7258.0], [50.3, 7276.0], [50.4, 7276.0], [50.5, 7379.0], [50.6, 7379.0], [50.7, 7423.0], [50.8, 7423.0], [50.9, 7441.0], [51.0, 7441.0], [51.1, 7443.0], [51.2, 7443.0], [51.3, 7486.0], [51.4, 7486.0], [51.5, 7514.0], [51.6, 7514.0], [51.7, 7560.0], [51.8, 7560.0], [51.9, 7578.0], [52.0, 7578.0], [52.1, 7643.0], [52.2, 7643.0], [52.3, 7674.0], [52.4, 7674.0], [52.5, 7717.0], [52.6, 7717.0], [52.7, 7751.0], [52.8, 7751.0], [52.9, 7757.0], [53.0, 7757.0], [53.1, 7761.0], [53.2, 7761.0], [53.3, 7763.0], [53.4, 7763.0], [53.5, 7803.0], [53.6, 7803.0], [53.7, 7811.0], [53.8, 7811.0], [53.9, 7852.0], [54.0, 7852.0], [54.1, 7863.0], [54.2, 7863.0], [54.3, 7869.0], [54.4, 7869.0], [54.5, 7964.0], [54.6, 7964.0], [54.7, 7967.0], [54.8, 7967.0], [54.9, 7991.0], [55.0, 7991.0], [55.1, 7994.0], [55.2, 7994.0], [55.3, 8028.0], [55.4, 8028.0], [55.5, 8029.0], [55.6, 8029.0], [55.7, 8059.0], [55.8, 8059.0], [55.9, 8081.0], [56.0, 8081.0], [56.1, 8089.0], [56.2, 8089.0], [56.3, 8093.0], [56.4, 8093.0], [56.5, 8128.0], [56.6, 8128.0], [56.7, 8129.0], [56.8, 8129.0], [56.9, 8145.0], [57.0, 8145.0], [57.1, 8156.0], [57.2, 8156.0], [57.3, 8180.0], [57.4, 8180.0], [57.5, 8224.0], [57.6, 8224.0], [57.7, 8241.0], [57.8, 8241.0], [57.9, 8247.0], [58.0, 8247.0], [58.1, 8249.0], [58.2, 8249.0], [58.3, 8255.0], [58.4, 8255.0], [58.5, 8260.0], [58.6, 8260.0], [58.7, 8293.0], [58.8, 8293.0], [58.9, 8301.0], [59.0, 8301.0], [59.1, 8313.0], [59.2, 8313.0], [59.3, 8336.0], [59.4, 8336.0], [59.5, 8357.0], [59.6, 8357.0], [59.7, 8377.0], [59.8, 8377.0], [59.9, 8383.0], [60.0, 8383.0], [60.1, 8405.0], [60.2, 8405.0], [60.3, 8482.0], [60.4, 8482.0], [60.5, 8498.0], [60.6, 8498.0], [60.7, 8500.0], [60.8, 8500.0], [60.9, 8514.0], [61.0, 8514.0], [61.1, 8519.0], [61.2, 8519.0], [61.3, 8555.0], [61.4, 8555.0], [61.5, 8564.0], [61.6, 8564.0], [61.7, 8619.0], [61.8, 8619.0], [61.9, 8654.0], [62.0, 8654.0], [62.1, 8668.0], [62.2, 8668.0], [62.3, 8692.0], [62.4, 8692.0], [62.5, 8706.0], [62.6, 8706.0], [62.7, 8707.0], [62.8, 8707.0], [62.9, 8726.0], [63.0, 8726.0], [63.1, 8740.0], [63.2, 8740.0], [63.3, 8740.0], [63.4, 8740.0], [63.5, 8756.0], [63.6, 8756.0], [63.7, 8759.0], [63.8, 8759.0], [63.9, 8774.0], [64.0, 8774.0], [64.1, 8809.0], [64.2, 8809.0], [64.3, 8930.0], [64.4, 8930.0], [64.5, 8985.0], [64.6, 8985.0], [64.7, 9004.0], [64.8, 9004.0], [64.9, 9006.0], [65.0, 9006.0], [65.1, 9019.0], [65.2, 9019.0], [65.3, 9035.0], [65.4, 9035.0], [65.5, 9058.0], [65.6, 9058.0], [65.7, 9092.0], [65.8, 9092.0], [65.9, 9111.0], [66.0, 9111.0], [66.1, 9126.0], [66.2, 9126.0], [66.3, 9150.0], [66.4, 9150.0], [66.5, 9183.0], [66.6, 9183.0], [66.7, 9204.0], [66.8, 9204.0], [66.9, 9240.0], [67.0, 9240.0], [67.1, 9352.0], [67.2, 9352.0], [67.3, 9428.0], [67.4, 9428.0], [67.5, 9487.0], [67.6, 9487.0], [67.7, 9496.0], [67.8, 9496.0], [67.9, 9531.0], [68.0, 9531.0], [68.1, 9584.0], [68.2, 9584.0], [68.3, 9677.0], [68.4, 9677.0], [68.5, 9718.0], [68.6, 9718.0], [68.7, 9720.0], [68.8, 9720.0], [68.9, 9801.0], [69.0, 9801.0], [69.1, 9879.0], [69.2, 9879.0], [69.3, 9901.0], [69.4, 9901.0], [69.5, 9937.0], [69.6, 9937.0], [69.7, 9972.0], [69.8, 9972.0], [69.9, 10003.0], [70.0, 10003.0], [70.1, 10072.0], [70.2, 10072.0], [70.3, 10223.0], [70.4, 10223.0], [70.5, 10443.0], [70.6, 10443.0], [70.7, 10570.0], [70.8, 10570.0], [70.9, 10571.0], [71.0, 10571.0], [71.1, 10590.0], [71.2, 10590.0], [71.3, 10690.0], [71.4, 10690.0], [71.5, 10967.0], [71.6, 10967.0], [71.7, 11194.0], [71.8, 11194.0], [71.9, 11356.0], [72.0, 11356.0], [72.1, 11416.0], [72.2, 11416.0], [72.3, 11507.0], [72.4, 11507.0], [72.5, 11787.0], [72.6, 11787.0], [72.7, 11964.0], [72.8, 11964.0], [72.9, 11990.0], [73.0, 11990.0], [73.1, 12006.0], [73.2, 12006.0], [73.3, 12013.0], [73.4, 12013.0], [73.5, 12017.0], [73.6, 12017.0], [73.7, 12101.0], [73.8, 12101.0], [73.9, 12274.0], [74.0, 12274.0], [74.1, 12322.0], [74.2, 12322.0], [74.3, 12445.0], [74.4, 12445.0], [74.5, 12478.0], [74.6, 12478.0], [74.7, 12520.0], [74.8, 12520.0], [74.9, 12611.0], [75.0, 12611.0], [75.1, 12667.0], [75.2, 12667.0], [75.3, 12670.0], [75.4, 12670.0], [75.5, 12712.0], [75.6, 12712.0], [75.7, 12772.0], [75.8, 12772.0], [75.9, 12799.0], [76.0, 12799.0], [76.1, 12819.0], [76.2, 12819.0], [76.3, 12854.0], [76.4, 12854.0], [76.5, 12860.0], [76.6, 12860.0], [76.7, 12955.0], [76.8, 12955.0], [76.9, 12995.0], [77.0, 12995.0], [77.1, 13032.0], [77.2, 13032.0], [77.3, 13040.0], [77.4, 13040.0], [77.5, 13048.0], [77.6, 13048.0], [77.7, 13093.0], [77.8, 13093.0], [77.9, 13128.0], [78.0, 13128.0], [78.1, 13140.0], [78.2, 13140.0], [78.3, 13195.0], [78.4, 13195.0], [78.5, 13197.0], [78.6, 13197.0], [78.7, 13220.0], [78.8, 13220.0], [78.9, 13231.0], [79.0, 13231.0], [79.1, 13237.0], [79.2, 13237.0], [79.3, 13253.0], [79.4, 13253.0], [79.5, 13256.0], [79.6, 13256.0], [79.7, 13266.0], [79.8, 13266.0], [79.9, 13275.0], [80.0, 13275.0], [80.1, 13303.0], [80.2, 13303.0], [80.3, 13324.0], [80.4, 13324.0], [80.5, 13339.0], [80.6, 13339.0], [80.7, 13383.0], [80.8, 13383.0], [80.9, 13387.0], [81.0, 13387.0], [81.1, 13387.0], [81.2, 13387.0], [81.3, 13388.0], [81.4, 13388.0], [81.5, 13492.0], [81.6, 13492.0], [81.7, 13503.0], [81.8, 13503.0], [81.9, 13511.0], [82.0, 13511.0], [82.1, 13615.0], [82.2, 13615.0], [82.3, 13616.0], [82.4, 13616.0], [82.5, 13631.0], [82.6, 13631.0], [82.7, 13710.0], [82.8, 13710.0], [82.9, 13740.0], [83.0, 13740.0], [83.1, 13755.0], [83.2, 13755.0], [83.3, 13799.0], [83.4, 13799.0], [83.5, 13873.0], [83.6, 13873.0], [83.7, 13878.0], [83.8, 13878.0], [83.9, 13882.0], [84.0, 13882.0], [84.1, 14006.0], [84.2, 14006.0], [84.3, 14057.0], [84.4, 14057.0], [84.5, 14059.0], [84.6, 14059.0], [84.7, 14096.0], [84.8, 14096.0], [84.9, 14135.0], [85.0, 14135.0], [85.1, 14178.0], [85.2, 14178.0], [85.3, 14196.0], [85.4, 14196.0], [85.5, 14242.0], [85.6, 14242.0], [85.7, 14369.0], [85.8, 14369.0], [85.9, 14476.0], [86.0, 14476.0], [86.1, 14489.0], [86.2, 14489.0], [86.3, 14577.0], [86.4, 14577.0], [86.5, 14593.0], [86.6, 14593.0], [86.7, 14981.0], [86.8, 14981.0], [86.9, 15005.0], [87.0, 15005.0], [87.1, 15011.0], [87.2, 15011.0], [87.3, 15019.0], [87.4, 15019.0], [87.5, 15050.0], [87.6, 15050.0], [87.7, 15094.0], [87.8, 15094.0], [87.9, 15165.0], [88.0, 15165.0], [88.1, 15345.0], [88.2, 15345.0], [88.3, 15686.0], [88.4, 15686.0], [88.5, 16031.0], [88.6, 16031.0], [88.7, 16123.0], [88.8, 16123.0], [88.9, 16178.0], [89.0, 16178.0], [89.1, 16789.0], [89.2, 16789.0], [89.3, 16996.0], [89.4, 16996.0], [89.5, 17924.0], [89.6, 17924.0], [89.7, 19261.0], [89.8, 19261.0], [89.9, 21845.0], [90.0, 21845.0], [90.1, 21959.0], [90.2, 21959.0], [90.3, 22022.0], [90.4, 22022.0], [90.5, 22538.0], [90.6, 22538.0], [90.7, 22578.0], [90.8, 22578.0], [90.9, 22750.0], [91.0, 22750.0], [91.1, 23072.0], [91.2, 23072.0], [91.3, 23094.0], [91.4, 23094.0], [91.5, 23132.0], [91.6, 23132.0], [91.7, 23205.0], [91.8, 23205.0], [91.9, 23346.0], [92.0, 23346.0], [92.1, 23558.0], [92.2, 23558.0], [92.3, 23616.0], [92.4, 23616.0], [92.5, 23660.0], [92.6, 23660.0], [92.7, 23735.0], [92.8, 23735.0], [92.9, 23806.0], [93.0, 23806.0], [93.1, 24050.0], [93.2, 24050.0], [93.3, 24051.0], [93.4, 24051.0], [93.5, 24059.0], [93.6, 24059.0], [93.7, 24294.0], [93.8, 24294.0], [93.9, 24534.0], [94.0, 24534.0], [94.1, 24545.0], [94.2, 24545.0], [94.3, 24555.0], [94.4, 24555.0], [94.5, 24619.0], [94.6, 24619.0], [94.7, 24865.0], [94.8, 24865.0], [94.9, 24913.0], [95.0, 24913.0], [95.1, 25166.0], [95.2, 25166.0], [95.3, 25288.0], [95.4, 25288.0], [95.5, 25464.0], [95.6, 25464.0], [95.7, 25629.0], [95.8, 25629.0], [95.9, 25935.0], [96.0, 25935.0], [96.1, 26009.0], [96.2, 26009.0], [96.3, 26053.0], [96.4, 26053.0], [96.5, 26397.0], [96.6, 26397.0], [96.7, 26577.0], [96.8, 26577.0], [96.9, 27322.0], [97.0, 27322.0], [97.1, 28287.0], [97.2, 28287.0], [97.3, 28352.0], [97.4, 28352.0], [97.5, 32838.0], [97.6, 32838.0], [97.7, 38935.0], [97.8, 38935.0], [97.9, 42581.0], [98.0, 42581.0], [98.1, 44913.0], [98.2, 44913.0], [98.3, 45197.0], [98.4, 45197.0], [98.5, 48072.0], [98.6, 48072.0], [98.7, 49951.0], [98.8, 49951.0], [98.9, 52664.0], [99.0, 52664.0], [99.1, 53467.0], [99.2, 53467.0], [99.3, 88336.0], [99.4, 88336.0], [99.5, 94558.0], [99.6, 94558.0], [99.7, 102670.0], [99.8, 102670.0], [99.9, 176186.0], [100.0, 176186.0]], "isOverall": false, "label": "login", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 245.0, "series": [{"data": [[8400.0, 1.0], [8500.0, 1.0], [8600.0, 1.0], [9000.0, 1.0], [10400.0, 1.0], [700.0, 3.0], [13800.0, 1.0], [900.0, 2.0], [15200.0, 1.0], [1000.0, 2.0], [16800.0, 1.0], [1100.0, 4.0], [1200.0, 14.0], [1300.0, 20.0], [1400.0, 19.0], [1500.0, 13.0], [1900.0, 2.0], [2000.0, 1.0], [2100.0, 2.0], [2200.0, 1.0], [2400.0, 5.0], [2500.0, 3.0], [2600.0, 4.0], [2800.0, 2.0], [2700.0, 1.0], [3000.0, 1.0], [200.0, 213.0], [3600.0, 1.0], [3800.0, 1.0], [3900.0, 1.0], [4000.0, 1.0], [4200.0, 1.0], [4300.0, 1.0], [300.0, 31.0], [5300.0, 1.0], [5200.0, 2.0], [400.0, 131.0], [7800.0, 1.0], [8000.0, 1.0], [500.0, 7.0]], "isOverall": false, "label": "GetBookingIds ", "isController": false}, {"data": [[8600.0, 1.0], [9700.0, 1.0], [10900.0, 1.0], [700.0, 2.0], [12800.0, 1.0], [800.0, 1.0], [900.0, 3.0], [1000.0, 2.0], [1100.0, 5.0], [1200.0, 9.0], [19900.0, 1.0], [1300.0, 23.0], [1400.0, 20.0], [1500.0, 15.0], [1600.0, 3.0], [1700.0, 1.0], [1800.0, 1.0], [2000.0, 1.0], [2100.0, 2.0], [2300.0, 1.0], [2400.0, 1.0], [2500.0, 3.0], [40100.0, 1.0], [39600.0, 1.0], [2600.0, 2.0], [2800.0, 1.0], [2700.0, 1.0], [2900.0, 2.0], [3000.0, 1.0], [200.0, 178.0], [3300.0, 2.0], [3500.0, 1.0], [3700.0, 1.0], [3800.0, 2.0], [3900.0, 1.0], [4100.0, 1.0], [4400.0, 1.0], [300.0, 52.0], [4800.0, 1.0], [4900.0, 2.0], [5200.0, 1.0], [5400.0, 1.0], [400.0, 144.0], [6600.0, 1.0], [6700.0, 1.0], [500.0, 3.0]], "isOverall": false, "label": "CreateBooking ", "isController": false}, {"data": [[8500.0, 1.0], [8400.0, 1.0], [131200.0, 1.0], [9500.0, 1.0], [700.0, 2.0], [800.0, 3.0], [900.0, 1.0], [14800.0, 1.0], [1000.0, 3.0], [1100.0, 6.0], [1200.0, 20.0], [1300.0, 14.0], [1400.0, 16.0], [1500.0, 10.0], [1600.0, 2.0], [1700.0, 1.0], [2100.0, 5.0], [2200.0, 2.0], [2300.0, 1.0], [2400.0, 2.0], [2500.0, 4.0], [2600.0, 4.0], [200.0, 245.0], [3200.0, 1.0], [3400.0, 1.0], [3600.0, 2.0], [3700.0, 1.0], [3800.0, 1.0], [3900.0, 1.0], [4100.0, 1.0], [4500.0, 1.0], [4600.0, 1.0], [300.0, 39.0], [400.0, 100.0], [500.0, 5.0]], "isOverall": false, "label": "UpdateBooking ", "isController": false}, {"data": [[176100.0, 1.0], [88300.0, 1.0], [38900.0, 1.0], [42500.0, 1.0], [44900.0, 1.0], [45100.0, 1.0], [49900.0, 1.0], [102600.0, 1.0], [1300.0, 3.0], [1400.0, 6.0], [1500.0, 4.0], [1600.0, 12.0], [1700.0, 4.0], [1900.0, 4.0], [2000.0, 3.0], [2100.0, 4.0], [2200.0, 3.0], [2300.0, 3.0], [2400.0, 4.0], [2500.0, 5.0], [2600.0, 7.0], [2700.0, 4.0], [2800.0, 4.0], [2900.0, 3.0], [3000.0, 4.0], [3100.0, 3.0], [3200.0, 7.0], [3300.0, 6.0], [3400.0, 1.0], [3500.0, 3.0], [3700.0, 6.0], [3600.0, 1.0], [3800.0, 6.0], [3900.0, 4.0], [4000.0, 8.0], [4100.0, 4.0], [4300.0, 2.0], [4200.0, 4.0], [4600.0, 10.0], [4500.0, 9.0], [4400.0, 3.0], [4800.0, 5.0], [4700.0, 4.0], [5000.0, 5.0], [5100.0, 5.0], [4900.0, 4.0], [5300.0, 5.0], [5200.0, 5.0], [5400.0, 2.0], [5600.0, 3.0], [5500.0, 5.0], [5800.0, 5.0], [5700.0, 2.0], [6100.0, 3.0], [6000.0, 2.0], [5900.0, 3.0], [94500.0, 1.0], [6300.0, 6.0], [6200.0, 1.0], [6400.0, 5.0], [6500.0, 3.0], [6600.0, 4.0], [6900.0, 3.0], [6800.0, 4.0], [6700.0, 3.0], [7000.0, 6.0], [7100.0, 2.0], [7200.0, 3.0], [7400.0, 4.0], [7300.0, 1.0], [7500.0, 3.0], [7600.0, 2.0], [7700.0, 5.0], [7900.0, 4.0], [7800.0, 5.0], [8000.0, 6.0], [8100.0, 5.0], [8300.0, 6.0], [8600.0, 4.0], [8200.0, 7.0], [8700.0, 8.0], [8400.0, 3.0], [8500.0, 5.0], [9000.0, 6.0], [8800.0, 1.0], [9100.0, 4.0], [8900.0, 2.0], [9200.0, 2.0], [9400.0, 3.0], [9300.0, 1.0], [9500.0, 2.0], [9700.0, 2.0], [9600.0, 1.0], [9900.0, 3.0], [9800.0, 2.0], [10200.0, 1.0], [10000.0, 2.0], [10400.0, 1.0], [10500.0, 3.0], [10600.0, 1.0], [11100.0, 1.0], [10900.0, 1.0], [11500.0, 1.0], [11400.0, 1.0], [11700.0, 1.0], [11300.0, 1.0], [12000.0, 3.0], [11900.0, 2.0], [12200.0, 1.0], [12100.0, 1.0], [12700.0, 3.0], [12500.0, 1.0], [12600.0, 3.0], [12400.0, 2.0], [12300.0, 1.0], [13100.0, 4.0], [13200.0, 7.0], [12800.0, 3.0], [13300.0, 7.0], [12900.0, 2.0], [13000.0, 4.0], [13600.0, 3.0], [13700.0, 4.0], [13500.0, 2.0], [13400.0, 1.0], [13800.0, 3.0], [14000.0, 4.0], [14100.0, 3.0], [14200.0, 1.0], [14300.0, 1.0], [14400.0, 2.0], [14500.0, 2.0], [15000.0, 5.0], [15100.0, 1.0], [14900.0, 1.0], [15300.0, 1.0], [15600.0, 1.0], [16100.0, 2.0], [16000.0, 1.0], [16900.0, 1.0], [16700.0, 1.0], [17900.0, 1.0], [19200.0, 1.0], [22000.0, 1.0], [21900.0, 1.0], [22500.0, 2.0], [21800.0, 1.0], [23000.0, 2.0], [23500.0, 1.0], [23100.0, 1.0], [23200.0, 1.0], [22700.0, 1.0], [23300.0, 1.0], [23600.0, 2.0], [24000.0, 3.0], [24500.0, 3.0], [23800.0, 1.0], [23700.0, 1.0], [24200.0, 1.0], [25200.0, 1.0], [24900.0, 1.0], [25400.0, 1.0], [24600.0, 1.0], [25100.0, 1.0], [24800.0, 1.0], [26000.0, 2.0], [25900.0, 1.0], [26300.0, 1.0], [25600.0, 1.0], [26500.0, 1.0], [27300.0, 1.0], [28300.0, 1.0], [28200.0, 1.0], [32800.0, 1.0], [48000.0, 1.0], [52600.0, 1.0], [53400.0, 1.0]], "isOverall": false, "label": "login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 176100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 217.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1134.0, "series": [{"data": [[0.0, 1134.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 217.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 649.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.72210098E12, "maxY": 231.8191598360652, "series": [{"data": [[1.72210104E12, 8.66666666666667], [1.7221011E12, 2.8], [1.72210098E12, 231.8191598360652], [1.72210116E12, 1.0]], "isOverall": false, "label": "BookingApplication", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72210116E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 229.0, "minX": 1.0, "maxY": 176186.0, "series": [{"data": [[3.0, 260.0], [4.0, 263.0], [5.0, 259.0], [6.0, 264.0], [8.0, 766.5], [9.0, 236.0], [11.0, 355.5], [12.0, 523.0], [13.0, 253.0], [15.0, 495.5], [16.0, 268.0], [18.0, 268.0], [21.0, 1400.5], [22.0, 584.0], [24.0, 246.0], [26.0, 244.5], [28.0, 913.0], [29.0, 245.0], [32.0, 756.6666666666666], [37.0, 628.0], [36.0, 250.5], [42.0, 592.6666666666666], [44.0, 250.0], [47.0, 16897.0], [49.0, 329.6666666666667], [48.0, 233.0], [51.0, 246.0], [57.0, 435.0], [56.0, 5349.0], [60.0, 254.0], [63.0, 260.5], [62.0, 247.0], [65.0, 243.0], [71.0, 261.0], [69.0, 775.5], [68.0, 254.0], [75.0, 1234.0], [74.0, 234.0], [79.0, 254.0], [78.0, 269.0], [77.0, 261.5], [83.0, 248.0], [82.0, 260.0], [81.0, 261.0], [86.0, 400.5], [90.0, 841.75], [89.0, 253.0], [95.0, 255.66666666666666], [93.0, 254.0], [97.0, 253.0], [96.0, 258.0], [103.0, 259.0], [102.0, 261.0], [100.0, 2761.5], [106.0, 1347.5], [111.0, 251.5], [110.0, 246.33333333333334], [109.0, 247.0], [108.0, 260.0], [114.0, 265.0], [113.0, 8688.0], [112.0, 4783.0], [123.0, 8338.5], [122.0, 253.33333333333334], [120.0, 254.5], [127.0, 623.5], [125.0, 1312.0], [129.0, 384.0], [130.0, 348.0], [131.0, 259.0], [137.0, 408.0], [138.0, 417.0], [141.0, 255.0], [140.0, 423.0], [139.0, 252.0], [148.0, 1532.6666666666667], [151.0, 262.0], [150.0, 261.0], [149.0, 252.0], [147.0, 263.0], [146.0, 425.6666666666667], [145.0, 761.0], [159.0, 355.0], [157.0, 250.0], [154.0, 250.0], [152.0, 246.0], [162.0, 456.0], [167.0, 246.5], [166.0, 258.3333333333333], [165.0, 593.0], [164.0, 252.5], [161.0, 253.0], [169.0, 352.0], [171.0, 1242.5], [174.0, 444.0], [170.0, 260.0], [180.0, 363.0], [181.0, 434.6666666666667], [182.0, 337.5], [183.0, 259.8], [179.0, 267.0], [177.0, 254.0], [185.0, 335.5], [189.0, 344.0], [191.0, 243.0], [190.0, 622.6666666666666], [186.0, 251.0], [199.0, 259.0], [198.0, 262.0], [197.0, 263.0], [196.0, 250.0], [195.0, 2776.333333333333], [204.0, 449.0], [205.0, 442.0], [207.0, 252.0], [206.0, 9080.0], [201.0, 248.4], [211.0, 342.0], [212.0, 379.0], [214.0, 266.0], [208.0, 370.5], [216.0, 459.0], [218.0, 406.0], [219.0, 317.6666666666667], [221.0, 436.0], [223.0, 2162.0], [222.0, 252.0], [217.0, 1348.0], [225.0, 570.5], [229.0, 719.0], [231.0, 596.3333333333333], [230.0, 1317.0], [227.0, 249.0], [232.0, 450.0], [233.0, 1347.3333333333333], [234.0, 524.2], [236.0, 1243.0], [238.0, 259.0], [239.0, 260.0], [240.0, 293.0], [245.0, 2498.0], [246.0, 954.0], [242.0, 486.00000000000006], [251.0, 1922.0], [252.0, 482.8], [254.0, 667.0], [250.0, 243.0], [248.0, 2317.0], [256.0, 1902.0], [260.0, 1424.0], [261.0, 2975.6666666666665], [262.0, 434.0], [264.0, 350.5], [267.0, 452.0], [268.0, 352.5], [258.0, 234.0], [257.0, 2101.6], [269.0, 2484.0], [266.0, 252.0], [273.0, 434.5], [275.0, 1416.5], [276.0, 676.0], [282.0, 463.0], [285.0, 363.0], [281.0, 395.0], [278.0, 397.0], [272.0, 337.0], [277.0, 422.5], [274.0, 438.0], [300.0, 390.0], [290.0, 464.0], [291.0, 2188.0], [294.0, 1434.0], [292.0, 354.0], [295.0, 345.6666666666667], [289.0, 357.0], [296.0, 380.0], [299.0, 932.0], [301.0, 1416.6666666666667], [302.0, 438.5], [298.0, 331.0], [297.0, 886.0], [304.0, 354.0], [311.0, 927.5], [313.0, 428.0], [314.0, 1371.0], [316.0, 793.5], [317.0, 1455.0], [312.0, 1799.9999999999998], [307.0, 673.3333333333334], [334.0, 455.0], [323.0, 332.3333333333333], [325.0, 1276.0], [326.0, 442.0], [330.0, 447.0], [331.0, 1303.0], [335.0, 441.0], [329.0, 442.0], [327.0, 445.0], [321.0, 274.0], [320.0, 251.0], [322.0, 301.0], [338.0, 462.0], [340.0, 961.5], [341.0, 448.25], [342.0, 1397.0], [351.0, 416.0], [349.0, 2116.0], [347.0, 449.0], [339.0, 457.6666666666667], [336.0, 796.4666666666666], [353.0, 454.0], [352.0, 1177.6666666666667], [354.0, 1483.0], [356.0, 449.0], [357.0, 435.0], [358.0, 1579.0], [359.0, 1011.4], [367.0, 4735.0], [360.0, 431.0], [364.0, 348.6666666666667], [363.0, 378.6666666666667], [362.0, 565.75], [381.0, 1093.25], [379.0, 447.0], [380.0, 452.0], [382.0, 1483.5], [383.0, 1740.5], [377.0, 1854.5], [376.0, 593.1666666666666], [375.0, 248.33333333333334], [374.0, 245.0], [373.0, 256.5], [372.0, 243.0], [386.0, 2013.5], [392.0, 1550.0], [394.0, 1538.0], [396.0, 974.5], [399.0, 1586.6666666666665], [391.0, 1429.0], [389.0, 806.6666666666666], [387.0, 2841.0], [401.0, 628.0], [1.0, 262.0]], "isOverall": false, "label": "GetBookingIds ", "isController": false}, {"data": [[224.12800000000001, 862.6640000000006]], "isOverall": false, "label": "GetBookingIds -Aggregated", "isController": false}, {"data": [[3.0, 771.0], [4.0, 787.0], [5.0, 909.0], [6.0, 263.0], [8.0, 384.0], [9.0, 234.0], [11.0, 19937.5], [12.0, 40190.0], [13.0, 256.0], [15.0, 2224.5], [16.0, 267.0], [19.0, 268.0], [26.0, 519.6], [28.0, 254.0], [29.0, 249.5], [33.0, 2711.0], [32.0, 252.0], [37.0, 255.0], [40.0, 247.0], [42.0, 1850.75], [44.0, 992.3333333333334], [46.0, 247.5], [49.0, 3817.333333333333], [51.0, 334.6666666666667], [55.0, 245.0], [57.0, 1051.75], [61.0, 19907.0], [63.0, 260.25], [62.0, 964.0], [66.0, 241.0], [64.0, 6653.0], [69.0, 2902.0], [75.0, 465.0], [74.0, 263.0], [73.0, 254.0], [79.0, 261.5], [82.0, 1409.0], [80.0, 259.0], [90.0, 245.5], [89.0, 257.0], [88.0, 3490.5], [95.0, 248.33333333333334], [94.0, 259.3333333333333], [99.0, 256.0], [98.0, 247.0], [101.0, 253.0], [100.0, 824.0], [106.0, 1185.0], [110.0, 580.2], [111.0, 263.0], [114.0, 251.0], [113.0, 255.0], [112.0, 248.0], [117.0, 411.0], [116.0, 256.0], [123.0, 256.25], [120.0, 1379.0], [127.0, 391.0], [125.0, 1260.0], [131.0, 325.5], [132.0, 5008.5], [139.0, 411.0], [142.0, 455.0], [143.0, 453.0], [140.0, 262.0], [149.0, 1191.0], [151.0, 445.0], [150.0, 234.0], [148.0, 254.0], [147.0, 262.0], [146.0, 251.0], [152.0, 560.5555555555557], [155.0, 331.0], [157.0, 767.6666666666667], [159.0, 261.0], [158.0, 1299.0], [153.0, 255.0], [160.0, 436.0], [162.0, 330.5], [166.0, 587.75], [167.0, 254.0], [165.0, 256.0], [164.0, 247.0], [163.0, 243.0], [161.0, 260.0], [169.0, 446.0], [175.0, 445.0], [174.0, 249.0], [171.0, 242.0], [170.0, 453.0], [176.0, 464.0], [180.0, 358.0], [181.0, 437.0], [182.0, 254.0], [178.0, 256.0], [177.0, 1137.6666666666667], [185.0, 372.0], [187.0, 718.6666666666667], [186.0, 450.0], [190.0, 253.4], [189.0, 255.66666666666666], [184.0, 257.5], [192.0, 343.0], [196.0, 821.0], [199.0, 359.5], [198.0, 258.0], [197.0, 246.0], [195.0, 251.0], [200.0, 441.0], [203.0, 343.75], [207.0, 843.0], [204.0, 8679.0], [211.0, 1878.0], [213.0, 412.0], [215.0, 629.3333333333333], [214.0, 243.0], [210.0, 262.0], [208.0, 690.3333333333334], [217.0, 1452.0], [223.0, 1535.0], [231.0, 882.0], [229.0, 261.0], [225.0, 253.5], [232.0, 1288.0], [233.0, 668.25], [235.0, 1096.6666666666667], [238.0, 450.0], [234.0, 4454.0], [241.0, 898.0], [242.0, 796.5], [246.0, 3414.0], [245.0, 650.0], [249.0, 331.0], [250.0, 358.0], [251.0, 317.25], [252.0, 981.1666666666666], [253.0, 348.5], [254.0, 797.0], [255.0, 265.0], [257.0, 1219.2], [259.0, 394.0], [260.0, 401.0], [265.0, 418.0], [267.0, 1538.0], [268.0, 349.0], [269.0, 240.0], [262.0, 257.0], [261.0, 245.0], [272.0, 321.0], [277.0, 435.6666666666667], [280.0, 455.0], [282.0, 770.6666666666667], [284.0, 639.4], [287.0, 441.0], [276.0, 428.0], [275.0, 442.0], [291.0, 334.8], [296.0, 2381.5], [292.0, 452.0], [297.0, 460.0], [298.0, 439.0], [299.0, 1436.0], [301.0, 952.5], [295.0, 348.4], [294.0, 346.25], [290.0, 337.0], [289.0, 533.0], [288.0, 381.0], [318.0, 1176.75], [306.0, 417.0], [311.0, 702.0], [310.0, 295.0], [308.0, 464.0], [309.0, 778.2], [312.0, 1186.75], [313.0, 2580.0], [314.0, 3579.0], [319.0, 448.0], [316.0, 1408.5], [307.0, 333.0], [320.0, 467.0], [323.0, 353.0], [324.0, 2674.0], [325.0, 440.5], [326.0, 2713.0], [327.0, 448.0], [328.0, 1648.0], [329.0, 447.0], [330.0, 459.0], [334.0, 442.0], [338.0, 433.0], [340.0, 1033.0], [341.0, 428.0], [342.0, 1106.0], [343.0, 454.5], [336.0, 598.4285714285714], [345.0, 445.0], [344.0, 463.5], [347.0, 440.0], [346.0, 452.0], [350.0, 1042.0], [351.0, 1570.8], [349.0, 1054.25], [348.0, 1165.5], [339.0, 445.3333333333333], [364.0, 682.1666666666666], [356.0, 1523.0], [358.0, 1451.0], [360.0, 1533.0], [361.0, 1551.0], [363.0, 1470.0], [362.0, 407.0], [359.0, 441.0], [354.0, 1394.0], [353.0, 756.6666666666666], [382.0, 451.0], [370.0, 297.5], [372.0, 629.6666666666667], [373.0, 1088.7142857142858], [383.0, 1577.0], [381.0, 803.5], [380.0, 439.6666666666667], [379.0, 1003.5], [377.0, 250.0], [376.0, 1705.0000000000002], [396.0, 410.0], [385.0, 1451.0], [384.0, 439.6666666666667], [394.0, 1250.2857142857142], [399.0, 468.5], [397.0, 366.0], [387.0, 445.0], [386.0, 441.6666666666667], [393.0, 442.0], [391.0, 442.0], [388.0, 480.0], [401.0, 248.0], [400.0, 859.5], [1.0, 942.0]], "isOverall": false, "label": "CreateBooking ", "isController": false}, {"data": [[229.54800000000031, 997.7479999999995]], "isOverall": false, "label": "CreateBooking -Aggregated", "isController": false}, {"data": [[2.0, 131285.0], [3.0, 261.0], [4.0, 267.0], [5.0, 260.0], [6.0, 264.0], [7.0, 504.0], [8.0, 269.0], [9.0, 237.0], [10.0, 233.0], [11.0, 253.0], [12.0, 266.0], [13.0, 256.0], [14.0, 1603.0], [15.0, 495.0], [16.0, 268.0], [17.0, 1734.0], [18.0, 270.0], [19.0, 793.0], [20.0, 257.0], [21.0, 261.0], [22.0, 250.0], [23.0, 246.0], [24.0, 1022.0], [25.0, 246.0], [26.0, 1652.0], [27.0, 251.0], [28.0, 251.0], [29.0, 242.0], [30.0, 507.0], [31.0, 248.0], [33.0, 499.0], [32.0, 502.0], [35.0, 247.0], [34.0, 258.0], [37.0, 243.0], [36.0, 260.0], [39.0, 252.0], [38.0, 260.0], [41.0, 265.0], [40.0, 261.0], [43.0, 251.0], [42.0, 257.0], [45.0, 229.0], [44.0, 510.0], [47.0, 241.0], [46.0, 236.0], [49.0, 241.0], [48.0, 257.0], [51.0, 242.0], [50.0, 2291.0], [53.0, 247.0], [55.0, 254.0], [54.0, 256.0], [57.0, 501.0], [56.0, 245.0], [59.0, 14896.0], [58.0, 252.0], [61.0, 249.0], [60.0, 1285.0], [63.0, 266.0], [62.0, 266.0], [67.0, 257.0], [66.0, 255.0], [65.0, 244.0], [64.0, 2637.0], [71.0, 2136.0], [70.0, 814.0], [69.0, 263.0], [68.0, 252.0], [75.0, 1218.0], [74.0, 1181.0], [73.0, 250.0], [72.0, 234.0], [79.0, 263.0], [78.0, 255.0], [77.0, 272.0], [76.0, 268.0], [83.0, 253.0], [82.0, 1230.0], [81.0, 244.0], [80.0, 1594.0], [87.0, 244.0], [86.0, 261.0], [85.0, 266.0], [84.0, 2146.0], [91.0, 266.0], [90.0, 1159.0], [89.0, 256.0], [88.0, 240.0], [95.0, 256.0], [94.0, 1334.0], [93.0, 254.0], [92.0, 248.0], [99.0, 263.0], [98.0, 261.0], [97.0, 242.0], [96.0, 259.0], [103.0, 252.0], [102.0, 250.0], [101.0, 259.0], [100.0, 1480.0], [107.0, 254.0], [106.0, 256.0], [105.0, 253.0], [104.0, 241.0], [111.0, 257.0], [110.0, 2316.0], [109.0, 258.0], [108.0, 260.0], [115.0, 244.0], [114.0, 263.0], [113.0, 1235.0], [112.0, 1221.0], [119.0, 1267.0], [118.0, 269.0], [117.0, 1417.0], [116.0, 834.0], [123.0, 1213.0], [122.0, 251.0], [121.0, 254.0], [120.0, 249.0], [127.0, 264.0], [126.0, 755.0], [125.0, 256.0], [124.0, 262.0], [135.0, 259.0], [134.0, 258.0], [133.0, 268.0], [132.0, 253.0], [131.0, 258.0], [130.0, 263.0], [129.0, 251.0], [128.0, 1245.0], [143.0, 256.0], [142.0, 249.0], [141.0, 263.0], [140.0, 258.0], [139.0, 263.0], [138.0, 259.5], [136.0, 255.0], [151.0, 246.0], [150.0, 253.0], [149.0, 967.0], [148.0, 260.0], [147.0, 245.0], [146.0, 261.0], [145.0, 259.0], [144.0, 250.0], [152.0, 346.0], [156.0, 313.5], [157.0, 335.0], [159.0, 256.0], [158.0, 250.0], [155.0, 261.0], [154.0, 251.0], [153.0, 252.0], [167.0, 343.0], [166.0, 245.0], [165.0, 256.0], [164.0, 260.0], [163.0, 258.0], [162.0, 242.0], [161.0, 1134.0], [160.0, 258.0], [175.0, 243.0], [174.0, 249.0], [173.0, 265.0], [172.0, 896.0], [171.0, 260.0], [170.0, 257.0], [169.0, 8477.0], [168.0, 1298.0], [181.0, 689.8], [180.0, 2052.0], [183.0, 261.0], [182.0, 257.0], [179.0, 252.0], [178.0, 252.0], [177.0, 249.0], [176.0, 260.0], [186.0, 345.0], [187.0, 454.0], [189.0, 355.5], [191.0, 261.0], [190.0, 264.0], [188.0, 241.0], [185.0, 246.0], [184.0, 252.0], [196.0, 353.0], [199.0, 350.0], [198.0, 247.0], [197.0, 250.0], [195.0, 245.0], [194.0, 256.0], [193.0, 255.0], [192.0, 245.0], [207.0, 255.0], [206.0, 258.0], [205.0, 9538.0], [204.0, 270.0], [203.0, 255.0], [202.0, 254.0], [201.0, 269.0], [200.0, 261.0], [208.0, 327.5], [215.0, 237.0], [214.0, 258.0], [213.0, 776.5], [211.0, 258.0], [210.0, 250.0], [209.0, 259.0], [223.0, 263.0], [222.0, 2696.0], [221.0, 257.0], [220.0, 270.0], [219.0, 797.5], [217.0, 265.0], [216.0, 249.0], [226.0, 358.0], [225.0, 354.0], [230.0, 643.3333333333334], [231.0, 248.0], [229.0, 1317.0], [228.0, 263.0], [227.0, 2634.0], [224.0, 251.0], [234.0, 961.0], [235.0, 447.0], [236.0, 913.6666666666666], [237.0, 2554.5], [239.0, 268.5], [238.0, 267.0], [233.0, 250.0], [232.0, 262.0], [245.0, 266.5], [247.0, 256.0], [246.0, 1306.0], [244.0, 256.0], [242.0, 233.0], [241.0, 257.0], [240.0, 3293.0], [250.0, 303.5], [253.0, 561.0], [252.0, 310.3333333333333], [255.0, 249.0], [254.0, 8578.0], [251.0, 249.0], [249.0, 243.0], [248.0, 246.0], [268.0, 381.3333333333333], [260.0, 819.5], [259.0, 320.0], [258.0, 1179.0], [261.0, 920.3333333333333], [263.0, 238.0], [257.0, 253.0], [256.0, 253.0], [262.0, 246.0], [265.0, 2144.0], [267.0, 362.0], [266.0, 261.0], [270.0, 839.5], [269.0, 247.0], [271.0, 245.0], [264.0, 241.0], [286.0, 369.0], [279.0, 432.0], [275.0, 1003.0], [274.0, 453.0], [273.0, 461.0], [272.0, 261.0], [276.0, 960.5], [278.0, 2542.0], [277.0, 431.0], [287.0, 367.0], [281.0, 1978.0], [285.0, 371.0], [284.0, 361.0], [283.0, 393.0], [282.0, 2488.0], [290.0, 404.5], [293.0, 783.0], [292.0, 1539.0], [295.0, 330.0], [289.0, 360.0], [288.0, 1284.0], [294.0, 334.0], [296.0, 866.0], [301.0, 387.5], [303.0, 319.0], [302.0, 324.0], [300.0, 327.0], [291.0, 345.0], [298.0, 319.0], [297.0, 349.0], [319.0, 257.0], [309.0, 379.0], [308.0, 286.0], [310.0, 288.0], [314.0, 346.5], [315.0, 877.0], [317.0, 373.5], [318.0, 412.25], [316.0, 268.0], [307.0, 2421.0], [306.0, 307.0], [305.0, 1533.0], [304.0, 315.0], [311.0, 287.0], [313.0, 248.0], [312.0, 292.0], [333.0, 1470.0], [320.0, 722.6666666666666], [322.0, 295.0], [321.0, 283.0], [326.0, 746.3333333333334], [325.0, 1227.0], [324.0, 1376.0], [327.0, 767.3333333333334], [329.0, 789.6666666666666], [335.0, 449.0], [334.0, 437.0], [332.0, 445.0], [323.0, 292.0], [331.0, 445.0], [330.0, 2565.0], [349.0, 940.5], [341.0, 672.5], [340.0, 440.0], [342.0, 431.5], [350.0, 1823.3333333333333], [351.0, 466.0], [348.0, 1172.0], [339.0, 1503.0], [338.0, 455.0], [337.0, 449.0], [336.0, 444.0], [343.0, 439.0], [347.0, 428.0], [346.0, 430.0], [345.0, 3979.0], [344.0, 463.0], [364.0, 827.0], [352.0, 459.6666666666667], [354.0, 432.0], [353.0, 452.0], [359.0, 1436.0], [358.0, 415.0], [356.0, 638.8], [357.0, 1027.3333333333333], [367.0, 307.0], [365.0, 309.0], [363.0, 383.0], [362.0, 466.5], [360.0, 446.0], [383.0, 442.0], [373.0, 303.0], [372.0, 256.0], [374.0, 267.0], [379.0, 450.0], [382.0, 4508.0], [381.0, 2619.0], [380.0, 432.0], [371.0, 269.0], [370.0, 261.0], [369.0, 282.0], [368.0, 292.0], [375.0, 252.0], [378.0, 1224.0], [377.0, 263.0], [376.0, 269.0], [399.0, 828.0], [385.0, 933.5], [388.0, 975.0], [389.0, 1598.0], [391.0, 1491.0], [384.0, 1490.0], [390.0, 441.0], [394.0, 2520.0], [396.0, 980.75], [387.0, 420.0], [386.0, 467.0], [398.0, 807.5], [397.0, 2196.0], [395.0, 468.0], [393.0, 3705.0], [392.0, 1419.0], [402.0, 255.0], [401.0, 4129.0], [400.0, 335.0], [1.0, 265.0]], "isOverall": false, "label": "UpdateBooking ", "isController": false}, {"data": [[218.03600000000012, 962.3679999999997]], "isOverall": false, "label": "UpdateBooking -Aggregated", "isController": false}, {"data": [[3.0, 102670.0], [4.0, 94558.0], [5.0, 88336.0], [6.0, 53467.0], [8.0, 51307.5], [10.0, 44913.0], [11.0, 48072.0], [13.0, 45197.0], [15.0, 40758.0], [17.0, 28287.0], [21.0, 32838.0], [26.0, 24051.0], [28.0, 26598.0], [29.0, 25052.0], [30.0, 26397.0], [34.0, 23232.0], [42.0, 23242.5], [44.0, 25935.0], [46.0, 24534.0], [49.0, 25758.5], [51.0, 23950.0], [50.0, 26009.0], [55.0, 24302.0], [57.0, 23055.0], [63.0, 20180.57142857143], [65.0, 22022.0], [68.0, 14593.0], [75.0, 15050.0], [78.0, 17924.0], [76.0, 19261.0], [83.0, 14196.0], [82.0, 13292.5], [87.0, 1534.0], [85.0, 16178.0], [89.0, 1488.0], [90.0, 14577.0], [95.0, 12860.0], [94.0, 13645.0], [96.0, 1349.5], [99.0, 14178.0], [98.0, 12101.0], [97.0, 13509.0], [107.0, 1429.0], [106.0, 15005.0], [105.0, 15019.0], [104.0, 13511.0], [110.0, 16996.0], [109.0, 13031.0], [112.0, 5638.666666666666], [114.0, 14369.0], [118.0, 10666.4], [119.0, 1593.0], [116.0, 16031.0], [120.0, 10067.25], [123.0, 9972.0], [121.0, 13093.0], [127.0, 13337.0], [126.0, 12669.0], [125.0, 11356.0], [129.0, 1769.0], [131.0, 1610.0], [134.0, 2428.0], [135.0, 2216.0], [136.0, 1984.0], [137.0, 1613.0], [142.0, 1620.0], [140.0, 13197.0], [144.0, 7092.0], [146.0, 2301.0], [149.0, 2762.0], [150.0, 2464.0], [151.0, 1647.0], [148.0, 13796.0], [147.0, 9901.0], [156.0, 1996.3333333333333], [155.0, 8063.0], [158.0, 2857.0], [159.0, 1879.5], [157.0, 9126.0], [154.0, 13048.0], [153.0, 13882.0], [152.0, 14006.0], [165.0, 7977.5], [167.0, 10895.0], [166.0, 12239.0], [164.0, 10693.333333333334], [163.0, 14813.0], [162.0, 11023.5], [168.0, 3197.5], [171.0, 6190.0], [172.0, 3046.0], [173.0, 8028.0], [170.0, 12995.0], [169.0, 12520.0], [179.0, 2605.0], [180.0, 4896.5], [181.0, 3108.3333333333335], [183.0, 9204.0], [182.0, 13388.0], [178.0, 8482.0], [184.0, 2583.5], [185.0, 7914.0], [186.0, 5827.333333333334], [187.0, 3479.0], [191.0, 8371.25], [190.0, 9531.0], [189.0, 15011.0], [193.0, 2200.0], [196.0, 5373.5], [199.0, 9881.166666666666], [198.0, 13256.0], [197.0, 13040.0], [195.0, 13287.0], [201.0, 7020.75], [207.0, 14476.0], [204.0, 7852.0], [211.0, 3959.0], [214.0, 2981.0], [209.0, 10666.5], [208.0, 10328.5], [216.0, 2847.3333333333335], [218.0, 3362.0], [223.0, 7486.0], [219.0, 12185.5], [226.0, 2568.0], [231.0, 11554.666666666666], [230.0, 6724.0], [229.0, 12799.0], [225.0, 9970.5], [235.0, 3321.0], [234.0, 8082.0], [236.0, 3778.5], [237.0, 9725.666666666666], [238.0, 3320.0], [239.0, 3506.5], [241.0, 2780.0], [244.0, 5078.0], [246.0, 8633.0], [245.0, 7071.0], [242.0, 10754.0], [249.0, 2679.0], [250.0, 3752.0], [252.0, 4134.0], [253.0, 4503.0], [254.0, 8129.0], [251.0, 6977.5], [268.0, 3547.6666666666665], [256.0, 2823.0], [260.0, 1567.0], [261.0, 7964.0], [259.0, 6086.5], [258.0, 9423.0], [257.0, 7863.0], [264.0, 4783.0], [267.0, 5419.0], [269.0, 5355.5], [270.0, 4006.3333333333335], [271.0, 2423.0], [272.0, 5259.0], [275.0, 5998.5], [278.0, 5057.0], [279.0, 6315.5], [280.0, 4621.0], [286.0, 5475.0], [282.0, 7751.0], [277.0, 9542.5], [273.0, 9058.0], [289.0, 5289.5], [290.0, 6519.0], [294.0, 5518.0], [300.0, 8291.5], [303.0, 4992.0], [301.0, 8592.25], [296.0, 7300.0], [295.0, 7242.666666666667], [288.0, 6589.5], [292.0, 8970.5], [316.0, 3305.0], [305.0, 7108.0], [304.0, 4387.0], [306.0, 4922.0], [307.0, 9092.0], [309.0, 6466.571428571428], [310.0, 7766.666666666667], [311.0, 6937.0], [312.0, 8245.666666666666], [313.0, 6110.0], [315.0, 4308.0], [317.0, 4273.0], [318.0, 4935.0], [319.0, 8759.0], [332.0, 2667.0], [321.0, 4632.0], [322.0, 5256.0], [323.0, 7590.0], [325.0, 5190.5], [326.0, 3997.0], [327.0, 4645.0], [320.0, 5026.0], [329.0, 4466.0], [331.0, 4278.0], [334.0, 3779.0], [335.0, 7542.0], [336.0, 5656.0], [340.0, 5539.0], [345.0, 5225.0], [350.0, 7496.0], [351.0, 4637.0], [349.0, 5576.5], [339.0, 6038.0], [346.0, 7285.0], [343.0, 8334.666666666666], [341.0, 4319.5], [359.0, 7762.25], [356.0, 6865.0], [357.0, 6808.0], [364.0, 6312.75], [367.0, 3718.0], [362.0, 5192.8], [360.0, 8489.75], [358.0, 7236.0], [354.0, 5637.0], [370.0, 6517.0], [375.0, 4104.333333333333], [369.0, 8059.0], [377.0, 4896.5], [381.0, 6035.909090909091], [382.0, 7297.5], [380.0, 4436.0], [376.0, 6356.666666666667], [374.0, 8740.0], [371.0, 9487.0], [385.0, 5334.0], [384.0, 4585.333333333333], [396.0, 4625.0], [387.0, 5630.833333333334], [386.0, 5706.666666666667], [399.0, 4858.0], [397.0, 5517.0], [395.0, 7761.0], [394.0, 5061.166666666667], [391.0, 4779.0], [389.0, 5983.0], [388.0, 3535.3333333333335], [402.0, 4041.0], [401.0, 7763.0], [1.0, 176186.0]], "isOverall": false, "label": "login", "isController": false}, {"data": [[234.0219999999998, 10033.585999999998]], "isOverall": false, "label": "login-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 402.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 22.866666666666667, "minX": 1.72210098E12, "maxY": 29040.166666666668, "series": [{"data": [[1.72210104E12, 584.3833333333333], [1.7221011E12, 74.51666666666667], [1.72210098E12, 29040.166666666668], [1.72210116E12, 59.53333333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72210104E12, 228.81666666666666], [1.7221011E12, 31.2], [1.72210098E12, 11146.716666666667], [1.72210116E12, 22.866666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72210116E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 260.0, "minX": 1.72210098E12, "maxY": 176186.0, "series": [{"data": [[1.72210104E12, 404.20000000000005], [1.7221011E12, 260.0], [1.72210098E12, 874.524590163935], [1.72210116E12, 262.0]], "isOverall": false, "label": "GetBookingIds ", "isController": false}, {"data": [[1.72210104E12, 8328.2], [1.7221011E12, 771.0], [1.72210098E12, 848.1127049180324], [1.72210116E12, 942.0]], "isOverall": false, "label": "CreateBooking ", "isController": false}, {"data": [[1.72210104E12, 401.09090909090907], [1.7221011E12, 65773.0], [1.72210098E12, 709.7962962962961], [1.72210116E12, 265.0]], "isOverall": false, "label": "UpdateBooking ", "isController": false}, {"data": [[1.72210104E12, 59644.75], [1.7221011E12, 102670.0], [1.72210098E12, 8695.467346938776], [1.72210116E12, 176186.0]], "isOverall": false, "label": "login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72210116E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 260.0, "minX": 1.72210098E12, "maxY": 176186.0, "series": [{"data": [[1.72210104E12, 404.1], [1.7221011E12, 260.0], [1.72210098E12, 874.4979508196726], [1.72210116E12, 262.0]], "isOverall": false, "label": "GetBookingIds ", "isController": false}, {"data": [[1.72210104E12, 8328.2], [1.7221011E12, 771.0], [1.72210098E12, 848.1024590163937], [1.72210116E12, 942.0]], "isOverall": false, "label": "CreateBooking ", "isController": false}, {"data": [[1.72210104E12, 401.0], [1.7221011E12, 65773.0], [1.72210098E12, 709.7818930041152], [1.72210116E12, 265.0]], "isOverall": false, "label": "UpdateBooking ", "isController": false}, {"data": [[1.72210104E12, 59644.75], [1.7221011E12, 102670.0], [1.72210098E12, 8695.442857142865], [1.72210116E12, 176186.0]], "isOverall": false, "label": "login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72210116E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72210098E12, "maxY": 175419.0, "series": [{"data": [[1.72210104E12, 0.0], [1.7221011E12, 0.0], [1.72210098E12, 0.0], [1.72210116E12, 0.0]], "isOverall": false, "label": "GetBookingIds ", "isController": false}, {"data": [[1.72210104E12, 117.69999999999999], [1.7221011E12, 511.0], [1.72210098E12, 0.0], [1.72210116E12, 680.0]], "isOverall": false, "label": "CreateBooking ", "isController": false}, {"data": [[1.72210104E12, 0.0], [1.7221011E12, 0.0], [1.72210098E12, 0.0], [1.72210116E12, 0.0]], "isOverall": false, "label": "UpdateBooking ", "isController": false}, {"data": [[1.72210104E12, 58534.875], [1.7221011E12, 51475.0], [1.72210098E12, 7743.361224489799], [1.72210116E12, 175419.0]], "isOverall": false, "label": "login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72210116E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 229.0, "minX": 1.72210098E12, "maxY": 176186.0, "series": [{"data": [[1.72210104E12, 94558.0], [1.7221011E12, 131285.0], [1.72210098E12, 42581.0], [1.72210116E12, 176186.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72210104E12, 233.0], [1.7221011E12, 260.0], [1.72210098E12, 229.0], [1.72210116E12, 262.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72210104E12, 52664.0], [1.7221011E12, 131285.0], [1.72210098E12, 8606.700000000003], [1.72210116E12, 176186.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72210104E12, 94558.0], [1.7221011E12, 131285.0], [1.72210098E12, 24549.7], [1.72210116E12, 176186.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72210104E12, 267.0], [1.7221011E12, 771.0], [1.72210098E12, 452.0], [1.72210116E12, 603.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.72210104E12, 88336.0], [1.7221011E12, 131285.0], [1.72210098E12, 13259.5], [1.72210116E12, 176186.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72210116E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 254.5, "minX": 1.0, "maxY": 49951.0, "series": [{"data": [[2.0, 264.0], [47.0, 466.5], [3.0, 381.0], [50.0, 1451.0], [55.0, 269.0], [60.0, 464.5], [62.0, 259.5], [67.0, 462.0], [66.0, 839.5], [64.0, 1421.5], [71.0, 260.0], [75.0, 1371.0], [78.0, 452.0], [5.0, 268.5], [6.0, 254.5], [104.0, 455.0], [107.0, 1172.0], [7.0, 500.0], [131.0, 453.0], [128.0, 264.5], [130.0, 260.0], [138.0, 259.0], [159.0, 412.0], [10.0, 426.0], [11.0, 6653.0], [13.0, 256.0], [15.0, 256.0], [16.0, 265.5], [1.0, 49951.0], [19.0, 748.0], [20.0, 269.5], [21.0, 256.5], [25.0, 264.0], [27.0, 1418.0], [31.0, 257.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 159.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 254.5, "minX": 1.0, "maxY": 49951.0, "series": [{"data": [[2.0, 264.0], [47.0, 466.5], [3.0, 381.0], [50.0, 1451.0], [55.0, 269.0], [60.0, 464.5], [62.0, 259.5], [67.0, 462.0], [66.0, 839.5], [64.0, 1421.5], [71.0, 260.0], [75.0, 1371.0], [78.0, 452.0], [5.0, 268.0], [6.0, 254.5], [104.0, 455.0], [107.0, 1172.0], [7.0, 500.0], [131.0, 453.0], [128.0, 264.5], [130.0, 260.0], [138.0, 259.0], [159.0, 412.0], [10.0, 426.0], [11.0, 6653.0], [13.0, 256.0], [15.0, 256.0], [16.0, 265.5], [1.0, 49951.0], [19.0, 748.0], [20.0, 269.5], [21.0, 256.5], [25.0, 264.0], [27.0, 1418.0], [31.0, 257.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 159.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.72210098E12, "maxY": 32.766666666666666, "series": [{"data": [[1.72210104E12, 0.4666666666666667], [1.7221011E12, 0.05], [1.72210098E12, 32.766666666666666], [1.72210116E12, 0.05]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72210116E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.72210098E12, "maxY": 32.53333333333333, "series": [{"data": [[1.72210104E12, 0.65], [1.7221011E12, 0.08333333333333333], [1.72210098E12, 32.53333333333333], [1.72210116E12, 0.06666666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72210116E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.72210098E12, "maxY": 8.166666666666666, "series": [{"data": [[1.72210104E12, 0.16666666666666666], [1.7221011E12, 0.016666666666666666], [1.72210098E12, 8.133333333333333], [1.72210116E12, 0.016666666666666666]], "isOverall": false, "label": "GetBookingIds -success", "isController": false}, {"data": [[1.72210104E12, 0.18333333333333332], [1.7221011E12, 0.03333333333333333], [1.72210098E12, 8.1], [1.72210116E12, 0.016666666666666666]], "isOverall": false, "label": "UpdateBooking -success", "isController": false}, {"data": [[1.72210104E12, 0.13333333333333333], [1.7221011E12, 0.016666666666666666], [1.72210098E12, 8.166666666666666], [1.72210116E12, 0.016666666666666666]], "isOverall": false, "label": "login-success", "isController": false}, {"data": [[1.72210104E12, 0.16666666666666666], [1.7221011E12, 0.016666666666666666], [1.72210098E12, 8.133333333333333], [1.72210116E12, 0.016666666666666666]], "isOverall": false, "label": "CreateBooking -success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72210116E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.72210098E12, "maxY": 32.53333333333333, "series": [{"data": [[1.72210104E12, 0.65], [1.7221011E12, 0.08333333333333333], [1.72210098E12, 32.53333333333333], [1.72210116E12, 0.06666666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72210116E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

